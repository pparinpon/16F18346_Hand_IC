

Microchip Technology PIC LITE Macro Assembler V1.37 build -260352376 
                                                                                               Wed Jul 18 07:34:04 2018

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	16LF18346
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	eeprom_data,global,class=EEDATA,space=3,delta=2
     5                           	psect	idataCOMMON,global,class=CODE,delta=2
     6                           	psect	idataBANK0,global,class=CODE,delta=2
     7                           	psect	idataBANK1,global,class=CODE,delta=2
     8                           	psect	stringtext,global,class=STRCODE,delta=2
     9                           	psect	bitnvCOMMON,global,bit,class=COMMON,space=1,delta=1
    10                           	psect	cinit,global,class=CODE,merge=1,delta=2
    11                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1
    12                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    18                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    19                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    20                           	psect	clrtext,global,class=CODE,delta=2
    21                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    22                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    23                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    24                           	psect	text1,local,class=CODE,merge=1,delta=2
    25                           	psect	text2,local,class=CODE,merge=1,delta=2
    26                           	psect	text3,local,class=CODE,merge=1,delta=2
    27                           	psect	text4,local,class=CODE,merge=1,delta=2
    28                           	psect	text5,local,class=CODE,merge=1,delta=2
    29                           	psect	swtext1,local,class=CONST,delta=2
    30                           	psect	text6,local,class=CODE,merge=1,delta=2
    31                           	psect	swtext2,local,class=CONST,delta=2
    32                           	psect	text7,local,class=CODE,merge=1,delta=2
    33                           	psect	text8,local,class=CODE,merge=1,delta=2
    34                           	psect	text9,local,class=CODE,merge=1,delta=2
    35                           	psect	text10,local,class=CODE,merge=1,delta=2
    36                           	psect	swtext3,local,class=CONST,delta=2
    37                           	psect	text11,local,class=CODE,merge=1,delta=2
    38                           	psect	text12,local,class=CODE,merge=1,delta=2
    39                           	psect	swtext4,local,class=CONST,delta=2
    40                           	psect	text13,local,class=CODE,merge=1,delta=2
    41                           	psect	text14,local,class=CODE,merge=1,delta=2
    42                           	psect	text15,local,class=CODE,merge=1,delta=2
    43                           	psect	text16,local,class=CODE,merge=1,delta=2
    44                           	psect	text17,local,class=CODE,merge=1,delta=2
    45                           	psect	text18,local,class=CODE,merge=1,delta=2
    46                           	psect	text19,local,class=CODE,merge=1,delta=2
    47                           	psect	text20,local,class=CODE,merge=1,delta=2
    48                           	psect	text21,local,class=CODE,merge=1,delta=2
    49                           	psect	text22,local,class=CODE,merge=1,delta=2
    50                           	psect	text23,local,class=CODE,merge=1,delta=2
    51                           	psect	text24,local,class=CODE,merge=1,delta=2
    52                           	psect	text25,local,class=CODE,merge=1,delta=2
    53                           	psect	text26,local,class=CODE,merge=1,delta=2
    54                           	psect	text27,local,class=CODE,merge=1,delta=2
    55                           	psect	text28,local,class=CODE,merge=1,delta=2
    56                           	psect	text29,local,class=CODE,merge=1,delta=2
    57                           	psect	text30,local,class=CODE,merge=1,delta=2
    58                           	psect	text31,local,class=CODE,merge=1,delta=2
    59                           	psect	text32,local,class=CODE,merge=1,delta=2
    60                           	psect	text33,local,class=CODE,merge=1,delta=2
    61                           	psect	text34,local,class=CODE,merge=1,delta=2
    62                           	psect	text35,local,class=CODE,merge=1,delta=2
    63                           	psect	text36,local,class=CODE,merge=1,delta=2
    64                           	psect	intentry,global,class=CODE,delta=2
    65                           	psect	text38,local,class=CODE,merge=1,delta=2
    66                           	psect	text39,local,class=CODE,merge=1,delta=2
    67                           	psect	text40,local,class=CODE,merge=1,delta=2
    68                           	psect	text41,local,class=CODE,merge=1,delta=2
    69                           	psect	text42,local,class=CODE,merge=1,delta=2
    70                           	dabs	1,0xCA0,32
    71                           	dabs	1,0xC20,80
    72                           	dabs	1,0xBA0,80
    73                           	dabs	1,0xB30,64
    74                           	dabs	1,0xB20,16
    75                           	dabs	1,0xAA0,80
    76                           	dabs	1,0xA20,80
    77                           	dabs	1,0x9A0,80
    78                           	dabs	1,0x920,80
    79                           	dabs	1,0x8A0,80
    80                           	dabs	1,0x820,80
    81                           	dabs	1,0x7E0,16
    82                           	dabs	1,0x24F0,0,_spi1_buffer_data
    83                           	dabs	1,0x26F0,0,_spi1_send_buffer_data
    84                           	dabs	1,0x25F0,0,_spi2_buffer_data
    85                           	dabs	1,0x7E,2
    86  0000                     	;# 
    87  0001                     	;# 
    88  0002                     	;# 
    89  0003                     	;# 
    90  0004                     	;# 
    91  0005                     	;# 
    92  0006                     	;# 
    93  0007                     	;# 
    94  0008                     	;# 
    95  0009                     	;# 
    96  000A                     	;# 
    97  000B                     	;# 
    98  000C                     	;# 
    99  000D                     	;# 
   100  000E                     	;# 
   101  0010                     	;# 
   102  0011                     	;# 
   103  0012                     	;# 
   104  0013                     	;# 
   105  0014                     	;# 
   106  0015                     	;# 
   107  0016                     	;# 
   108  0017                     	;# 
   109  0018                     	;# 
   110  0019                     	;# 
   111  0019                     	;# 
   112  001A                     	;# 
   113  001B                     	;# 
   114  001C                     	;# 
   115  001D                     	;# 
   116  001E                     	;# 
   117  001F                     	;# 
   118  008C                     	;# 
   119  008D                     	;# 
   120  008E                     	;# 
   121  0090                     	;# 
   122  0091                     	;# 
   123  0092                     	;# 
   124  0093                     	;# 
   125  0094                     	;# 
   126  0097                     	;# 
   127  009B                     	;# 
   128  009B                     	;# 
   129  009C                     	;# 
   130  009D                     	;# 
   131  009E                     	;# 
   132  009F                     	;# 
   133  010C                     	;# 
   134  010D                     	;# 
   135  010E                     	;# 
   136  0111                     	;# 
   137  0112                     	;# 
   138  0113                     	;# 
   139  0114                     	;# 
   140  0115                     	;# 
   141  0116                     	;# 
   142  0117                     	;# 
   143  0118                     	;# 
   144  0119                     	;# 
   145  018C                     	;# 
   146  018D                     	;# 
   147  018E                     	;# 
   148  0199                     	;# 
   149  0199                     	;# 
   150  0199                     	;# 
   151  019A                     	;# 
   152  019A                     	;# 
   153  019A                     	;# 
   154  019B                     	;# 
   155  019B                     	;# 
   156  019B                     	;# 
   157  019B                     	;# 
   158  019B                     	;# 
   159  019C                     	;# 
   160  019C                     	;# 
   161  019C                     	;# 
   162  019D                     	;# 
   163  019D                     	;# 
   164  019D                     	;# 
   165  019E                     	;# 
   166  019E                     	;# 
   167  019E                     	;# 
   168  019F                     	;# 
   169  019F                     	;# 
   170  019F                     	;# 
   171  019F                     	;# 
   172  019F                     	;# 
   173  020C                     	;# 
   174  020D                     	;# 
   175  020E                     	;# 
   176  0211                     	;# 
   177  0211                     	;# 
   178  0212                     	;# 
   179  0212                     	;# 
   180  0213                     	;# 
   181  0213                     	;# 
   182  0214                     	;# 
   183  0214                     	;# 
   184  0215                     	;# 
   185  0215                     	;# 
   186  0215                     	;# 
   187  0215                     	;# 
   188  0216                     	;# 
   189  0216                     	;# 
   190  0217                     	;# 
   191  0217                     	;# 
   192  0219                     	;# 
   193  021A                     	;# 
   194  021B                     	;# 
   195  021C                     	;# 
   196  021D                     	;# 
   197  021D                     	;# 
   198  021E                     	;# 
   199  021F                     	;# 
   200  028C                     	;# 
   201  028D                     	;# 
   202  028E                     	;# 
   203  0291                     	;# 
   204  0291                     	;# 
   205  0292                     	;# 
   206  0293                     	;# 
   207  0294                     	;# 
   208  0295                     	;# 
   209  0295                     	;# 
   210  0296                     	;# 
   211  0297                     	;# 
   212  0298                     	;# 
   213  029F                     	;# 
   214  030C                     	;# 
   215  030D                     	;# 
   216  030E                     	;# 
   217  0311                     	;# 
   218  0311                     	;# 
   219  0312                     	;# 
   220  0313                     	;# 
   221  0314                     	;# 
   222  0315                     	;# 
   223  0315                     	;# 
   224  0316                     	;# 
   225  0317                     	;# 
   226  0318                     	;# 
   227  038C                     	;# 
   228  038D                     	;# 
   229  038E                     	;# 
   230  0391                     	;# 
   231  0392                     	;# 
   232  0393                     	;# 
   233  0394                     	;# 
   234  0395                     	;# 
   235  0396                     	;# 
   236  0397                     	;# 
   237  0398                     	;# 
   238  0399                     	;# 
   239  039A                     	;# 
   240  039C                     	;# 
   241  039D                     	;# 
   242  039E                     	;# 
   243  039F                     	;# 
   244  040C                     	;# 
   245  040D                     	;# 
   246  040E                     	;# 
   247  0411                     	;# 
   248  0411                     	;# 
   249  0412                     	;# 
   250  0413                     	;# 
   251  0414                     	;# 
   252  0415                     	;# 
   253  0416                     	;# 
   254  0417                     	;# 
   255  0418                     	;# 
   256  0418                     	;# 
   257  0419                     	;# 
   258  041A                     	;# 
   259  041B                     	;# 
   260  041C                     	;# 
   261  041D                     	;# 
   262  041E                     	;# 
   263  041F                     	;# 
   264  048C                     	;# 
   265  048D                     	;# 
   266  048E                     	;# 
   267  0498                     	;# 
   268  0498                     	;# 
   269  0499                     	;# 
   270  049A                     	;# 
   271  049B                     	;# 
   272  049B                     	;# 
   273  049C                     	;# 
   274  049D                     	;# 
   275  049E                     	;# 
   276  049F                     	;# 
   277  0617                     	;# 
   278  0618                     	;# 
   279  0619                     	;# 
   280  0619                     	;# 
   281  061A                     	;# 
   282  061B                     	;# 
   283  061C                     	;# 
   284  061C                     	;# 
   285  061F                     	;# 
   286  0691                     	;# 
   287  0692                     	;# 
   288  0693                     	;# 
   289  0694                     	;# 
   290  0695                     	;# 
   291  0696                     	;# 
   292  0697                     	;# 
   293  0698                     	;# 
   294  0699                     	;# 
   295  0711                     	;# 
   296  0712                     	;# 
   297  0713                     	;# 
   298  0714                     	;# 
   299  0715                     	;# 
   300  0716                     	;# 
   301  0717                     	;# 
   302  0718                     	;# 
   303  0719                     	;# 
   304  0891                     	;# 
   305  0891                     	;# 
   306  0892                     	;# 
   307  0893                     	;# 
   308  0893                     	;# 
   309  0894                     	;# 
   310  0895                     	;# 
   311  0896                     	;# 
   312  089B                     	;# 
   313  0911                     	;# 
   314  0912                     	;# 
   315  0913                     	;# 
   316  0914                     	;# 
   317  0915                     	;# 
   318  0916                     	;# 
   319  0918                     	;# 
   320  0919                     	;# 
   321  091A                     	;# 
   322  091B                     	;# 
   323  091C                     	;# 
   324  091D                     	;# 
   325  091E                     	;# 
   326  091F                     	;# 
   327  0E0F                     	;# 
   328  0E10                     	;# 
   329  0E11                     	;# 
   330  0E12                     	;# 
   331  0E13                     	;# 
   332  0E14                     	;# 
   333  0E15                     	;# 
   334  0E16                     	;# 
   335  0E17                     	;# 
   336  0E18                     	;# 
   337  0E19                     	;# 
   338  0E1A                     	;# 
   339  0E1B                     	;# 
   340  0E1C                     	;# 
   341  0E1D                     	;# 
   342  0E1E                     	;# 
   343  0E1F                     	;# 
   344  0E20                     	;# 
   345  0E21                     	;# 
   346  0E22                     	;# 
   347  0E24                     	;# 
   348  0E25                     	;# 
   349  0E28                     	;# 
   350  0E29                     	;# 
   351  0E2A                     	;# 
   352  0E2B                     	;# 
   353  0E2C                     	;# 
   354  0E2D                     	;# 
   355  0E2E                     	;# 
   356  0E2F                     	;# 
   357  0E90                     	;# 
   358  0E91                     	;# 
   359  0E92                     	;# 
   360  0E94                     	;# 
   361  0E95                     	;# 
   362  0E9C                     	;# 
   363  0E9D                     	;# 
   364  0E9E                     	;# 
   365  0E9F                     	;# 
   366  0EA0                     	;# 
   367  0EA1                     	;# 
   368  0EA2                     	;# 
   369  0EA3                     	;# 
   370  0EA4                     	;# 
   371  0EA5                     	;# 
   372  0EA6                     	;# 
   373  0EA7                     	;# 
   374  0F0F                     	;# 
   375  0F10                     	;# 
   376  0F11                     	;# 
   377  0F12                     	;# 
   378  0F13                     	;# 
   379  0F14                     	;# 
   380  0F15                     	;# 
   381  0F16                     	;# 
   382  0F17                     	;# 
   383  0F18                     	;# 
   384  0F19                     	;# 
   385  0F1A                     	;# 
   386  0F1B                     	;# 
   387  0F1C                     	;# 
   388  0F1D                     	;# 
   389  0F1E                     	;# 
   390  0F1F                     	;# 
   391  0F20                     	;# 
   392  0F21                     	;# 
   393  0F22                     	;# 
   394  0F23                     	;# 
   395  0F24                     	;# 
   396  0F25                     	;# 
   397  0F26                     	;# 
   398  0F27                     	;# 
   399  0F28                     	;# 
   400  0F29                     	;# 
   401  0F2A                     	;# 
   402  0F2B                     	;# 
   403  0F2C                     	;# 
   404  0F2D                     	;# 
   405  0F2E                     	;# 
   406  0F2F                     	;# 
   407  0F30                     	;# 
   408  0F31                     	;# 
   409  0F32                     	;# 
   410  0F33                     	;# 
   411  0F34                     	;# 
   412  0F35                     	;# 
   413  0F36                     	;# 
   414  0F37                     	;# 
   415  0FE4                     	;# 
   416  0FE5                     	;# 
   417  0FE6                     	;# 
   418  0FE7                     	;# 
   419  0FE8                     	;# 
   420  0FE9                     	;# 
   421  0FEA                     	;# 
   422  0FEB                     	;# 
   423  0FED                     	;# 
   424  0FEE                     	;# 
   425  0FEF                     	;# 
   426  0000                     	;# 
   427  0001                     	;# 
   428  0002                     	;# 
   429  0003                     	;# 
   430  0004                     	;# 
   431  0005                     	;# 
   432  0006                     	;# 
   433  0007                     	;# 
   434  0008                     	;# 
   435  0009                     	;# 
   436  000A                     	;# 
   437  000B                     	;# 
   438  000C                     	;# 
   439  000D                     	;# 
   440  000E                     	;# 
   441  0010                     	;# 
   442  0011                     	;# 
   443  0012                     	;# 
   444  0013                     	;# 
   445  0014                     	;# 
   446  0015                     	;# 
   447  0016                     	;# 
   448  0017                     	;# 
   449  0018                     	;# 
   450  0019                     	;# 
   451  0019                     	;# 
   452  001A                     	;# 
   453  001B                     	;# 
   454  001C                     	;# 
   455  001D                     	;# 
   456  001E                     	;# 
   457  001F                     	;# 
   458  008C                     	;# 
   459  008D                     	;# 
   460  008E                     	;# 
   461  0090                     	;# 
   462  0091                     	;# 
   463  0092                     	;# 
   464  0093                     	;# 
   465  0094                     	;# 
   466  0097                     	;# 
   467  009B                     	;# 
   468  009B                     	;# 
   469  009C                     	;# 
   470  009D                     	;# 
   471  009E                     	;# 
   472  009F                     	;# 
   473  010C                     	;# 
   474  010D                     	;# 
   475  010E                     	;# 
   476  0111                     	;# 
   477  0112                     	;# 
   478  0113                     	;# 
   479  0114                     	;# 
   480  0115                     	;# 
   481  0116                     	;# 
   482  0117                     	;# 
   483  0118                     	;# 
   484  0119                     	;# 
   485  018C                     	;# 
   486  018D                     	;# 
   487  018E                     	;# 
   488  0197                     	;# 
   489  0199                     	;# 
   490  0199                     	;# 
   491  0199                     	;# 
   492  019A                     	;# 
   493  019A                     	;# 
   494  019A                     	;# 
   495  019B                     	;# 
   496  019B                     	;# 
   497  019B                     	;# 
   498  019B                     	;# 
   499  019B                     	;# 
   500  019C                     	;# 
   501  019C                     	;# 
   502  019C                     	;# 
   503  019D                     	;# 
   504  019D                     	;# 
   505  019D                     	;# 
   506  019E                     	;# 
   507  019E                     	;# 
   508  019E                     	;# 
   509  019F                     	;# 
   510  019F                     	;# 
   511  019F                     	;# 
   512  019F                     	;# 
   513  019F                     	;# 
   514  020C                     	;# 
   515  020D                     	;# 
   516  020E                     	;# 
   517  0211                     	;# 
   518  0211                     	;# 
   519  0212                     	;# 
   520  0212                     	;# 
   521  0213                     	;# 
   522  0213                     	;# 
   523  0214                     	;# 
   524  0214                     	;# 
   525  0215                     	;# 
   526  0215                     	;# 
   527  0215                     	;# 
   528  0215                     	;# 
   529  0216                     	;# 
   530  0216                     	;# 
   531  0217                     	;# 
   532  0217                     	;# 
   533  0219                     	;# 
   534  021A                     	;# 
   535  021B                     	;# 
   536  021C                     	;# 
   537  021D                     	;# 
   538  021D                     	;# 
   539  021E                     	;# 
   540  021F                     	;# 
   541  028C                     	;# 
   542  028D                     	;# 
   543  028E                     	;# 
   544  0291                     	;# 
   545  0291                     	;# 
   546  0292                     	;# 
   547  0293                     	;# 
   548  0294                     	;# 
   549  0295                     	;# 
   550  0295                     	;# 
   551  0296                     	;# 
   552  0297                     	;# 
   553  0298                     	;# 
   554  029F                     	;# 
   555  030C                     	;# 
   556  030D                     	;# 
   557  030E                     	;# 
   558  0311                     	;# 
   559  0311                     	;# 
   560  0312                     	;# 
   561  0313                     	;# 
   562  0314                     	;# 
   563  0315                     	;# 
   564  0315                     	;# 
   565  0316                     	;# 
   566  0317                     	;# 
   567  0318                     	;# 
   568  038C                     	;# 
   569  038D                     	;# 
   570  038E                     	;# 
   571  0391                     	;# 
   572  0392                     	;# 
   573  0393                     	;# 
   574  0394                     	;# 
   575  0395                     	;# 
   576  0396                     	;# 
   577  0397                     	;# 
   578  0398                     	;# 
   579  0399                     	;# 
   580  039A                     	;# 
   581  039C                     	;# 
   582  039D                     	;# 
   583  039E                     	;# 
   584  039F                     	;# 
   585  040C                     	;# 
   586  040D                     	;# 
   587  040E                     	;# 
   588  0411                     	;# 
   589  0411                     	;# 
   590  0412                     	;# 
   591  0413                     	;# 
   592  0414                     	;# 
   593  0415                     	;# 
   594  0416                     	;# 
   595  0417                     	;# 
   596  0418                     	;# 
   597  0418                     	;# 
   598  0419                     	;# 
   599  041A                     	;# 
   600  041B                     	;# 
   601  041C                     	;# 
   602  041D                     	;# 
   603  041E                     	;# 
   604  041F                     	;# 
   605  048C                     	;# 
   606  048D                     	;# 
   607  048E                     	;# 
   608  0498                     	;# 
   609  0498                     	;# 
   610  0499                     	;# 
   611  049A                     	;# 
   612  049B                     	;# 
   613  049B                     	;# 
   614  049C                     	;# 
   615  049D                     	;# 
   616  049E                     	;# 
   617  049F                     	;# 
   618  0617                     	;# 
   619  0618                     	;# 
   620  0619                     	;# 
   621  0619                     	;# 
   622  061A                     	;# 
   623  061B                     	;# 
   624  061C                     	;# 
   625  061C                     	;# 
   626  061F                     	;# 
   627  0691                     	;# 
   628  0692                     	;# 
   629  0693                     	;# 
   630  0694                     	;# 
   631  0695                     	;# 
   632  0696                     	;# 
   633  0697                     	;# 
   634  0698                     	;# 
   635  0699                     	;# 
   636  0711                     	;# 
   637  0712                     	;# 
   638  0713                     	;# 
   639  0714                     	;# 
   640  0715                     	;# 
   641  0716                     	;# 
   642  0717                     	;# 
   643  0718                     	;# 
   644  0719                     	;# 
   645  0891                     	;# 
   646  0891                     	;# 
   647  0892                     	;# 
   648  0893                     	;# 
   649  0893                     	;# 
   650  0894                     	;# 
   651  0895                     	;# 
   652  0896                     	;# 
   653  089B                     	;# 
   654  0911                     	;# 
   655  0912                     	;# 
   656  0913                     	;# 
   657  0914                     	;# 
   658  0915                     	;# 
   659  0916                     	;# 
   660  0918                     	;# 
   661  0919                     	;# 
   662  091A                     	;# 
   663  091B                     	;# 
   664  091C                     	;# 
   665  091D                     	;# 
   666  091E                     	;# 
   667  091F                     	;# 
   668  0E0F                     	;# 
   669  0E10                     	;# 
   670  0E11                     	;# 
   671  0E12                     	;# 
   672  0E13                     	;# 
   673  0E14                     	;# 
   674  0E15                     	;# 
   675  0E16                     	;# 
   676  0E17                     	;# 
   677  0E18                     	;# 
   678  0E19                     	;# 
   679  0E1A                     	;# 
   680  0E1B                     	;# 
   681  0E1C                     	;# 
   682  0E1D                     	;# 
   683  0E1E                     	;# 
   684  0E1F                     	;# 
   685  0E20                     	;# 
   686  0E21                     	;# 
   687  0E22                     	;# 
   688  0E24                     	;# 
   689  0E25                     	;# 
   690  0E28                     	;# 
   691  0E29                     	;# 
   692  0E2A                     	;# 
   693  0E2B                     	;# 
   694  0E2C                     	;# 
   695  0E2D                     	;# 
   696  0E2E                     	;# 
   697  0E2F                     	;# 
   698  0E90                     	;# 
   699  0E91                     	;# 
   700  0E92                     	;# 
   701  0E94                     	;# 
   702  0E95                     	;# 
   703  0E9C                     	;# 
   704  0E9D                     	;# 
   705  0E9E                     	;# 
   706  0E9F                     	;# 
   707  0EA0                     	;# 
   708  0EA1                     	;# 
   709  0EA2                     	;# 
   710  0EA3                     	;# 
   711  0EA4                     	;# 
   712  0EA5                     	;# 
   713  0EA6                     	;# 
   714  0EA7                     	;# 
   715  0F0F                     	;# 
   716  0F10                     	;# 
   717  0F11                     	;# 
   718  0F12                     	;# 
   719  0F13                     	;# 
   720  0F14                     	;# 
   721  0F15                     	;# 
   722  0F16                     	;# 
   723  0F17                     	;# 
   724  0F18                     	;# 
   725  0F19                     	;# 
   726  0F1A                     	;# 
   727  0F1B                     	;# 
   728  0F1C                     	;# 
   729  0F1D                     	;# 
   730  0F1E                     	;# 
   731  0F1F                     	;# 
   732  0F20                     	;# 
   733  0F21                     	;# 
   734  0F22                     	;# 
   735  0F23                     	;# 
   736  0F24                     	;# 
   737  0F25                     	;# 
   738  0F26                     	;# 
   739  0F27                     	;# 
   740  0F28                     	;# 
   741  0F29                     	;# 
   742  0F2A                     	;# 
   743  0F2B                     	;# 
   744  0F2C                     	;# 
   745  0F2D                     	;# 
   746  0F2E                     	;# 
   747  0F2F                     	;# 
   748  0F30                     	;# 
   749  0F31                     	;# 
   750  0F32                     	;# 
   751  0F33                     	;# 
   752  0F34                     	;# 
   753  0F35                     	;# 
   754  0F36                     	;# 
   755  0F37                     	;# 
   756  0FE4                     	;# 
   757  0FE5                     	;# 
   758  0FE6                     	;# 
   759  0FE7                     	;# 
   760  0FE8                     	;# 
   761  0FE9                     	;# 
   762  0FEA                     	;# 
   763  0FEB                     	;# 
   764  0FED                     	;# 
   765  0FEE                     	;# 
   766  0FEF                     	;# 
   767  0000                     	;# 
   768  0001                     	;# 
   769  0002                     	;# 
   770  0003                     	;# 
   771  0004                     	;# 
   772  0005                     	;# 
   773  0006                     	;# 
   774  0007                     	;# 
   775  0008                     	;# 
   776  0009                     	;# 
   777  000A                     	;# 
   778  000B                     	;# 
   779  000C                     	;# 
   780  000D                     	;# 
   781  000E                     	;# 
   782  0010                     	;# 
   783  0011                     	;# 
   784  0012                     	;# 
   785  0013                     	;# 
   786  0014                     	;# 
   787  0015                     	;# 
   788  0016                     	;# 
   789  0017                     	;# 
   790  0018                     	;# 
   791  0019                     	;# 
   792  0019                     	;# 
   793  001A                     	;# 
   794  001B                     	;# 
   795  001C                     	;# 
   796  001D                     	;# 
   797  001E                     	;# 
   798  001F                     	;# 
   799  008C                     	;# 
   800  008D                     	;# 
   801  008E                     	;# 
   802  0090                     	;# 
   803  0091                     	;# 
   804  0092                     	;# 
   805  0093                     	;# 
   806  0094                     	;# 
   807  0097                     	;# 
   808  009B                     	;# 
   809  009B                     	;# 
   810  009C                     	;# 
   811  009D                     	;# 
   812  009E                     	;# 
   813  009F                     	;# 
   814  010C                     	;# 
   815  010D                     	;# 
   816  010E                     	;# 
   817  0111                     	;# 
   818  0112                     	;# 
   819  0113                     	;# 
   820  0114                     	;# 
   821  0115                     	;# 
   822  0116                     	;# 
   823  0117                     	;# 
   824  0118                     	;# 
   825  0119                     	;# 
   826  018C                     	;# 
   827  018D                     	;# 
   828  018E                     	;# 
   829  0199                     	;# 
   830  0199                     	;# 
   831  0199                     	;# 
   832  019A                     	;# 
   833  019A                     	;# 
   834  019A                     	;# 
   835  019B                     	;# 
   836  019B                     	;# 
   837  019B                     	;# 
   838  019B                     	;# 
   839  019B                     	;# 
   840  019C                     	;# 
   841  019C                     	;# 
   842  019C                     	;# 
   843  019D                     	;# 
   844  019D                     	;# 
   845  019D                     	;# 
   846  019E                     	;# 
   847  019E                     	;# 
   848  019E                     	;# 
   849  019F                     	;# 
   850  019F                     	;# 
   851  019F                     	;# 
   852  019F                     	;# 
   853  019F                     	;# 
   854  020C                     	;# 
   855  020D                     	;# 
   856  020E                     	;# 
   857  0211                     	;# 
   858  0211                     	;# 
   859  0212                     	;# 
   860  0212                     	;# 
   861  0213                     	;# 
   862  0213                     	;# 
   863  0214                     	;# 
   864  0214                     	;# 
   865  0215                     	;# 
   866  0215                     	;# 
   867  0215                     	;# 
   868  0215                     	;# 
   869  0216                     	;# 
   870  0216                     	;# 
   871  0217                     	;# 
   872  0217                     	;# 
   873  0219                     	;# 
   874  021A                     	;# 
   875  021B                     	;# 
   876  021C                     	;# 
   877  021D                     	;# 
   878  021D                     	;# 
   879  021E                     	;# 
   880  021F                     	;# 
   881  028C                     	;# 
   882  028D                     	;# 
   883  028E                     	;# 
   884  0291                     	;# 
   885  0291                     	;# 
   886  0292                     	;# 
   887  0293                     	;# 
   888  0294                     	;# 
   889  0295                     	;# 
   890  0295                     	;# 
   891  0296                     	;# 
   892  0297                     	;# 
   893  0298                     	;# 
   894  029F                     	;# 
   895  030C                     	;# 
   896  030D                     	;# 
   897  030E                     	;# 
   898  0311                     	;# 
   899  0311                     	;# 
   900  0312                     	;# 
   901  0313                     	;# 
   902  0314                     	;# 
   903  0315                     	;# 
   904  0315                     	;# 
   905  0316                     	;# 
   906  0317                     	;# 
   907  0318                     	;# 
   908  038C                     	;# 
   909  038D                     	;# 
   910  038E                     	;# 
   911  0391                     	;# 
   912  0392                     	;# 
   913  0393                     	;# 
   914  0394                     	;# 
   915  0395                     	;# 
   916  0396                     	;# 
   917  0397                     	;# 
   918  0398                     	;# 
   919  0399                     	;# 
   920  039A                     	;# 
   921  039C                     	;# 
   922  039D                     	;# 
   923  039E                     	;# 
   924  039F                     	;# 
   925  040C                     	;# 
   926  040D                     	;# 
   927  040E                     	;# 
   928  0411                     	;# 
   929  0411                     	;# 
   930  0412                     	;# 
   931  0413                     	;# 
   932  0414                     	;# 
   933  0415                     	;# 
   934  0416                     	;# 
   935  0417                     	;# 
   936  0418                     	;# 
   937  0418                     	;# 
   938  0419                     	;# 
   939  041A                     	;# 
   940  041B                     	;# 
   941  041C                     	;# 
   942  041D                     	;# 
   943  041E                     	;# 
   944  041F                     	;# 
   945  048C                     	;# 
   946  048D                     	;# 
   947  048E                     	;# 
   948  0498                     	;# 
   949  0498                     	;# 
   950  0499                     	;# 
   951  049A                     	;# 
   952  049B                     	;# 
   953  049B                     	;# 
   954  049C                     	;# 
   955  049D                     	;# 
   956  049E                     	;# 
   957  049F                     	;# 
   958  0617                     	;# 
   959  0618                     	;# 
   960  0619                     	;# 
   961  0619                     	;# 
   962  061A                     	;# 
   963  061B                     	;# 
   964  061C                     	;# 
   965  061C                     	;# 
   966  061F                     	;# 
   967  0691                     	;# 
   968  0692                     	;# 
   969  0693                     	;# 
   970  0694                     	;# 
   971  0695                     	;# 
   972  0696                     	;# 
   973  0697                     	;# 
   974  0698                     	;# 
   975  0699                     	;# 
   976  0711                     	;# 
   977  0712                     	;# 
   978  0713                     	;# 
   979  0714                     	;# 
   980  0715                     	;# 
   981  0716                     	;# 
   982  0717                     	;# 
   983  0718                     	;# 
   984  0719                     	;# 
   985  0891                     	;# 
   986  0891                     	;# 
   987  0892                     	;# 
   988  0893                     	;# 
   989  0893                     	;# 
   990  0894                     	;# 
   991  0895                     	;# 
   992  0896                     	;# 
   993  089B                     	;# 
   994  0911                     	;# 
   995  0912                     	;# 
   996  0913                     	;# 
   997  0914                     	;# 
   998  0915                     	;# 
   999  0916                     	;# 
  1000  0918                     	;# 
  1001  0919                     	;# 
  1002  091A                     	;# 
  1003  091B                     	;# 
  1004  091C                     	;# 
  1005  091D                     	;# 
  1006  091E                     	;# 
  1007  091F                     	;# 
  1008  0E0F                     	;# 
  1009  0E10                     	;# 
  1010  0E11                     	;# 
  1011  0E12                     	;# 
  1012  0E13                     	;# 
  1013  0E14                     	;# 
  1014  0E15                     	;# 
  1015  0E16                     	;# 
  1016  0E17                     	;# 
  1017  0E18                     	;# 
  1018  0E19                     	;# 
  1019  0E1A                     	;# 
  1020  0E1B                     	;# 
  1021  0E1C                     	;# 
  1022  0E1D                     	;# 
  1023  0E1E                     	;# 
  1024  0E1F                     	;# 
  1025  0E20                     	;# 
  1026  0E21                     	;# 
  1027  0E22                     	;# 
  1028  0E24                     	;# 
  1029  0E25                     	;# 
  1030  0E28                     	;# 
  1031  0E29                     	;# 
  1032  0E2A                     	;# 
  1033  0E2B                     	;# 
  1034  0E2C                     	;# 
  1035  0E2D                     	;# 
  1036  0E2E                     	;# 
  1037  0E2F                     	;# 
  1038  0E90                     	;# 
  1039  0E91                     	;# 
  1040  0E92                     	;# 
  1041  0E94                     	;# 
  1042  0E95                     	;# 
  1043  0E9C                     	;# 
  1044  0E9D                     	;# 
  1045  0E9E                     	;# 
  1046  0E9F                     	;# 
  1047  0EA0                     	;# 
  1048  0EA1                     	;# 
  1049  0EA2                     	;# 
  1050  0EA3                     	;# 
  1051  0EA4                     	;# 
  1052  0EA5                     	;# 
  1053  0EA6                     	;# 
  1054  0EA7                     	;# 
  1055  0F0F                     	;# 
  1056  0F10                     	;# 
  1057  0F11                     	;# 
  1058  0F12                     	;# 
  1059  0F13                     	;# 
  1060  0F14                     	;# 
  1061  0F15                     	;# 
  1062  0F16                     	;# 
  1063  0F17                     	;# 
  1064  0F18                     	;# 
  1065  0F19                     	;# 
  1066  0F1A                     	;# 
  1067  0F1B                     	;# 
  1068  0F1C                     	;# 
  1069  0F1D                     	;# 
  1070  0F1E                     	;# 
  1071  0F1F                     	;# 
  1072  0F20                     	;# 
  1073  0F21                     	;# 
  1074  0F22                     	;# 
  1075  0F23                     	;# 
  1076  0F24                     	;# 
  1077  0F25                     	;# 
  1078  0F26                     	;# 
  1079  0F27                     	;# 
  1080  0F28                     	;# 
  1081  0F29                     	;# 
  1082  0F2A                     	;# 
  1083  0F2B                     	;# 
  1084  0F2C                     	;# 
  1085  0F2D                     	;# 
  1086  0F2E                     	;# 
  1087  0F2F                     	;# 
  1088  0F30                     	;# 
  1089  0F31                     	;# 
  1090  0F32                     	;# 
  1091  0F33                     	;# 
  1092  0F34                     	;# 
  1093  0F35                     	;# 
  1094  0F36                     	;# 
  1095  0F37                     	;# 
  1096  0FE4                     	;# 
  1097  0FE5                     	;# 
  1098  0FE6                     	;# 
  1099  0FE7                     	;# 
  1100  0FE8                     	;# 
  1101  0FE9                     	;# 
  1102  0FEA                     	;# 
  1103  0FEB                     	;# 
  1104  0FED                     	;# 
  1105  0FEE                     	;# 
  1106  0FEF                     	;# 
  1107  0000                     	;# 
  1108  0001                     	;# 
  1109  0002                     	;# 
  1110  0003                     	;# 
  1111  0004                     	;# 
  1112  0005                     	;# 
  1113  0006                     	;# 
  1114  0007                     	;# 
  1115  0008                     	;# 
  1116  0009                     	;# 
  1117  000A                     	;# 
  1118  000B                     	;# 
  1119  000C                     	;# 
  1120  000D                     	;# 
  1121  000E                     	;# 
  1122  0010                     	;# 
  1123  0011                     	;# 
  1124  0012                     	;# 
  1125  0013                     	;# 
  1126  0014                     	;# 
  1127  0015                     	;# 
  1128  0016                     	;# 
  1129  0017                     	;# 
  1130  0018                     	;# 
  1131  0019                     	;# 
  1132  0019                     	;# 
  1133  001A                     	;# 
  1134  001B                     	;# 
  1135  001C                     	;# 
  1136  001D                     	;# 
  1137  001E                     	;# 
  1138  001F                     	;# 
  1139  008C                     	;# 
  1140  008D                     	;# 
  1141  008E                     	;# 
  1142  0090                     	;# 
  1143  0091                     	;# 
  1144  0092                     	;# 
  1145  0093                     	;# 
  1146  0094                     	;# 
  1147  0097                     	;# 
  1148  009B                     	;# 
  1149  009B                     	;# 
  1150  009C                     	;# 
  1151  009D                     	;# 
  1152  009E                     	;# 
  1153  009F                     	;# 
  1154  010C                     	;# 
  1155  010D                     	;# 
  1156  010E                     	;# 
  1157  0111                     	;# 
  1158  0112                     	;# 
  1159  0113                     	;# 
  1160  0114                     	;# 
  1161  0115                     	;# 
  1162  0116                     	;# 
  1163  0117                     	;# 
  1164  0118                     	;# 
  1165  0119                     	;# 
  1166  018C                     	;# 
  1167  018D                     	;# 
  1168  018E                     	;# 
  1169  0197                     	;# 
  1170  0199                     	;# 
  1171  0199                     	;# 
  1172  0199                     	;# 
  1173  019A                     	;# 
  1174  019A                     	;# 
  1175  019A                     	;# 
  1176  019B                     	;# 
  1177  019B                     	;# 
  1178  019B                     	;# 
  1179  019B                     	;# 
  1180  019B                     	;# 
  1181  019C                     	;# 
  1182  019C                     	;# 
  1183  019C                     	;# 
  1184  019D                     	;# 
  1185  019D                     	;# 
  1186  019D                     	;# 
  1187  019E                     	;# 
  1188  019E                     	;# 
  1189  019E                     	;# 
  1190  019F                     	;# 
  1191  019F                     	;# 
  1192  019F                     	;# 
  1193  019F                     	;# 
  1194  019F                     	;# 
  1195  020C                     	;# 
  1196  020D                     	;# 
  1197  020E                     	;# 
  1198  0211                     	;# 
  1199  0211                     	;# 
  1200  0212                     	;# 
  1201  0212                     	;# 
  1202  0213                     	;# 
  1203  0213                     	;# 
  1204  0214                     	;# 
  1205  0214                     	;# 
  1206  0215                     	;# 
  1207  0215                     	;# 
  1208  0215                     	;# 
  1209  0215                     	;# 
  1210  0216                     	;# 
  1211  0216                     	;# 
  1212  0217                     	;# 
  1213  0217                     	;# 
  1214  0219                     	;# 
  1215  021A                     	;# 
  1216  021B                     	;# 
  1217  021C                     	;# 
  1218  021D                     	;# 
  1219  021D                     	;# 
  1220  021E                     	;# 
  1221  021F                     	;# 
  1222  028C                     	;# 
  1223  028D                     	;# 
  1224  028E                     	;# 
  1225  0291                     	;# 
  1226  0291                     	;# 
  1227  0292                     	;# 
  1228  0293                     	;# 
  1229  0294                     	;# 
  1230  0295                     	;# 
  1231  0295                     	;# 
  1232  0296                     	;# 
  1233  0297                     	;# 
  1234  0298                     	;# 
  1235  029F                     	;# 
  1236  030C                     	;# 
  1237  030D                     	;# 
  1238  030E                     	;# 
  1239  0311                     	;# 
  1240  0311                     	;# 
  1241  0312                     	;# 
  1242  0313                     	;# 
  1243  0314                     	;# 
  1244  0315                     	;# 
  1245  0315                     	;# 
  1246  0316                     	;# 
  1247  0317                     	;# 
  1248  0318                     	;# 
  1249  038C                     	;# 
  1250  038D                     	;# 
  1251  038E                     	;# 
  1252  0391                     	;# 
  1253  0392                     	;# 
  1254  0393                     	;# 
  1255  0394                     	;# 
  1256  0395                     	;# 
  1257  0396                     	;# 
  1258  0397                     	;# 
  1259  0398                     	;# 
  1260  0399                     	;# 
  1261  039A                     	;# 
  1262  039C                     	;# 
  1263  039D                     	;# 
  1264  039E                     	;# 
  1265  039F                     	;# 
  1266  040C                     	;# 
  1267  040D                     	;# 
  1268  040E                     	;# 
  1269  0411                     	;# 
  1270  0411                     	;# 
  1271  0412                     	;# 
  1272  0413                     	;# 
  1273  0414                     	;# 
  1274  0415                     	;# 
  1275  0416                     	;# 
  1276  0417                     	;# 
  1277  0418                     	;# 
  1278  0418                     	;# 
  1279  0419                     	;# 
  1280  041A                     	;# 
  1281  041B                     	;# 
  1282  041C                     	;# 
  1283  041D                     	;# 
  1284  041E                     	;# 
  1285  041F                     	;# 
  1286  048C                     	;# 
  1287  048D                     	;# 
  1288  048E                     	;# 
  1289  0498                     	;# 
  1290  0498                     	;# 
  1291  0499                     	;# 
  1292  049A                     	;# 
  1293  049B                     	;# 
  1294  049B                     	;# 
  1295  049C                     	;# 
  1296  049D                     	;# 
  1297  049E                     	;# 
  1298  049F                     	;# 
  1299  0617                     	;# 
  1300  0618                     	;# 
  1301  0619                     	;# 
  1302  0619                     	;# 
  1303  061A                     	;# 
  1304  061B                     	;# 
  1305  061C                     	;# 
  1306  061C                     	;# 
  1307  061F                     	;# 
  1308  0691                     	;# 
  1309  0692                     	;# 
  1310  0693                     	;# 
  1311  0694                     	;# 
  1312  0695                     	;# 
  1313  0696                     	;# 
  1314  0697                     	;# 
  1315  0698                     	;# 
  1316  0699                     	;# 
  1317  0711                     	;# 
  1318  0712                     	;# 
  1319  0713                     	;# 
  1320  0714                     	;# 
  1321  0715                     	;# 
  1322  0716                     	;# 
  1323  0717                     	;# 
  1324  0718                     	;# 
  1325  0719                     	;# 
  1326  0891                     	;# 
  1327  0891                     	;# 
  1328  0892                     	;# 
  1329  0893                     	;# 
  1330  0893                     	;# 
  1331  0894                     	;# 
  1332  0895                     	;# 
  1333  0896                     	;# 
  1334  089B                     	;# 
  1335  0911                     	;# 
  1336  0912                     	;# 
  1337  0913                     	;# 
  1338  0914                     	;# 
  1339  0915                     	;# 
  1340  0916                     	;# 
  1341  0918                     	;# 
  1342  0919                     	;# 
  1343  091A                     	;# 
  1344  091B                     	;# 
  1345  091C                     	;# 
  1346  091D                     	;# 
  1347  091E                     	;# 
  1348  091F                     	;# 
  1349  0E0F                     	;# 
  1350  0E10                     	;# 
  1351  0E11                     	;# 
  1352  0E12                     	;# 
  1353  0E13                     	;# 
  1354  0E14                     	;# 
  1355  0E15                     	;# 
  1356  0E16                     	;# 
  1357  0E17                     	;# 
  1358  0E18                     	;# 
  1359  0E19                     	;# 
  1360  0E1A                     	;# 
  1361  0E1B                     	;# 
  1362  0E1C                     	;# 
  1363  0E1D                     	;# 
  1364  0E1E                     	;# 
  1365  0E1F                     	;# 
  1366  0E20                     	;# 
  1367  0E21                     	;# 
  1368  0E22                     	;# 
  1369  0E24                     	;# 
  1370  0E25                     	;# 
  1371  0E28                     	;# 
  1372  0E29                     	;# 
  1373  0E2A                     	;# 
  1374  0E2B                     	;# 
  1375  0E2C                     	;# 
  1376  0E2D                     	;# 
  1377  0E2E                     	;# 
  1378  0E2F                     	;# 
  1379  0E90                     	;# 
  1380  0E91                     	;# 
  1381  0E92                     	;# 
  1382  0E94                     	;# 
  1383  0E95                     	;# 
  1384  0E9C                     	;# 
  1385  0E9D                     	;# 
  1386  0E9E                     	;# 
  1387  0E9F                     	;# 
  1388  0EA0                     	;# 
  1389  0EA1                     	;# 
  1390  0EA2                     	;# 
  1391  0EA3                     	;# 
  1392  0EA4                     	;# 
  1393  0EA5                     	;# 
  1394  0EA6                     	;# 
  1395  0EA7                     	;# 
  1396  0F0F                     	;# 
  1397  0F10                     	;# 
  1398  0F11                     	;# 
  1399  0F12                     	;# 
  1400  0F13                     	;# 
  1401  0F14                     	;# 
  1402  0F15                     	;# 
  1403  0F16                     	;# 
  1404  0F17                     	;# 
  1405  0F18                     	;# 
  1406  0F19                     	;# 
  1407  0F1A                     	;# 
  1408  0F1B                     	;# 
  1409  0F1C                     	;# 
  1410  0F1D                     	;# 
  1411  0F1E                     	;# 
  1412  0F1F                     	;# 
  1413  0F20                     	;# 
  1414  0F21                     	;# 
  1415  0F22                     	;# 
  1416  0F23                     	;# 
  1417  0F24                     	;# 
  1418  0F25                     	;# 
  1419  0F26                     	;# 
  1420  0F27                     	;# 
  1421  0F28                     	;# 
  1422  0F29                     	;# 
  1423  0F2A                     	;# 
  1424  0F2B                     	;# 
  1425  0F2C                     	;# 
  1426  0F2D                     	;# 
  1427  0F2E                     	;# 
  1428  0F2F                     	;# 
  1429  0F30                     	;# 
  1430  0F31                     	;# 
  1431  0F32                     	;# 
  1432  0F33                     	;# 
  1433  0F34                     	;# 
  1434  0F35                     	;# 
  1435  0F36                     	;# 
  1436  0F37                     	;# 
  1437  0FE4                     	;# 
  1438  0FE5                     	;# 
  1439  0FE6                     	;# 
  1440  0FE7                     	;# 
  1441  0FE8                     	;# 
  1442  0FE9                     	;# 
  1443  0FEA                     	;# 
  1444  0FEB                     	;# 
  1445  0FED                     	;# 
  1446  0FEE                     	;# 
  1447  0FEF                     	;# 
  1448  0000                     	;# 
  1449  0001                     	;# 
  1450  0002                     	;# 
  1451  0003                     	;# 
  1452  0004                     	;# 
  1453  0005                     	;# 
  1454  0006                     	;# 
  1455  0007                     	;# 
  1456  0008                     	;# 
  1457  0009                     	;# 
  1458  000A                     	;# 
  1459  000B                     	;# 
  1460  000C                     	;# 
  1461  000D                     	;# 
  1462  000E                     	;# 
  1463  0010                     	;# 
  1464  0011                     	;# 
  1465  0012                     	;# 
  1466  0013                     	;# 
  1467  0014                     	;# 
  1468  0015                     	;# 
  1469  0016                     	;# 
  1470  0017                     	;# 
  1471  0018                     	;# 
  1472  0019                     	;# 
  1473  0019                     	;# 
  1474  001A                     	;# 
  1475  001B                     	;# 
  1476  001C                     	;# 
  1477  001D                     	;# 
  1478  001E                     	;# 
  1479  001F                     	;# 
  1480  008C                     	;# 
  1481  008D                     	;# 
  1482  008E                     	;# 
  1483  0090                     	;# 
  1484  0091                     	;# 
  1485  0092                     	;# 
  1486  0093                     	;# 
  1487  0094                     	;# 
  1488  0097                     	;# 
  1489  009B                     	;# 
  1490  009B                     	;# 
  1491  009C                     	;# 
  1492  009D                     	;# 
  1493  009E                     	;# 
  1494  009F                     	;# 
  1495  010C                     	;# 
  1496  010D                     	;# 
  1497  010E                     	;# 
  1498  0111                     	;# 
  1499  0112                     	;# 
  1500  0113                     	;# 
  1501  0114                     	;# 
  1502  0115                     	;# 
  1503  0116                     	;# 
  1504  0117                     	;# 
  1505  0118                     	;# 
  1506  0119                     	;# 
  1507  018C                     	;# 
  1508  018D                     	;# 
  1509  018E                     	;# 
  1510  0199                     	;# 
  1511  0199                     	;# 
  1512  0199                     	;# 
  1513  019A                     	;# 
  1514  019A                     	;# 
  1515  019A                     	;# 
  1516  019B                     	;# 
  1517  019B                     	;# 
  1518  019B                     	;# 
  1519  019B                     	;# 
  1520  019B                     	;# 
  1521  019C                     	;# 
  1522  019C                     	;# 
  1523  019C                     	;# 
  1524  019D                     	;# 
  1525  019D                     	;# 
  1526  019D                     	;# 
  1527  019E                     	;# 
  1528  019E                     	;# 
  1529  019E                     	;# 
  1530  019F                     	;# 
  1531  019F                     	;# 
  1532  019F                     	;# 
  1533  019F                     	;# 
  1534  019F                     	;# 
  1535  020C                     	;# 
  1536  020D                     	;# 
  1537  020E                     	;# 
  1538  0211                     	;# 
  1539  0211                     	;# 
  1540  0212                     	;# 
  1541  0212                     	;# 
  1542  0213                     	;# 
  1543  0213                     	;# 
  1544  0214                     	;# 
  1545  0214                     	;# 
  1546  0215                     	;# 
  1547  0215                     	;# 
  1548  0215                     	;# 
  1549  0215                     	;# 
  1550  0216                     	;# 
  1551  0216                     	;# 
  1552  0217                     	;# 
  1553  0217                     	;# 
  1554  0219                     	;# 
  1555  021A                     	;# 
  1556  021B                     	;# 
  1557  021C                     	;# 
  1558  021D                     	;# 
  1559  021D                     	;# 
  1560  021E                     	;# 
  1561  021F                     	;# 
  1562  028C                     	;# 
  1563  028D                     	;# 
  1564  028E                     	;# 
  1565  0291                     	;# 
  1566  0291                     	;# 
  1567  0292                     	;# 
  1568  0293                     	;# 
  1569  0294                     	;# 
  1570  0295                     	;# 
  1571  0295                     	;# 
  1572  0296                     	;# 
  1573  0297                     	;# 
  1574  0298                     	;# 
  1575  029F                     	;# 
  1576  030C                     	;# 
  1577  030D                     	;# 
  1578  030E                     	;# 
  1579  0311                     	;# 
  1580  0311                     	;# 
  1581  0312                     	;# 
  1582  0313                     	;# 
  1583  0314                     	;# 
  1584  0315                     	;# 
  1585  0315                     	;# 
  1586  0316                     	;# 
  1587  0317                     	;# 
  1588  0318                     	;# 
  1589  038C                     	;# 
  1590  038D                     	;# 
  1591  038E                     	;# 
  1592  0391                     	;# 
  1593  0392                     	;# 
  1594  0393                     	;# 
  1595  0394                     	;# 
  1596  0395                     	;# 
  1597  0396                     	;# 
  1598  0397                     	;# 
  1599  0398                     	;# 
  1600  0399                     	;# 
  1601  039A                     	;# 
  1602  039C                     	;# 
  1603  039D                     	;# 
  1604  039E                     	;# 
  1605  039F                     	;# 
  1606  040C                     	;# 
  1607  040D                     	;# 
  1608  040E                     	;# 
  1609  0411                     	;# 
  1610  0411                     	;# 
  1611  0412                     	;# 
  1612  0413                     	;# 
  1613  0414                     	;# 
  1614  0415                     	;# 
  1615  0416                     	;# 
  1616  0417                     	;# 
  1617  0418                     	;# 
  1618  0418                     	;# 
  1619  0419                     	;# 
  1620  041A                     	;# 
  1621  041B                     	;# 
  1622  041C                     	;# 
  1623  041D                     	;# 
  1624  041E                     	;# 
  1625  041F                     	;# 
  1626  048C                     	;# 
  1627  048D                     	;# 
  1628  048E                     	;# 
  1629  0498                     	;# 
  1630  0498                     	;# 
  1631  0499                     	;# 
  1632  049A                     	;# 
  1633  049B                     	;# 
  1634  049B                     	;# 
  1635  049C                     	;# 
  1636  049D                     	;# 
  1637  049E                     	;# 
  1638  049F                     	;# 
  1639  0617                     	;# 
  1640  0618                     	;# 
  1641  0619                     	;# 
  1642  0619                     	;# 
  1643  061A                     	;# 
  1644  061B                     	;# 
  1645  061C                     	;# 
  1646  061C                     	;# 
  1647  061F                     	;# 
  1648  0691                     	;# 
  1649  0692                     	;# 
  1650  0693                     	;# 
  1651  0694                     	;# 
  1652  0695                     	;# 
  1653  0696                     	;# 
  1654  0697                     	;# 
  1655  0698                     	;# 
  1656  0699                     	;# 
  1657  0711                     	;# 
  1658  0712                     	;# 
  1659  0713                     	;# 
  1660  0714                     	;# 
  1661  0715                     	;# 
  1662  0716                     	;# 
  1663  0717                     	;# 
  1664  0718                     	;# 
  1665  0719                     	;# 
  1666  0891                     	;# 
  1667  0891                     	;# 
  1668  0892                     	;# 
  1669  0893                     	;# 
  1670  0893                     	;# 
  1671  0894                     	;# 
  1672  0895                     	;# 
  1673  0896                     	;# 
  1674  089B                     	;# 
  1675  0911                     	;# 
  1676  0912                     	;# 
  1677  0913                     	;# 
  1678  0914                     	;# 
  1679  0915                     	;# 
  1680  0916                     	;# 
  1681  0918                     	;# 
  1682  0919                     	;# 
  1683  091A                     	;# 
  1684  091B                     	;# 
  1685  091C                     	;# 
  1686  091D                     	;# 
  1687  091E                     	;# 
  1688  091F                     	;# 
  1689  0E0F                     	;# 
  1690  0E10                     	;# 
  1691  0E11                     	;# 
  1692  0E12                     	;# 
  1693  0E13                     	;# 
  1694  0E14                     	;# 
  1695  0E15                     	;# 
  1696  0E16                     	;# 
  1697  0E17                     	;# 
  1698  0E18                     	;# 
  1699  0E19                     	;# 
  1700  0E1A                     	;# 
  1701  0E1B                     	;# 
  1702  0E1C                     	;# 
  1703  0E1D                     	;# 
  1704  0E1E                     	;# 
  1705  0E1F                     	;# 
  1706  0E20                     	;# 
  1707  0E21                     	;# 
  1708  0E22                     	;# 
  1709  0E24                     	;# 
  1710  0E25                     	;# 
  1711  0E28                     	;# 
  1712  0E29                     	;# 
  1713  0E2A                     	;# 
  1714  0E2B                     	;# 
  1715  0E2C                     	;# 
  1716  0E2D                     	;# 
  1717  0E2E                     	;# 
  1718  0E2F                     	;# 
  1719  0E90                     	;# 
  1720  0E91                     	;# 
  1721  0E92                     	;# 
  1722  0E94                     	;# 
  1723  0E95                     	;# 
  1724  0E9C                     	;# 
  1725  0E9D                     	;# 
  1726  0E9E                     	;# 
  1727  0E9F                     	;# 
  1728  0EA0                     	;# 
  1729  0EA1                     	;# 
  1730  0EA2                     	;# 
  1731  0EA3                     	;# 
  1732  0EA4                     	;# 
  1733  0EA5                     	;# 
  1734  0EA6                     	;# 
  1735  0EA7                     	;# 
  1736  0F0F                     	;# 
  1737  0F10                     	;# 
  1738  0F11                     	;# 
  1739  0F12                     	;# 
  1740  0F13                     	;# 
  1741  0F14                     	;# 
  1742  0F15                     	;# 
  1743  0F16                     	;# 
  1744  0F17                     	;# 
  1745  0F18                     	;# 
  1746  0F19                     	;# 
  1747  0F1A                     	;# 
  1748  0F1B                     	;# 
  1749  0F1C                     	;# 
  1750  0F1D                     	;# 
  1751  0F1E                     	;# 
  1752  0F1F                     	;# 
  1753  0F20                     	;# 
  1754  0F21                     	;# 
  1755  0F22                     	;# 
  1756  0F23                     	;# 
  1757  0F24                     	;# 
  1758  0F25                     	;# 
  1759  0F26                     	;# 
  1760  0F27                     	;# 
  1761  0F28                     	;# 
  1762  0F29                     	;# 
  1763  0F2A                     	;# 
  1764  0F2B                     	;# 
  1765  0F2C                     	;# 
  1766  0F2D                     	;# 
  1767  0F2E                     	;# 
  1768  0F2F                     	;# 
  1769  0F30                     	;# 
  1770  0F31                     	;# 
  1771  0F32                     	;# 
  1772  0F33                     	;# 
  1773  0F34                     	;# 
  1774  0F35                     	;# 
  1775  0F36                     	;# 
  1776  0F37                     	;# 
  1777  0FE4                     	;# 
  1778  0FE5                     	;# 
  1779  0FE6                     	;# 
  1780  0FE7                     	;# 
  1781  0FE8                     	;# 
  1782  0FE9                     	;# 
  1783  0FEA                     	;# 
  1784  0FEB                     	;# 
  1785  0FED                     	;# 
  1786  0FEE                     	;# 
  1787  0FEF                     	;# 
  1788  0000                     	;# 
  1789  0001                     	;# 
  1790  0002                     	;# 
  1791  0003                     	;# 
  1792  0004                     	;# 
  1793  0005                     	;# 
  1794  0006                     	;# 
  1795  0007                     	;# 
  1796  0008                     	;# 
  1797  0009                     	;# 
  1798  000A                     	;# 
  1799  000B                     	;# 
  1800  000C                     	;# 
  1801  000D                     	;# 
  1802  000E                     	;# 
  1803  0010                     	;# 
  1804  0011                     	;# 
  1805  0012                     	;# 
  1806  0013                     	;# 
  1807  0014                     	;# 
  1808  0015                     	;# 
  1809  0016                     	;# 
  1810  0017                     	;# 
  1811  0018                     	;# 
  1812  0019                     	;# 
  1813  0019                     	;# 
  1814  001A                     	;# 
  1815  001B                     	;# 
  1816  001C                     	;# 
  1817  001D                     	;# 
  1818  001E                     	;# 
  1819  001F                     	;# 
  1820  008C                     	;# 
  1821  008D                     	;# 
  1822  008E                     	;# 
  1823  0090                     	;# 
  1824  0091                     	;# 
  1825  0092                     	;# 
  1826  0093                     	;# 
  1827  0094                     	;# 
  1828  0097                     	;# 
  1829  009B                     	;# 
  1830  009B                     	;# 
  1831  009C                     	;# 
  1832  009D                     	;# 
  1833  009E                     	;# 
  1834  009F                     	;# 
  1835  010C                     	;# 
  1836  010D                     	;# 
  1837  010E                     	;# 
  1838  0111                     	;# 
  1839  0112                     	;# 
  1840  0113                     	;# 
  1841  0114                     	;# 
  1842  0115                     	;# 
  1843  0116                     	;# 
  1844  0117                     	;# 
  1845  0118                     	;# 
  1846  0119                     	;# 
  1847  018C                     	;# 
  1848  018D                     	;# 
  1849  018E                     	;# 
  1850  0197                     	;# 
  1851  0199                     	;# 
  1852  0199                     	;# 
  1853  0199                     	;# 
  1854  019A                     	;# 
  1855  019A                     	;# 
  1856  019A                     	;# 
  1857  019B                     	;# 
  1858  019B                     	;# 
  1859  019B                     	;# 
  1860  019B                     	;# 
  1861  019B                     	;# 
  1862  019C                     	;# 
  1863  019C                     	;# 
  1864  019C                     	;# 
  1865  019D                     	;# 
  1866  019D                     	;# 
  1867  019D                     	;# 
  1868  019E                     	;# 
  1869  019E                     	;# 
  1870  019E                     	;# 
  1871  019F                     	;# 
  1872  019F                     	;# 
  1873  019F                     	;# 
  1874  019F                     	;# 
  1875  019F                     	;# 
  1876  020C                     	;# 
  1877  020D                     	;# 
  1878  020E                     	;# 
  1879  0211                     	;# 
  1880  0211                     	;# 
  1881  0212                     	;# 
  1882  0212                     	;# 
  1883  0213                     	;# 
  1884  0213                     	;# 
  1885  0214                     	;# 
  1886  0214                     	;# 
  1887  0215                     	;# 
  1888  0215                     	;# 
  1889  0215                     	;# 
  1890  0215                     	;# 
  1891  0216                     	;# 
  1892  0216                     	;# 
  1893  0217                     	;# 
  1894  0217                     	;# 
  1895  0219                     	;# 
  1896  021A                     	;# 
  1897  021B                     	;# 
  1898  021C                     	;# 
  1899  021D                     	;# 
  1900  021D                     	;# 
  1901  021E                     	;# 
  1902  021F                     	;# 
  1903  028C                     	;# 
  1904  028D                     	;# 
  1905  028E                     	;# 
  1906  0291                     	;# 
  1907  0291                     	;# 
  1908  0292                     	;# 
  1909  0293                     	;# 
  1910  0294                     	;# 
  1911  0295                     	;# 
  1912  0295                     	;# 
  1913  0296                     	;# 
  1914  0297                     	;# 
  1915  0298                     	;# 
  1916  029F                     	;# 
  1917  030C                     	;# 
  1918  030D                     	;# 
  1919  030E                     	;# 
  1920  0311                     	;# 
  1921  0311                     	;# 
  1922  0312                     	;# 
  1923  0313                     	;# 
  1924  0314                     	;# 
  1925  0315                     	;# 
  1926  0315                     	;# 
  1927  0316                     	;# 
  1928  0317                     	;# 
  1929  0318                     	;# 
  1930  038C                     	;# 
  1931  038D                     	;# 
  1932  038E                     	;# 
  1933  0391                     	;# 
  1934  0392                     	;# 
  1935  0393                     	;# 
  1936  0394                     	;# 
  1937  0395                     	;# 
  1938  0396                     	;# 
  1939  0397                     	;# 
  1940  0398                     	;# 
  1941  0399                     	;# 
  1942  039A                     	;# 
  1943  039C                     	;# 
  1944  039D                     	;# 
  1945  039E                     	;# 
  1946  039F                     	;# 
  1947  040C                     	;# 
  1948  040D                     	;# 
  1949  040E                     	;# 
  1950  0411                     	;# 
  1951  0411                     	;# 
  1952  0412                     	;# 
  1953  0413                     	;# 
  1954  0414                     	;# 
  1955  0415                     	;# 
  1956  0416                     	;# 
  1957  0417                     	;# 
  1958  0418                     	;# 
  1959  0418                     	;# 
  1960  0419                     	;# 
  1961  041A                     	;# 
  1962  041B                     	;# 
  1963  041C                     	;# 
  1964  041D                     	;# 
  1965  041E                     	;# 
  1966  041F                     	;# 
  1967  048C                     	;# 
  1968  048D                     	;# 
  1969  048E                     	;# 
  1970  0498                     	;# 
  1971  0498                     	;# 
  1972  0499                     	;# 
  1973  049A                     	;# 
  1974  049B                     	;# 
  1975  049B                     	;# 
  1976  049C                     	;# 
  1977  049D                     	;# 
  1978  049E                     	;# 
  1979  049F                     	;# 
  1980  0617                     	;# 
  1981  0618                     	;# 
  1982  0619                     	;# 
  1983  0619                     	;# 
  1984  061A                     	;# 
  1985  061B                     	;# 
  1986  061C                     	;# 
  1987  061C                     	;# 
  1988  061F                     	;# 
  1989  0691                     	;# 
  1990  0692                     	;# 
  1991  0693                     	;# 
  1992  0694                     	;# 
  1993  0695                     	;# 
  1994  0696                     	;# 
  1995  0697                     	;# 
  1996  0698                     	;# 
  1997  0699                     	;# 
  1998  0711                     	;# 
  1999  0712                     	;# 
  2000  0713                     	;# 
  2001  0714                     	;# 
  2002  0715                     	;# 
  2003  0716                     	;# 
  2004  0717                     	;# 
  2005  0718                     	;# 
  2006  0719                     	;# 
  2007  0891                     	;# 
  2008  0891                     	;# 
  2009  0892                     	;# 
  2010  0893                     	;# 
  2011  0893                     	;# 
  2012  0894                     	;# 
  2013  0895                     	;# 
  2014  0896                     	;# 
  2015  089B                     	;# 
  2016  0911                     	;# 
  2017  0912                     	;# 
  2018  0913                     	;# 
  2019  0914                     	;# 
  2020  0915                     	;# 
  2021  0916                     	;# 
  2022  0918                     	;# 
  2023  0919                     	;# 
  2024  091A                     	;# 
  2025  091B                     	;# 
  2026  091C                     	;# 
  2027  091D                     	;# 
  2028  091E                     	;# 
  2029  091F                     	;# 
  2030  0E0F                     	;# 
  2031  0E10                     	;# 
  2032  0E11                     	;# 
  2033  0E12                     	;# 
  2034  0E13                     	;# 
  2035  0E14                     	;# 
  2036  0E15                     	;# 
  2037  0E16                     	;# 
  2038  0E17                     	;# 
  2039  0E18                     	;# 
  2040  0E19                     	;# 
  2041  0E1A                     	;# 
  2042  0E1B                     	;# 
  2043  0E1C                     	;# 
  2044  0E1D                     	;# 
  2045  0E1E                     	;# 
  2046  0E1F                     	;# 
  2047  0E20                     	;# 
  2048  0E21                     	;# 
  2049  0E22                     	;# 
  2050  0E24                     	;# 
  2051  0E25                     	;# 
  2052  0E28                     	;# 
  2053  0E29                     	;# 
  2054  0E2A                     	;# 
  2055  0E2B                     	;# 
  2056  0E2C                     	;# 
  2057  0E2D                     	;# 
  2058  0E2E                     	;# 
  2059  0E2F                     	;# 
  2060  0E90                     	;# 
  2061  0E91                     	;# 
  2062  0E92                     	;# 
  2063  0E94                     	;# 
  2064  0E95                     	;# 
  2065  0E9C                     	;# 
  2066  0E9D                     	;# 
  2067  0E9E                     	;# 
  2068  0E9F                     	;# 
  2069  0EA0                     	;# 
  2070  0EA1                     	;# 
  2071  0EA2                     	;# 
  2072  0EA3                     	;# 
  2073  0EA4                     	;# 
  2074  0EA5                     	;# 
  2075  0EA6                     	;# 
  2076  0EA7                     	;# 
  2077  0F0F                     	;# 
  2078  0F10                     	;# 
  2079  0F11                     	;# 
  2080  0F12                     	;# 
  2081  0F13                     	;# 
  2082  0F14                     	;# 
  2083  0F15                     	;# 
  2084  0F16                     	;# 
  2085  0F17                     	;# 
  2086  0F18                     	;# 
  2087  0F19                     	;# 
  2088  0F1A                     	;# 
  2089  0F1B                     	;# 
  2090  0F1C                     	;# 
  2091  0F1D                     	;# 
  2092  0F1E                     	;# 
  2093  0F1F                     	;# 
  2094  0F20                     	;# 
  2095  0F21                     	;# 
  2096  0F22                     	;# 
  2097  0F23                     	;# 
  2098  0F24                     	;# 
  2099  0F25                     	;# 
  2100  0F26                     	;# 
  2101  0F27                     	;# 
  2102  0F28                     	;# 
  2103  0F29                     	;# 
  2104  0F2A                     	;# 
  2105  0F2B                     	;# 
  2106  0F2C                     	;# 
  2107  0F2D                     	;# 
  2108  0F2E                     	;# 
  2109  0F2F                     	;# 
  2110  0F30                     	;# 
  2111  0F31                     	;# 
  2112  0F32                     	;# 
  2113  0F33                     	;# 
  2114  0F34                     	;# 
  2115  0F35                     	;# 
  2116  0F36                     	;# 
  2117  0F37                     	;# 
  2118  0FE4                     	;# 
  2119  0FE5                     	;# 
  2120  0FE6                     	;# 
  2121  0FE7                     	;# 
  2122  0FE8                     	;# 
  2123  0FE9                     	;# 
  2124  0FEA                     	;# 
  2125  0FEB                     	;# 
  2126  0FED                     	;# 
  2127  0FEE                     	;# 
  2128  0FEF                     	;# 
  2129  0000                     	;# 
  2130  0001                     	;# 
  2131  0002                     	;# 
  2132  0003                     	;# 
  2133  0004                     	;# 
  2134  0005                     	;# 
  2135  0006                     	;# 
  2136  0007                     	;# 
  2137  0008                     	;# 
  2138  0009                     	;# 
  2139  000A                     	;# 
  2140  000B                     	;# 
  2141  000C                     	;# 
  2142  000D                     	;# 
  2143  000E                     	;# 
  2144  0010                     	;# 
  2145  0011                     	;# 
  2146  0012                     	;# 
  2147  0013                     	;# 
  2148  0014                     	;# 
  2149  0015                     	;# 
  2150  0016                     	;# 
  2151  0017                     	;# 
  2152  0018                     	;# 
  2153  0019                     	;# 
  2154  0019                     	;# 
  2155  001A                     	;# 
  2156  001B                     	;# 
  2157  001C                     	;# 
  2158  001D                     	;# 
  2159  001E                     	;# 
  2160  001F                     	;# 
  2161  008C                     	;# 
  2162  008D                     	;# 
  2163  008E                     	;# 
  2164  0090                     	;# 
  2165  0091                     	;# 
  2166  0092                     	;# 
  2167  0093                     	;# 
  2168  0094                     	;# 
  2169  0097                     	;# 
  2170  009B                     	;# 
  2171  009B                     	;# 
  2172  009C                     	;# 
  2173  009D                     	;# 
  2174  009E                     	;# 
  2175  009F                     	;# 
  2176  010C                     	;# 
  2177  010D                     	;# 
  2178  010E                     	;# 
  2179  0111                     	;# 
  2180  0112                     	;# 
  2181  0113                     	;# 
  2182  0114                     	;# 
  2183  0115                     	;# 
  2184  0116                     	;# 
  2185  0117                     	;# 
  2186  0118                     	;# 
  2187  0119                     	;# 
  2188  018C                     	;# 
  2189  018D                     	;# 
  2190  018E                     	;# 
  2191  0199                     	;# 
  2192  0199                     	;# 
  2193  0199                     	;# 
  2194  019A                     	;# 
  2195  019A                     	;# 
  2196  019A                     	;# 
  2197  019B                     	;# 
  2198  019B                     	;# 
  2199  019B                     	;# 
  2200  019B                     	;# 
  2201  019B                     	;# 
  2202  019C                     	;# 
  2203  019C                     	;# 
  2204  019C                     	;# 
  2205  019D                     	;# 
  2206  019D                     	;# 
  2207  019D                     	;# 
  2208  019E                     	;# 
  2209  019E                     	;# 
  2210  019E                     	;# 
  2211  019F                     	;# 
  2212  019F                     	;# 
  2213  019F                     	;# 
  2214  019F                     	;# 
  2215  019F                     	;# 
  2216  020C                     	;# 
  2217  020D                     	;# 
  2218  020E                     	;# 
  2219  0211                     	;# 
  2220  0211                     	;# 
  2221  0212                     	;# 
  2222  0212                     	;# 
  2223  0213                     	;# 
  2224  0213                     	;# 
  2225  0214                     	;# 
  2226  0214                     	;# 
  2227  0215                     	;# 
  2228  0215                     	;# 
  2229  0215                     	;# 
  2230  0215                     	;# 
  2231  0216                     	;# 
  2232  0216                     	;# 
  2233  0217                     	;# 
  2234  0217                     	;# 
  2235  0219                     	;# 
  2236  021A                     	;# 
  2237  021B                     	;# 
  2238  021C                     	;# 
  2239  021D                     	;# 
  2240  021D                     	;# 
  2241  021E                     	;# 
  2242  021F                     	;# 
  2243  028C                     	;# 
  2244  028D                     	;# 
  2245  028E                     	;# 
  2246  0291                     	;# 
  2247  0291                     	;# 
  2248  0292                     	;# 
  2249  0293                     	;# 
  2250  0294                     	;# 
  2251  0295                     	;# 
  2252  0295                     	;# 
  2253  0296                     	;# 
  2254  0297                     	;# 
  2255  0298                     	;# 
  2256  029F                     	;# 
  2257  030C                     	;# 
  2258  030D                     	;# 
  2259  030E                     	;# 
  2260  0311                     	;# 
  2261  0311                     	;# 
  2262  0312                     	;# 
  2263  0313                     	;# 
  2264  0314                     	;# 
  2265  0315                     	;# 
  2266  0315                     	;# 
  2267  0316                     	;# 
  2268  0317                     	;# 
  2269  0318                     	;# 
  2270  038C                     	;# 
  2271  038D                     	;# 
  2272  038E                     	;# 
  2273  0391                     	;# 
  2274  0392                     	;# 
  2275  0393                     	;# 
  2276  0394                     	;# 
  2277  0395                     	;# 
  2278  0396                     	;# 
  2279  0397                     	;# 
  2280  0398                     	;# 
  2281  0399                     	;# 
  2282  039A                     	;# 
  2283  039C                     	;# 
  2284  039D                     	;# 
  2285  039E                     	;# 
  2286  039F                     	;# 
  2287  040C                     	;# 
  2288  040D                     	;# 
  2289  040E                     	;# 
  2290  0411                     	;# 
  2291  0411                     	;# 
  2292  0412                     	;# 
  2293  0413                     	;# 
  2294  0414                     	;# 
  2295  0415                     	;# 
  2296  0416                     	;# 
  2297  0417                     	;# 
  2298  0418                     	;# 
  2299  0418                     	;# 
  2300  0419                     	;# 
  2301  041A                     	;# 
  2302  041B                     	;# 
  2303  041C                     	;# 
  2304  041D                     	;# 
  2305  041E                     	;# 
  2306  041F                     	;# 
  2307  048C                     	;# 
  2308  048D                     	;# 
  2309  048E                     	;# 
  2310  0498                     	;# 
  2311  0498                     	;# 
  2312  0499                     	;# 
  2313  049A                     	;# 
  2314  049B                     	;# 
  2315  049B                     	;# 
  2316  049C                     	;# 
  2317  049D                     	;# 
  2318  049E                     	;# 
  2319  049F                     	;# 
  2320  0617                     	;# 
  2321  0618                     	;# 
  2322  0619                     	;# 
  2323  0619                     	;# 
  2324  061A                     	;# 
  2325  061B                     	;# 
  2326  061C                     	;# 
  2327  061C                     	;# 
  2328  061F                     	;# 
  2329  0691                     	;# 
  2330  0692                     	;# 
  2331  0693                     	;# 
  2332  0694                     	;# 
  2333  0695                     	;# 
  2334  0696                     	;# 
  2335  0697                     	;# 
  2336  0698                     	;# 
  2337  0699                     	;# 
  2338  0711                     	;# 
  2339  0712                     	;# 
  2340  0713                     	;# 
  2341  0714                     	;# 
  2342  0715                     	;# 
  2343  0716                     	;# 
  2344  0717                     	;# 
  2345  0718                     	;# 
  2346  0719                     	;# 
  2347  0891                     	;# 
  2348  0891                     	;# 
  2349  0892                     	;# 
  2350  0893                     	;# 
  2351  0893                     	;# 
  2352  0894                     	;# 
  2353  0895                     	;# 
  2354  0896                     	;# 
  2355  089B                     	;# 
  2356  0911                     	;# 
  2357  0912                     	;# 
  2358  0913                     	;# 
  2359  0914                     	;# 
  2360  0915                     	;# 
  2361  0916                     	;# 
  2362  0918                     	;# 
  2363  0919                     	;# 
  2364  091A                     	;# 
  2365  091B                     	;# 
  2366  091C                     	;# 
  2367  091D                     	;# 
  2368  091E                     	;# 
  2369  091F                     	;# 
  2370  0E0F                     	;# 
  2371  0E10                     	;# 
  2372  0E11                     	;# 
  2373  0E12                     	;# 
  2374  0E13                     	;# 
  2375  0E14                     	;# 
  2376  0E15                     	;# 
  2377  0E16                     	;# 
  2378  0E17                     	;# 
  2379  0E18                     	;# 
  2380  0E19                     	;# 
  2381  0E1A                     	;# 
  2382  0E1B                     	;# 
  2383  0E1C                     	;# 
  2384  0E1D                     	;# 
  2385  0E1E                     	;# 
  2386  0E1F                     	;# 
  2387  0E20                     	;# 
  2388  0E21                     	;# 
  2389  0E22                     	;# 
  2390  0E24                     	;# 
  2391  0E25                     	;# 
  2392  0E28                     	;# 
  2393  0E29                     	;# 
  2394  0E2A                     	;# 
  2395  0E2B                     	;# 
  2396  0E2C                     	;# 
  2397  0E2D                     	;# 
  2398  0E2E                     	;# 
  2399  0E2F                     	;# 
  2400  0E90                     	;# 
  2401  0E91                     	;# 
  2402  0E92                     	;# 
  2403  0E94                     	;# 
  2404  0E95                     	;# 
  2405  0E9C                     	;# 
  2406  0E9D                     	;# 
  2407  0E9E                     	;# 
  2408  0E9F                     	;# 
  2409  0EA0                     	;# 
  2410  0EA1                     	;# 
  2411  0EA2                     	;# 
  2412  0EA3                     	;# 
  2413  0EA4                     	;# 
  2414  0EA5                     	;# 
  2415  0EA6                     	;# 
  2416  0EA7                     	;# 
  2417  0F0F                     	;# 
  2418  0F10                     	;# 
  2419  0F11                     	;# 
  2420  0F12                     	;# 
  2421  0F13                     	;# 
  2422  0F14                     	;# 
  2423  0F15                     	;# 
  2424  0F16                     	;# 
  2425  0F17                     	;# 
  2426  0F18                     	;# 
  2427  0F19                     	;# 
  2428  0F1A                     	;# 
  2429  0F1B                     	;# 
  2430  0F1C                     	;# 
  2431  0F1D                     	;# 
  2432  0F1E                     	;# 
  2433  0F1F                     	;# 
  2434  0F20                     	;# 
  2435  0F21                     	;# 
  2436  0F22                     	;# 
  2437  0F23                     	;# 
  2438  0F24                     	;# 
  2439  0F25                     	;# 
  2440  0F26                     	;# 
  2441  0F27                     	;# 
  2442  0F28                     	;# 
  2443  0F29                     	;# 
  2444  0F2A                     	;# 
  2445  0F2B                     	;# 
  2446  0F2C                     	;# 
  2447  0F2D                     	;# 
  2448  0F2E                     	;# 
  2449  0F2F                     	;# 
  2450  0F30                     	;# 
  2451  0F31                     	;# 
  2452  0F32                     	;# 
  2453  0F33                     	;# 
  2454  0F34                     	;# 
  2455  0F35                     	;# 
  2456  0F36                     	;# 
  2457  0F37                     	;# 
  2458  0FE4                     	;# 
  2459  0FE5                     	;# 
  2460  0FE6                     	;# 
  2461  0FE7                     	;# 
  2462  0FE8                     	;# 
  2463  0FE9                     	;# 
  2464  0FEA                     	;# 
  2465  0FEB                     	;# 
  2466  0FED                     	;# 
  2467  0FEE                     	;# 
  2468  0FEF                     	;# 
  2469  0000                     	;# 
  2470  0001                     	;# 
  2471  0002                     	;# 
  2472  0003                     	;# 
  2473  0004                     	;# 
  2474  0005                     	;# 
  2475  0006                     	;# 
  2476  0007                     	;# 
  2477  0008                     	;# 
  2478  0009                     	;# 
  2479  000A                     	;# 
  2480  000B                     	;# 
  2481  000C                     	;# 
  2482  000D                     	;# 
  2483  000E                     	;# 
  2484  0010                     	;# 
  2485  0011                     	;# 
  2486  0012                     	;# 
  2487  0013                     	;# 
  2488  0014                     	;# 
  2489  0015                     	;# 
  2490  0016                     	;# 
  2491  0017                     	;# 
  2492  0018                     	;# 
  2493  0019                     	;# 
  2494  0019                     	;# 
  2495  001A                     	;# 
  2496  001B                     	;# 
  2497  001C                     	;# 
  2498  001D                     	;# 
  2499  001E                     	;# 
  2500  001F                     	;# 
  2501  008C                     	;# 
  2502  008D                     	;# 
  2503  008E                     	;# 
  2504  0090                     	;# 
  2505  0091                     	;# 
  2506  0092                     	;# 
  2507  0093                     	;# 
  2508  0094                     	;# 
  2509  0097                     	;# 
  2510  009B                     	;# 
  2511  009B                     	;# 
  2512  009C                     	;# 
  2513  009D                     	;# 
  2514  009E                     	;# 
  2515  009F                     	;# 
  2516  010C                     	;# 
  2517  010D                     	;# 
  2518  010E                     	;# 
  2519  0111                     	;# 
  2520  0112                     	;# 
  2521  0113                     	;# 
  2522  0114                     	;# 
  2523  0115                     	;# 
  2524  0116                     	;# 
  2525  0117                     	;# 
  2526  0118                     	;# 
  2527  0119                     	;# 
  2528  018C                     	;# 
  2529  018D                     	;# 
  2530  018E                     	;# 
  2531  0197                     	;# 
  2532  0199                     	;# 
  2533  0199                     	;# 
  2534  0199                     	;# 
  2535  019A                     	;# 
  2536  019A                     	;# 
  2537  019A                     	;# 
  2538  019B                     	;# 
  2539  019B                     	;# 
  2540  019B                     	;# 
  2541  019B                     	;# 
  2542  019B                     	;# 
  2543  019C                     	;# 
  2544  019C                     	;# 
  2545  019C                     	;# 
  2546  019D                     	;# 
  2547  019D                     	;# 
  2548  019D                     	;# 
  2549  019E                     	;# 
  2550  019E                     	;# 
  2551  019E                     	;# 
  2552  019F                     	;# 
  2553  019F                     	;# 
  2554  019F                     	;# 
  2555  019F                     	;# 
  2556  019F                     	;# 
  2557  020C                     	;# 
  2558  020D                     	;# 
  2559  020E                     	;# 
  2560  0211                     	;# 
  2561  0211                     	;# 
  2562  0212                     	;# 
  2563  0212                     	;# 
  2564  0213                     	;# 
  2565  0213                     	;# 
  2566  0214                     	;# 
  2567  0214                     	;# 
  2568  0215                     	;# 
  2569  0215                     	;# 
  2570  0215                     	;# 
  2571  0215                     	;# 
  2572  0216                     	;# 
  2573  0216                     	;# 
  2574  0217                     	;# 
  2575  0217                     	;# 
  2576  0219                     	;# 
  2577  021A                     	;# 
  2578  021B                     	;# 
  2579  021C                     	;# 
  2580  021D                     	;# 
  2581  021D                     	;# 
  2582  021E                     	;# 
  2583  021F                     	;# 
  2584  028C                     	;# 
  2585  028D                     	;# 
  2586  028E                     	;# 
  2587  0291                     	;# 
  2588  0291                     	;# 
  2589  0292                     	;# 
  2590  0293                     	;# 
  2591  0294                     	;# 
  2592  0295                     	;# 
  2593  0295                     	;# 
  2594  0296                     	;# 
  2595  0297                     	;# 
  2596  0298                     	;# 
  2597  029F                     	;# 
  2598  030C                     	;# 
  2599  030D                     	;# 
  2600  030E                     	;# 
  2601  0311                     	;# 
  2602  0311                     	;# 
  2603  0312                     	;# 
  2604  0313                     	;# 
  2605  0314                     	;# 
  2606  0315                     	;# 
  2607  0315                     	;# 
  2608  0316                     	;# 
  2609  0317                     	;# 
  2610  0318                     	;# 
  2611  038C                     	;# 
  2612  038D                     	;# 
  2613  038E                     	;# 
  2614  0391                     	;# 
  2615  0392                     	;# 
  2616  0393                     	;# 
  2617  0394                     	;# 
  2618  0395                     	;# 
  2619  0396                     	;# 
  2620  0397                     	;# 
  2621  0398                     	;# 
  2622  0399                     	;# 
  2623  039A                     	;# 
  2624  039C                     	;# 
  2625  039D                     	;# 
  2626  039E                     	;# 
  2627  039F                     	;# 
  2628  040C                     	;# 
  2629  040D                     	;# 
  2630  040E                     	;# 
  2631  0411                     	;# 
  2632  0411                     	;# 
  2633  0412                     	;# 
  2634  0413                     	;# 
  2635  0414                     	;# 
  2636  0415                     	;# 
  2637  0416                     	;# 
  2638  0417                     	;# 
  2639  0418                     	;# 
  2640  0418                     	;# 
  2641  0419                     	;# 
  2642  041A                     	;# 
  2643  041B                     	;# 
  2644  041C                     	;# 
  2645  041D                     	;# 
  2646  041E                     	;# 
  2647  041F                     	;# 
  2648  048C                     	;# 
  2649  048D                     	;# 
  2650  048E                     	;# 
  2651  0498                     	;# 
  2652  0498                     	;# 
  2653  0499                     	;# 
  2654  049A                     	;# 
  2655  049B                     	;# 
  2656  049B                     	;# 
  2657  049C                     	;# 
  2658  049D                     	;# 
  2659  049E                     	;# 
  2660  049F                     	;# 
  2661  0617                     	;# 
  2662  0618                     	;# 
  2663  0619                     	;# 
  2664  0619                     	;# 
  2665  061A                     	;# 
  2666  061B                     	;# 
  2667  061C                     	;# 
  2668  061C                     	;# 
  2669  061F                     	;# 
  2670  0691                     	;# 
  2671  0692                     	;# 
  2672  0693                     	;# 
  2673  0694                     	;# 
  2674  0695                     	;# 
  2675  0696                     	;# 
  2676  0697                     	;# 
  2677  0698                     	;# 
  2678  0699                     	;# 
  2679  0711                     	;# 
  2680  0712                     	;# 
  2681  0713                     	;# 
  2682  0714                     	;# 
  2683  0715                     	;# 
  2684  0716                     	;# 
  2685  0717                     	;# 
  2686  0718                     	;# 
  2687  0719                     	;# 
  2688  0891                     	;# 
  2689  0891                     	;# 
  2690  0892                     	;# 
  2691  0893                     	;# 
  2692  0893                     	;# 
  2693  0894                     	;# 
  2694  0895                     	;# 
  2695  0896                     	;# 
  2696  089B                     	;# 
  2697  0911                     	;# 
  2698  0912                     	;# 
  2699  0913                     	;# 
  2700  0914                     	;# 
  2701  0915                     	;# 
  2702  0916                     	;# 
  2703  0918                     	;# 
  2704  0919                     	;# 
  2705  091A                     	;# 
  2706  091B                     	;# 
  2707  091C                     	;# 
  2708  091D                     	;# 
  2709  091E                     	;# 
  2710  091F                     	;# 
  2711  0E0F                     	;# 
  2712  0E10                     	;# 
  2713  0E11                     	;# 
  2714  0E12                     	;# 
  2715  0E13                     	;# 
  2716  0E14                     	;# 
  2717  0E15                     	;# 
  2718  0E16                     	;# 
  2719  0E17                     	;# 
  2720  0E18                     	;# 
  2721  0E19                     	;# 
  2722  0E1A                     	;# 
  2723  0E1B                     	;# 
  2724  0E1C                     	;# 
  2725  0E1D                     	;# 
  2726  0E1E                     	;# 
  2727  0E1F                     	;# 
  2728  0E20                     	;# 
  2729  0E21                     	;# 
  2730  0E22                     	;# 
  2731  0E24                     	;# 
  2732  0E25                     	;# 
  2733  0E28                     	;# 
  2734  0E29                     	;# 
  2735  0E2A                     	;# 
  2736  0E2B                     	;# 
  2737  0E2C                     	;# 
  2738  0E2D                     	;# 
  2739  0E2E                     	;# 
  2740  0E2F                     	;# 
  2741  0E90                     	;# 
  2742  0E91                     	;# 
  2743  0E92                     	;# 
  2744  0E94                     	;# 
  2745  0E95                     	;# 
  2746  0E9C                     	;# 
  2747  0E9D                     	;# 
  2748  0E9E                     	;# 
  2749  0E9F                     	;# 
  2750  0EA0                     	;# 
  2751  0EA1                     	;# 
  2752  0EA2                     	;# 
  2753  0EA3                     	;# 
  2754  0EA4                     	;# 
  2755  0EA5                     	;# 
  2756  0EA6                     	;# 
  2757  0EA7                     	;# 
  2758  0F0F                     	;# 
  2759  0F10                     	;# 
  2760  0F11                     	;# 
  2761  0F12                     	;# 
  2762  0F13                     	;# 
  2763  0F14                     	;# 
  2764  0F15                     	;# 
  2765  0F16                     	;# 
  2766  0F17                     	;# 
  2767  0F18                     	;# 
  2768  0F19                     	;# 
  2769  0F1A                     	;# 
  2770  0F1B                     	;# 
  2771  0F1C                     	;# 
  2772  0F1D                     	;# 
  2773  0F1E                     	;# 
  2774  0F1F                     	;# 
  2775  0F20                     	;# 
  2776  0F21                     	;# 
  2777  0F22                     	;# 
  2778  0F23                     	;# 
  2779  0F24                     	;# 
  2780  0F25                     	;# 
  2781  0F26                     	;# 
  2782  0F27                     	;# 
  2783  0F28                     	;# 
  2784  0F29                     	;# 
  2785  0F2A                     	;# 
  2786  0F2B                     	;# 
  2787  0F2C                     	;# 
  2788  0F2D                     	;# 
  2789  0F2E                     	;# 
  2790  0F2F                     	;# 
  2791  0F30                     	;# 
  2792  0F31                     	;# 
  2793  0F32                     	;# 
  2794  0F33                     	;# 
  2795  0F34                     	;# 
  2796  0F35                     	;# 
  2797  0F36                     	;# 
  2798  0F37                     	;# 
  2799  0FE4                     	;# 
  2800  0FE5                     	;# 
  2801  0FE6                     	;# 
  2802  0FE7                     	;# 
  2803  0FE8                     	;# 
  2804  0FE9                     	;# 
  2805  0FEA                     	;# 
  2806  0FEB                     	;# 
  2807  0FED                     	;# 
  2808  0FEE                     	;# 
  2809  0FEF                     	;# 
  2810  0000                     	;# 
  2811  0001                     	;# 
  2812  0002                     	;# 
  2813  0003                     	;# 
  2814  0004                     	;# 
  2815  0005                     	;# 
  2816  0006                     	;# 
  2817  0007                     	;# 
  2818  0008                     	;# 
  2819  0009                     	;# 
  2820  000A                     	;# 
  2821  000B                     	;# 
  2822  000C                     	;# 
  2823  000D                     	;# 
  2824  000E                     	;# 
  2825  0010                     	;# 
  2826  0011                     	;# 
  2827  0012                     	;# 
  2828  0013                     	;# 
  2829  0014                     	;# 
  2830  0015                     	;# 
  2831  0016                     	;# 
  2832  0017                     	;# 
  2833  0018                     	;# 
  2834  0019                     	;# 
  2835  0019                     	;# 
  2836  001A                     	;# 
  2837  001B                     	;# 
  2838  001C                     	;# 
  2839  001D                     	;# 
  2840  001E                     	;# 
  2841  001F                     	;# 
  2842  008C                     	;# 
  2843  008D                     	;# 
  2844  008E                     	;# 
  2845  0090                     	;# 
  2846  0091                     	;# 
  2847  0092                     	;# 
  2848  0093                     	;# 
  2849  0094                     	;# 
  2850  0097                     	;# 
  2851  009B                     	;# 
  2852  009B                     	;# 
  2853  009C                     	;# 
  2854  009D                     	;# 
  2855  009E                     	;# 
  2856  009F                     	;# 
  2857  010C                     	;# 
  2858  010D                     	;# 
  2859  010E                     	;# 
  2860  0111                     	;# 
  2861  0112                     	;# 
  2862  0113                     	;# 
  2863  0114                     	;# 
  2864  0115                     	;# 
  2865  0116                     	;# 
  2866  0117                     	;# 
  2867  0118                     	;# 
  2868  0119                     	;# 
  2869  018C                     	;# 
  2870  018D                     	;# 
  2871  018E                     	;# 
  2872  0199                     	;# 
  2873  0199                     	;# 
  2874  0199                     	;# 
  2875  019A                     	;# 
  2876  019A                     	;# 
  2877  019A                     	;# 
  2878  019B                     	;# 
  2879  019B                     	;# 
  2880  019B                     	;# 
  2881  019B                     	;# 
  2882  019B                     	;# 
  2883  019C                     	;# 
  2884  019C                     	;# 
  2885  019C                     	;# 
  2886  019D                     	;# 
  2887  019D                     	;# 
  2888  019D                     	;# 
  2889  019E                     	;# 
  2890  019E                     	;# 
  2891  019E                     	;# 
  2892  019F                     	;# 
  2893  019F                     	;# 
  2894  019F                     	;# 
  2895  019F                     	;# 
  2896  019F                     	;# 
  2897  020C                     	;# 
  2898  020D                     	;# 
  2899  020E                     	;# 
  2900  0211                     	;# 
  2901  0211                     	;# 
  2902  0212                     	;# 
  2903  0212                     	;# 
  2904  0213                     	;# 
  2905  0213                     	;# 
  2906  0214                     	;# 
  2907  0214                     	;# 
  2908  0215                     	;# 
  2909  0215                     	;# 
  2910  0215                     	;# 
  2911  0215                     	;# 
  2912  0216                     	;# 
  2913  0216                     	;# 
  2914  0217                     	;# 
  2915  0217                     	;# 
  2916  0219                     	;# 
  2917  021A                     	;# 
  2918  021B                     	;# 
  2919  021C                     	;# 
  2920  021D                     	;# 
  2921  021D                     	;# 
  2922  021E                     	;# 
  2923  021F                     	;# 
  2924  028C                     	;# 
  2925  028D                     	;# 
  2926  028E                     	;# 
  2927  0291                     	;# 
  2928  0291                     	;# 
  2929  0292                     	;# 
  2930  0293                     	;# 
  2931  0294                     	;# 
  2932  0295                     	;# 
  2933  0295                     	;# 
  2934  0296                     	;# 
  2935  0297                     	;# 
  2936  0298                     	;# 
  2937  029F                     	;# 
  2938  030C                     	;# 
  2939  030D                     	;# 
  2940  030E                     	;# 
  2941  0311                     	;# 
  2942  0311                     	;# 
  2943  0312                     	;# 
  2944  0313                     	;# 
  2945  0314                     	;# 
  2946  0315                     	;# 
  2947  0315                     	;# 
  2948  0316                     	;# 
  2949  0317                     	;# 
  2950  0318                     	;# 
  2951  038C                     	;# 
  2952  038D                     	;# 
  2953  038E                     	;# 
  2954  0391                     	;# 
  2955  0392                     	;# 
  2956  0393                     	;# 
  2957  0394                     	;# 
  2958  0395                     	;# 
  2959  0396                     	;# 
  2960  0397                     	;# 
  2961  0398                     	;# 
  2962  0399                     	;# 
  2963  039A                     	;# 
  2964  039C                     	;# 
  2965  039D                     	;# 
  2966  039E                     	;# 
  2967  039F                     	;# 
  2968  040C                     	;# 
  2969  040D                     	;# 
  2970  040E                     	;# 
  2971  0411                     	;# 
  2972  0411                     	;# 
  2973  0412                     	;# 
  2974  0413                     	;# 
  2975  0414                     	;# 
  2976  0415                     	;# 
  2977  0416                     	;# 
  2978  0417                     	;# 
  2979  0418                     	;# 
  2980  0418                     	;# 
  2981  0419                     	;# 
  2982  041A                     	;# 
  2983  041B                     	;# 
  2984  041C                     	;# 
  2985  041D                     	;# 
  2986  041E                     	;# 
  2987  041F                     	;# 
  2988  048C                     	;# 
  2989  048D                     	;# 
  2990  048E                     	;# 
  2991  0498                     	;# 
  2992  0498                     	;# 
  2993  0499                     	;# 
  2994  049A                     	;# 
  2995  049B                     	;# 
  2996  049B                     	;# 
  2997  049C                     	;# 
  2998  049D                     	;# 
  2999  049E                     	;# 
  3000  049F                     	;# 
  3001  0617                     	;# 
  3002  0618                     	;# 
  3003  0619                     	;# 
  3004  0619                     	;# 
  3005  061A                     	;# 
  3006  061B                     	;# 
  3007  061C                     	;# 
  3008  061C                     	;# 
  3009  061F                     	;# 
  3010  0691                     	;# 
  3011  0692                     	;# 
  3012  0693                     	;# 
  3013  0694                     	;# 
  3014  0695                     	;# 
  3015  0696                     	;# 
  3016  0697                     	;# 
  3017  0698                     	;# 
  3018  0699                     	;# 
  3019  0711                     	;# 
  3020  0712                     	;# 
  3021  0713                     	;# 
  3022  0714                     	;# 
  3023  0715                     	;# 
  3024  0716                     	;# 
  3025  0717                     	;# 
  3026  0718                     	;# 
  3027  0719                     	;# 
  3028  0891                     	;# 
  3029  0891                     	;# 
  3030  0892                     	;# 
  3031  0893                     	;# 
  3032  0893                     	;# 
  3033  0894                     	;# 
  3034  0895                     	;# 
  3035  0896                     	;# 
  3036  089B                     	;# 
  3037  0911                     	;# 
  3038  0912                     	;# 
  3039  0913                     	;# 
  3040  0914                     	;# 
  3041  0915                     	;# 
  3042  0916                     	;# 
  3043  0918                     	;# 
  3044  0919                     	;# 
  3045  091A                     	;# 
  3046  091B                     	;# 
  3047  091C                     	;# 
  3048  091D                     	;# 
  3049  091E                     	;# 
  3050  091F                     	;# 
  3051  0E0F                     	;# 
  3052  0E10                     	;# 
  3053  0E11                     	;# 
  3054  0E12                     	;# 
  3055  0E13                     	;# 
  3056  0E14                     	;# 
  3057  0E15                     	;# 
  3058  0E16                     	;# 
  3059  0E17                     	;# 
  3060  0E18                     	;# 
  3061  0E19                     	;# 
  3062  0E1A                     	;# 
  3063  0E1B                     	;# 
  3064  0E1C                     	;# 
  3065  0E1D                     	;# 
  3066  0E1E                     	;# 
  3067  0E1F                     	;# 
  3068  0E20                     	;# 
  3069  0E21                     	;# 
  3070  0E22                     	;# 
  3071  0E24                     	;# 
  3072  0E25                     	;# 
  3073  0E28                     	;# 
  3074  0E29                     	;# 
  3075  0E2A                     	;# 
  3076  0E2B                     	;# 
  3077  0E2C                     	;# 
  3078  0E2D                     	;# 
  3079  0E2E                     	;# 
  3080  0E2F                     	;# 
  3081  0E90                     	;# 
  3082  0E91                     	;# 
  3083  0E92                     	;# 
  3084  0E94                     	;# 
  3085  0E95                     	;# 
  3086  0E9C                     	;# 
  3087  0E9D                     	;# 
  3088  0E9E                     	;# 
  3089  0E9F                     	;# 
  3090  0EA0                     	;# 
  3091  0EA1                     	;# 
  3092  0EA2                     	;# 
  3093  0EA3                     	;# 
  3094  0EA4                     	;# 
  3095  0EA5                     	;# 
  3096  0EA6                     	;# 
  3097  0EA7                     	;# 
  3098  0F0F                     	;# 
  3099  0F10                     	;# 
  3100  0F11                     	;# 
  3101  0F12                     	;# 
  3102  0F13                     	;# 
  3103  0F14                     	;# 
  3104  0F15                     	;# 
  3105  0F16                     	;# 
  3106  0F17                     	;# 
  3107  0F18                     	;# 
  3108  0F19                     	;# 
  3109  0F1A                     	;# 
  3110  0F1B                     	;# 
  3111  0F1C                     	;# 
  3112  0F1D                     	;# 
  3113  0F1E                     	;# 
  3114  0F1F                     	;# 
  3115  0F20                     	;# 
  3116  0F21                     	;# 
  3117  0F22                     	;# 
  3118  0F23                     	;# 
  3119  0F24                     	;# 
  3120  0F25                     	;# 
  3121  0F26                     	;# 
  3122  0F27                     	;# 
  3123  0F28                     	;# 
  3124  0F29                     	;# 
  3125  0F2A                     	;# 
  3126  0F2B                     	;# 
  3127  0F2C                     	;# 
  3128  0F2D                     	;# 
  3129  0F2E                     	;# 
  3130  0F2F                     	;# 
  3131  0F30                     	;# 
  3132  0F31                     	;# 
  3133  0F32                     	;# 
  3134  0F33                     	;# 
  3135  0F34                     	;# 
  3136  0F35                     	;# 
  3137  0F36                     	;# 
  3138  0F37                     	;# 
  3139  0FE4                     	;# 
  3140  0FE5                     	;# 
  3141  0FE6                     	;# 
  3142  0FE7                     	;# 
  3143  0FE8                     	;# 
  3144  0FE9                     	;# 
  3145  0FEA                     	;# 
  3146  0FEB                     	;# 
  3147  0FED                     	;# 
  3148  0FEE                     	;# 
  3149  0FEF                     	;# 
  3150  0000                     	;# 
  3151  0001                     	;# 
  3152  0002                     	;# 
  3153  0003                     	;# 
  3154  0004                     	;# 
  3155  0005                     	;# 
  3156  0006                     	;# 
  3157  0007                     	;# 
  3158  0008                     	;# 
  3159  0009                     	;# 
  3160  000A                     	;# 
  3161  000B                     	;# 
  3162  000C                     	;# 
  3163  000D                     	;# 
  3164  000E                     	;# 
  3165  0010                     	;# 
  3166  0011                     	;# 
  3167  0012                     	;# 
  3168  0013                     	;# 
  3169  0014                     	;# 
  3170  0015                     	;# 
  3171  0016                     	;# 
  3172  0017                     	;# 
  3173  0018                     	;# 
  3174  0019                     	;# 
  3175  0019                     	;# 
  3176  001A                     	;# 
  3177  001B                     	;# 
  3178  001C                     	;# 
  3179  001D                     	;# 
  3180  001E                     	;# 
  3181  001F                     	;# 
  3182  008C                     	;# 
  3183  008D                     	;# 
  3184  008E                     	;# 
  3185  0090                     	;# 
  3186  0091                     	;# 
  3187  0092                     	;# 
  3188  0093                     	;# 
  3189  0094                     	;# 
  3190  0097                     	;# 
  3191  009B                     	;# 
  3192  009B                     	;# 
  3193  009C                     	;# 
  3194  009D                     	;# 
  3195  009E                     	;# 
  3196  009F                     	;# 
  3197  010C                     	;# 
  3198  010D                     	;# 
  3199  010E                     	;# 
  3200  0111                     	;# 
  3201  0112                     	;# 
  3202  0113                     	;# 
  3203  0114                     	;# 
  3204  0115                     	;# 
  3205  0116                     	;# 
  3206  0117                     	;# 
  3207  0118                     	;# 
  3208  0119                     	;# 
  3209  018C                     	;# 
  3210  018D                     	;# 
  3211  018E                     	;# 
  3212  0197                     	;# 
  3213  0199                     	;# 
  3214  0199                     	;# 
  3215  0199                     	;# 
  3216  019A                     	;# 
  3217  019A                     	;# 
  3218  019A                     	;# 
  3219  019B                     	;# 
  3220  019B                     	;# 
  3221  019B                     	;# 
  3222  019B                     	;# 
  3223  019B                     	;# 
  3224  019C                     	;# 
  3225  019C                     	;# 
  3226  019C                     	;# 
  3227  019D                     	;# 
  3228  019D                     	;# 
  3229  019D                     	;# 
  3230  019E                     	;# 
  3231  019E                     	;# 
  3232  019E                     	;# 
  3233  019F                     	;# 
  3234  019F                     	;# 
  3235  019F                     	;# 
  3236  019F                     	;# 
  3237  019F                     	;# 
  3238  020C                     	;# 
  3239  020D                     	;# 
  3240  020E                     	;# 
  3241  0211                     	;# 
  3242  0211                     	;# 
  3243  0212                     	;# 
  3244  0212                     	;# 
  3245  0213                     	;# 
  3246  0213                     	;# 
  3247  0214                     	;# 
  3248  0214                     	;# 
  3249  0215                     	;# 
  3250  0215                     	;# 
  3251  0215                     	;# 
  3252  0215                     	;# 
  3253  0216                     	;# 
  3254  0216                     	;# 
  3255  0217                     	;# 
  3256  0217                     	;# 
  3257  0219                     	;# 
  3258  021A                     	;# 
  3259  021B                     	;# 
  3260  021C                     	;# 
  3261  021D                     	;# 
  3262  021D                     	;# 
  3263  021E                     	;# 
  3264  021F                     	;# 
  3265  028C                     	;# 
  3266  028D                     	;# 
  3267  028E                     	;# 
  3268  0291                     	;# 
  3269  0291                     	;# 
  3270  0292                     	;# 
  3271  0293                     	;# 
  3272  0294                     	;# 
  3273  0295                     	;# 
  3274  0295                     	;# 
  3275  0296                     	;# 
  3276  0297                     	;# 
  3277  0298                     	;# 
  3278  029F                     	;# 
  3279  030C                     	;# 
  3280  030D                     	;# 
  3281  030E                     	;# 
  3282  0311                     	;# 
  3283  0311                     	;# 
  3284  0312                     	;# 
  3285  0313                     	;# 
  3286  0314                     	;# 
  3287  0315                     	;# 
  3288  0315                     	;# 
  3289  0316                     	;# 
  3290  0317                     	;# 
  3291  0318                     	;# 
  3292  038C                     	;# 
  3293  038D                     	;# 
  3294  038E                     	;# 
  3295  0391                     	;# 
  3296  0392                     	;# 
  3297  0393                     	;# 
  3298  0394                     	;# 
  3299  0395                     	;# 
  3300  0396                     	;# 
  3301  0397                     	;# 
  3302  0398                     	;# 
  3303  0399                     	;# 
  3304  039A                     	;# 
  3305  039C                     	;# 
  3306  039D                     	;# 
  3307  039E                     	;# 
  3308  039F                     	;# 
  3309  040C                     	;# 
  3310  040D                     	;# 
  3311  040E                     	;# 
  3312  0411                     	;# 
  3313  0411                     	;# 
  3314  0412                     	;# 
  3315  0413                     	;# 
  3316  0414                     	;# 
  3317  0415                     	;# 
  3318  0416                     	;# 
  3319  0417                     	;# 
  3320  0418                     	;# 
  3321  0418                     	;# 
  3322  0419                     	;# 
  3323  041A                     	;# 
  3324  041B                     	;# 
  3325  041C                     	;# 
  3326  041D                     	;# 
  3327  041E                     	;# 
  3328  041F                     	;# 
  3329  048C                     	;# 
  3330  048D                     	;# 
  3331  048E                     	;# 
  3332  0498                     	;# 
  3333  0498                     	;# 
  3334  0499                     	;# 
  3335  049A                     	;# 
  3336  049B                     	;# 
  3337  049B                     	;# 
  3338  049C                     	;# 
  3339  049D                     	;# 
  3340  049E                     	;# 
  3341  049F                     	;# 
  3342  0617                     	;# 
  3343  0618                     	;# 
  3344  0619                     	;# 
  3345  0619                     	;# 
  3346  061A                     	;# 
  3347  061B                     	;# 
  3348  061C                     	;# 
  3349  061C                     	;# 
  3350  061F                     	;# 
  3351  0691                     	;# 
  3352  0692                     	;# 
  3353  0693                     	;# 
  3354  0694                     	;# 
  3355  0695                     	;# 
  3356  0696                     	;# 
  3357  0697                     	;# 
  3358  0698                     	;# 
  3359  0699                     	;# 
  3360  0711                     	;# 
  3361  0712                     	;# 
  3362  0713                     	;# 
  3363  0714                     	;# 
  3364  0715                     	;# 
  3365  0716                     	;# 
  3366  0717                     	;# 
  3367  0718                     	;# 
  3368  0719                     	;# 
  3369  0891                     	;# 
  3370  0891                     	;# 
  3371  0892                     	;# 
  3372  0893                     	;# 
  3373  0893                     	;# 
  3374  0894                     	;# 
  3375  0895                     	;# 
  3376  0896                     	;# 
  3377  089B                     	;# 
  3378  0911                     	;# 
  3379  0912                     	;# 
  3380  0913                     	;# 
  3381  0914                     	;# 
  3382  0915                     	;# 
  3383  0916                     	;# 
  3384  0918                     	;# 
  3385  0919                     	;# 
  3386  091A                     	;# 
  3387  091B                     	;# 
  3388  091C                     	;# 
  3389  091D                     	;# 
  3390  091E                     	;# 
  3391  091F                     	;# 
  3392  0E0F                     	;# 
  3393  0E10                     	;# 
  3394  0E11                     	;# 
  3395  0E12                     	;# 
  3396  0E13                     	;# 
  3397  0E14                     	;# 
  3398  0E15                     	;# 
  3399  0E16                     	;# 
  3400  0E17                     	;# 
  3401  0E18                     	;# 
  3402  0E19                     	;# 
  3403  0E1A                     	;# 
  3404  0E1B                     	;# 
  3405  0E1C                     	;# 
  3406  0E1D                     	;# 
  3407  0E1E                     	;# 
  3408  0E1F                     	;# 
  3409  0E20                     	;# 
  3410  0E21                     	;# 
  3411  0E22                     	;# 
  3412  0E24                     	;# 
  3413  0E25                     	;# 
  3414  0E28                     	;# 
  3415  0E29                     	;# 
  3416  0E2A                     	;# 
  3417  0E2B                     	;# 
  3418  0E2C                     	;# 
  3419  0E2D                     	;# 
  3420  0E2E                     	;# 
  3421  0E2F                     	;# 
  3422  0E90                     	;# 
  3423  0E91                     	;# 
  3424  0E92                     	;# 
  3425  0E94                     	;# 
  3426  0E95                     	;# 
  3427  0E9C                     	;# 
  3428  0E9D                     	;# 
  3429  0E9E                     	;# 
  3430  0E9F                     	;# 
  3431  0EA0                     	;# 
  3432  0EA1                     	;# 
  3433  0EA2                     	;# 
  3434  0EA3                     	;# 
  3435  0EA4                     	;# 
  3436  0EA5                     	;# 
  3437  0EA6                     	;# 
  3438  0EA7                     	;# 
  3439  0F0F                     	;# 
  3440  0F10                     	;# 
  3441  0F11                     	;# 
  3442  0F12                     	;# 
  3443  0F13                     	;# 
  3444  0F14                     	;# 
  3445  0F15                     	;# 
  3446  0F16                     	;# 
  3447  0F17                     	;# 
  3448  0F18                     	;# 
  3449  0F19                     	;# 
  3450  0F1A                     	;# 
  3451  0F1B                     	;# 
  3452  0F1C                     	;# 
  3453  0F1D                     	;# 
  3454  0F1E                     	;# 
  3455  0F1F                     	;# 
  3456  0F20                     	;# 
  3457  0F21                     	;# 
  3458  0F22                     	;# 
  3459  0F23                     	;# 
  3460  0F24                     	;# 
  3461  0F25                     	;# 
  3462  0F26                     	;# 
  3463  0F27                     	;# 
  3464  0F28                     	;# 
  3465  0F29                     	;# 
  3466  0F2A                     	;# 
  3467  0F2B                     	;# 
  3468  0F2C                     	;# 
  3469  0F2D                     	;# 
  3470  0F2E                     	;# 
  3471  0F2F                     	;# 
  3472  0F30                     	;# 
  3473  0F31                     	;# 
  3474  0F32                     	;# 
  3475  0F33                     	;# 
  3476  0F34                     	;# 
  3477  0F35                     	;# 
  3478  0F36                     	;# 
  3479  0F37                     	;# 
  3480  0FE4                     	;# 
  3481  0FE5                     	;# 
  3482  0FE6                     	;# 
  3483  0FE7                     	;# 
  3484  0FE8                     	;# 
  3485  0FE9                     	;# 
  3486  0FEA                     	;# 
  3487  0FEB                     	;# 
  3488  0FED                     	;# 
  3489  0FEE                     	;# 
  3490  0FEF                     	;# 
  3491  0000                     	;# 
  3492  0001                     	;# 
  3493  0002                     	;# 
  3494  0003                     	;# 
  3495  0004                     	;# 
  3496  0005                     	;# 
  3497  0006                     	;# 
  3498  0007                     	;# 
  3499  0008                     	;# 
  3500  0009                     	;# 
  3501  000A                     	;# 
  3502  000B                     	;# 
  3503  000C                     	;# 
  3504  000D                     	;# 
  3505  000E                     	;# 
  3506  0010                     	;# 
  3507  0011                     	;# 
  3508  0012                     	;# 
  3509  0013                     	;# 
  3510  0014                     	;# 
  3511  0015                     	;# 
  3512  0016                     	;# 
  3513  0017                     	;# 
  3514  0018                     	;# 
  3515  0019                     	;# 
  3516  0019                     	;# 
  3517  001A                     	;# 
  3518  001B                     	;# 
  3519  001C                     	;# 
  3520  001D                     	;# 
  3521  001E                     	;# 
  3522  001F                     	;# 
  3523  008C                     	;# 
  3524  008D                     	;# 
  3525  008E                     	;# 
  3526  0090                     	;# 
  3527  0091                     	;# 
  3528  0092                     	;# 
  3529  0093                     	;# 
  3530  0094                     	;# 
  3531  0097                     	;# 
  3532  009B                     	;# 
  3533  009B                     	;# 
  3534  009C                     	;# 
  3535  009D                     	;# 
  3536  009E                     	;# 
  3537  009F                     	;# 
  3538  010C                     	;# 
  3539  010D                     	;# 
  3540  010E                     	;# 
  3541  0111                     	;# 
  3542  0112                     	;# 
  3543  0113                     	;# 
  3544  0114                     	;# 
  3545  0115                     	;# 
  3546  0116                     	;# 
  3547  0117                     	;# 
  3548  0118                     	;# 
  3549  0119                     	;# 
  3550  018C                     	;# 
  3551  018D                     	;# 
  3552  018E                     	;# 
  3553  0199                     	;# 
  3554  0199                     	;# 
  3555  0199                     	;# 
  3556  019A                     	;# 
  3557  019A                     	;# 
  3558  019A                     	;# 
  3559  019B                     	;# 
  3560  019B                     	;# 
  3561  019B                     	;# 
  3562  019B                     	;# 
  3563  019B                     	;# 
  3564  019C                     	;# 
  3565  019C                     	;# 
  3566  019C                     	;# 
  3567  019D                     	;# 
  3568  019D                     	;# 
  3569  019D                     	;# 
  3570  019E                     	;# 
  3571  019E                     	;# 
  3572  019E                     	;# 
  3573  019F                     	;# 
  3574  019F                     	;# 
  3575  019F                     	;# 
  3576  019F                     	;# 
  3577  019F                     	;# 
  3578  020C                     	;# 
  3579  020D                     	;# 
  3580  020E                     	;# 
  3581  0211                     	;# 
  3582  0211                     	;# 
  3583  0212                     	;# 
  3584  0212                     	;# 
  3585  0213                     	;# 
  3586  0213                     	;# 
  3587  0214                     	;# 
  3588  0214                     	;# 
  3589  0215                     	;# 
  3590  0215                     	;# 
  3591  0215                     	;# 
  3592  0215                     	;# 
  3593  0216                     	;# 
  3594  0216                     	;# 
  3595  0217                     	;# 
  3596  0217                     	;# 
  3597  0219                     	;# 
  3598  021A                     	;# 
  3599  021B                     	;# 
  3600  021C                     	;# 
  3601  021D                     	;# 
  3602  021D                     	;# 
  3603  021E                     	;# 
  3604  021F                     	;# 
  3605  028C                     	;# 
  3606  028D                     	;# 
  3607  028E                     	;# 
  3608  0291                     	;# 
  3609  0291                     	;# 
  3610  0292                     	;# 
  3611  0293                     	;# 
  3612  0294                     	;# 
  3613  0295                     	;# 
  3614  0295                     	;# 
  3615  0296                     	;# 
  3616  0297                     	;# 
  3617  0298                     	;# 
  3618  029F                     	;# 
  3619  030C                     	;# 
  3620  030D                     	;# 
  3621  030E                     	;# 
  3622  0311                     	;# 
  3623  0311                     	;# 
  3624  0312                     	;# 
  3625  0313                     	;# 
  3626  0314                     	;# 
  3627  0315                     	;# 
  3628  0315                     	;# 
  3629  0316                     	;# 
  3630  0317                     	;# 
  3631  0318                     	;# 
  3632  038C                     	;# 
  3633  038D                     	;# 
  3634  038E                     	;# 
  3635  0391                     	;# 
  3636  0392                     	;# 
  3637  0393                     	;# 
  3638  0394                     	;# 
  3639  0395                     	;# 
  3640  0396                     	;# 
  3641  0397                     	;# 
  3642  0398                     	;# 
  3643  0399                     	;# 
  3644  039A                     	;# 
  3645  039C                     	;# 
  3646  039D                     	;# 
  3647  039E                     	;# 
  3648  039F                     	;# 
  3649  040C                     	;# 
  3650  040D                     	;# 
  3651  040E                     	;# 
  3652  0411                     	;# 
  3653  0411                     	;# 
  3654  0412                     	;# 
  3655  0413                     	;# 
  3656  0414                     	;# 
  3657  0415                     	;# 
  3658  0416                     	;# 
  3659  0417                     	;# 
  3660  0418                     	;# 
  3661  0418                     	;# 
  3662  0419                     	;# 
  3663  041A                     	;# 
  3664  041B                     	;# 
  3665  041C                     	;# 
  3666  041D                     	;# 
  3667  041E                     	;# 
  3668  041F                     	;# 
  3669  048C                     	;# 
  3670  048D                     	;# 
  3671  048E                     	;# 
  3672  0498                     	;# 
  3673  0498                     	;# 
  3674  0499                     	;# 
  3675  049A                     	;# 
  3676  049B                     	;# 
  3677  049B                     	;# 
  3678  049C                     	;# 
  3679  049D                     	;# 
  3680  049E                     	;# 
  3681  049F                     	;# 
  3682  0617                     	;# 
  3683  0618                     	;# 
  3684  0619                     	;# 
  3685  0619                     	;# 
  3686  061A                     	;# 
  3687  061B                     	;# 
  3688  061C                     	;# 
  3689  061C                     	;# 
  3690  061F                     	;# 
  3691  0691                     	;# 
  3692  0692                     	;# 
  3693  0693                     	;# 
  3694  0694                     	;# 
  3695  0695                     	;# 
  3696  0696                     	;# 
  3697  0697                     	;# 
  3698  0698                     	;# 
  3699  0699                     	;# 
  3700  0711                     	;# 
  3701  0712                     	;# 
  3702  0713                     	;# 
  3703  0714                     	;# 
  3704  0715                     	;# 
  3705  0716                     	;# 
  3706  0717                     	;# 
  3707  0718                     	;# 
  3708  0719                     	;# 
  3709  0891                     	;# 
  3710  0891                     	;# 
  3711  0892                     	;# 
  3712  0893                     	;# 
  3713  0893                     	;# 
  3714  0894                     	;# 
  3715  0895                     	;# 
  3716  0896                     	;# 
  3717  089B                     	;# 
  3718  0911                     	;# 
  3719  0912                     	;# 
  3720  0913                     	;# 
  3721  0914                     	;# 
  3722  0915                     	;# 
  3723  0916                     	;# 
  3724  0918                     	;# 
  3725  0919                     	;# 
  3726  091A                     	;# 
  3727  091B                     	;# 
  3728  091C                     	;# 
  3729  091D                     	;# 
  3730  091E                     	;# 
  3731  091F                     	;# 
  3732  0E0F                     	;# 
  3733  0E10                     	;# 
  3734  0E11                     	;# 
  3735  0E12                     	;# 
  3736  0E13                     	;# 
  3737  0E14                     	;# 
  3738  0E15                     	;# 
  3739  0E16                     	;# 
  3740  0E17                     	;# 
  3741  0E18                     	;# 
  3742  0E19                     	;# 
  3743  0E1A                     	;# 
  3744  0E1B                     	;# 
  3745  0E1C                     	;# 
  3746  0E1D                     	;# 
  3747  0E1E                     	;# 
  3748  0E1F                     	;# 
  3749  0E20                     	;# 
  3750  0E21                     	;# 
  3751  0E22                     	;# 
  3752  0E24                     	;# 
  3753  0E25                     	;# 
  3754  0E28                     	;# 
  3755  0E29                     	;# 
  3756  0E2A                     	;# 
  3757  0E2B                     	;# 
  3758  0E2C                     	;# 
  3759  0E2D                     	;# 
  3760  0E2E                     	;# 
  3761  0E2F                     	;# 
  3762  0E90                     	;# 
  3763  0E91                     	;# 
  3764  0E92                     	;# 
  3765  0E94                     	;# 
  3766  0E95                     	;# 
  3767  0E9C                     	;# 
  3768  0E9D                     	;# 
  3769  0E9E                     	;# 
  3770  0E9F                     	;# 
  3771  0EA0                     	;# 
  3772  0EA1                     	;# 
  3773  0EA2                     	;# 
  3774  0EA3                     	;# 
  3775  0EA4                     	;# 
  3776  0EA5                     	;# 
  3777  0EA6                     	;# 
  3778  0EA7                     	;# 
  3779  0F0F                     	;# 
  3780  0F10                     	;# 
  3781  0F11                     	;# 
  3782  0F12                     	;# 
  3783  0F13                     	;# 
  3784  0F14                     	;# 
  3785  0F15                     	;# 
  3786  0F16                     	;# 
  3787  0F17                     	;# 
  3788  0F18                     	;# 
  3789  0F19                     	;# 
  3790  0F1A                     	;# 
  3791  0F1B                     	;# 
  3792  0F1C                     	;# 
  3793  0F1D                     	;# 
  3794  0F1E                     	;# 
  3795  0F1F                     	;# 
  3796  0F20                     	;# 
  3797  0F21                     	;# 
  3798  0F22                     	;# 
  3799  0F23                     	;# 
  3800  0F24                     	;# 
  3801  0F25                     	;# 
  3802  0F26                     	;# 
  3803  0F27                     	;# 
  3804  0F28                     	;# 
  3805  0F29                     	;# 
  3806  0F2A                     	;# 
  3807  0F2B                     	;# 
  3808  0F2C                     	;# 
  3809  0F2D                     	;# 
  3810  0F2E                     	;# 
  3811  0F2F                     	;# 
  3812  0F30                     	;# 
  3813  0F31                     	;# 
  3814  0F32                     	;# 
  3815  0F33                     	;# 
  3816  0F34                     	;# 
  3817  0F35                     	;# 
  3818  0F36                     	;# 
  3819  0F37                     	;# 
  3820  0FE4                     	;# 
  3821  0FE5                     	;# 
  3822  0FE6                     	;# 
  3823  0FE7                     	;# 
  3824  0FE8                     	;# 
  3825  0FE9                     	;# 
  3826  0FEA                     	;# 
  3827  0FEB                     	;# 
  3828  0FED                     	;# 
  3829  0FEE                     	;# 
  3830  0FEF                     	;# 
  3831  0000                     	;# 
  3832  0001                     	;# 
  3833  0002                     	;# 
  3834  0003                     	;# 
  3835  0004                     	;# 
  3836  0005                     	;# 
  3837  0006                     	;# 
  3838  0007                     	;# 
  3839  0008                     	;# 
  3840  0009                     	;# 
  3841  000A                     	;# 
  3842  000B                     	;# 
  3843  000C                     	;# 
  3844  000D                     	;# 
  3845  000E                     	;# 
  3846  0010                     	;# 
  3847  0011                     	;# 
  3848  0012                     	;# 
  3849  0013                     	;# 
  3850  0014                     	;# 
  3851  0015                     	;# 
  3852  0016                     	;# 
  3853  0017                     	;# 
  3854  0018                     	;# 
  3855  0019                     	;# 
  3856  0019                     	;# 
  3857  001A                     	;# 
  3858  001B                     	;# 
  3859  001C                     	;# 
  3860  001D                     	;# 
  3861  001E                     	;# 
  3862  001F                     	;# 
  3863  008C                     	;# 
  3864  008D                     	;# 
  3865  008E                     	;# 
  3866  0090                     	;# 
  3867  0091                     	;# 
  3868  0092                     	;# 
  3869  0093                     	;# 
  3870  0094                     	;# 
  3871  0097                     	;# 
  3872  009B                     	;# 
  3873  009B                     	;# 
  3874  009C                     	;# 
  3875  009D                     	;# 
  3876  009E                     	;# 
  3877  009F                     	;# 
  3878  010C                     	;# 
  3879  010D                     	;# 
  3880  010E                     	;# 
  3881  0111                     	;# 
  3882  0112                     	;# 
  3883  0113                     	;# 
  3884  0114                     	;# 
  3885  0115                     	;# 
  3886  0116                     	;# 
  3887  0117                     	;# 
  3888  0118                     	;# 
  3889  0119                     	;# 
  3890  018C                     	;# 
  3891  018D                     	;# 
  3892  018E                     	;# 
  3893  0197                     	;# 
  3894  0199                     	;# 
  3895  0199                     	;# 
  3896  0199                     	;# 
  3897  019A                     	;# 
  3898  019A                     	;# 
  3899  019A                     	;# 
  3900  019B                     	;# 
  3901  019B                     	;# 
  3902  019B                     	;# 
  3903  019B                     	;# 
  3904  019B                     	;# 
  3905  019C                     	;# 
  3906  019C                     	;# 
  3907  019C                     	;# 
  3908  019D                     	;# 
  3909  019D                     	;# 
  3910  019D                     	;# 
  3911  019E                     	;# 
  3912  019E                     	;# 
  3913  019E                     	;# 
  3914  019F                     	;# 
  3915  019F                     	;# 
  3916  019F                     	;# 
  3917  019F                     	;# 
  3918  019F                     	;# 
  3919  020C                     	;# 
  3920  020D                     	;# 
  3921  020E                     	;# 
  3922  0211                     	;# 
  3923  0211                     	;# 
  3924  0212                     	;# 
  3925  0212                     	;# 
  3926  0213                     	;# 
  3927  0213                     	;# 
  3928  0214                     	;# 
  3929  0214                     	;# 
  3930  0215                     	;# 
  3931  0215                     	;# 
  3932  0215                     	;# 
  3933  0215                     	;# 
  3934  0216                     	;# 
  3935  0216                     	;# 
  3936  0217                     	;# 
  3937  0217                     	;# 
  3938  0219                     	;# 
  3939  021A                     	;# 
  3940  021B                     	;# 
  3941  021C                     	;# 
  3942  021D                     	;# 
  3943  021D                     	;# 
  3944  021E                     	;# 
  3945  021F                     	;# 
  3946  028C                     	;# 
  3947  028D                     	;# 
  3948  028E                     	;# 
  3949  0291                     	;# 
  3950  0291                     	;# 
  3951  0292                     	;# 
  3952  0293                     	;# 
  3953  0294                     	;# 
  3954  0295                     	;# 
  3955  0295                     	;# 
  3956  0296                     	;# 
  3957  0297                     	;# 
  3958  0298                     	;# 
  3959  029F                     	;# 
  3960  030C                     	;# 
  3961  030D                     	;# 
  3962  030E                     	;# 
  3963  0311                     	;# 
  3964  0311                     	;# 
  3965  0312                     	;# 
  3966  0313                     	;# 
  3967  0314                     	;# 
  3968  0315                     	;# 
  3969  0315                     	;# 
  3970  0316                     	;# 
  3971  0317                     	;# 
  3972  0318                     	;# 
  3973  038C                     	;# 
  3974  038D                     	;# 
  3975  038E                     	;# 
  3976  0391                     	;# 
  3977  0392                     	;# 
  3978  0393                     	;# 
  3979  0394                     	;# 
  3980  0395                     	;# 
  3981  0396                     	;# 
  3982  0397                     	;# 
  3983  0398                     	;# 
  3984  0399                     	;# 
  3985  039A                     	;# 
  3986  039C                     	;# 
  3987  039D                     	;# 
  3988  039E                     	;# 
  3989  039F                     	;# 
  3990  040C                     	;# 
  3991  040D                     	;# 
  3992  040E                     	;# 
  3993  0411                     	;# 
  3994  0411                     	;# 
  3995  0412                     	;# 
  3996  0413                     	;# 
  3997  0414                     	;# 
  3998  0415                     	;# 
  3999  0416                     	;# 
  4000  0417                     	;# 
  4001  0418                     	;# 
  4002  0418                     	;# 
  4003  0419                     	;# 
  4004  041A                     	;# 
  4005  041B                     	;# 
  4006  041C                     	;# 
  4007  041D                     	;# 
  4008  041E                     	;# 
  4009  041F                     	;# 
  4010  048C                     	;# 
  4011  048D                     	;# 
  4012  048E                     	;# 
  4013  0498                     	;# 
  4014  0498                     	;# 
  4015  0499                     	;# 
  4016  049A                     	;# 
  4017  049B                     	;# 
  4018  049B                     	;# 
  4019  049C                     	;# 
  4020  049D                     	;# 
  4021  049E                     	;# 
  4022  049F                     	;# 
  4023  0617                     	;# 
  4024  0618                     	;# 
  4025  0619                     	;# 
  4026  0619                     	;# 
  4027  061A                     	;# 
  4028  061B                     	;# 
  4029  061C                     	;# 
  4030  061C                     	;# 
  4031  061F                     	;# 
  4032  0691                     	;# 
  4033  0692                     	;# 
  4034  0693                     	;# 
  4035  0694                     	;# 
  4036  0695                     	;# 
  4037  0696                     	;# 
  4038  0697                     	;# 
  4039  0698                     	;# 
  4040  0699                     	;# 
  4041  0711                     	;# 
  4042  0712                     	;# 
  4043  0713                     	;# 
  4044  0714                     	;# 
  4045  0715                     	;# 
  4046  0716                     	;# 
  4047  0717                     	;# 
  4048  0718                     	;# 
  4049  0719                     	;# 
  4050  0891                     	;# 
  4051  0891                     	;# 
  4052  0892                     	;# 
  4053  0893                     	;# 
  4054  0893                     	;# 
  4055  0894                     	;# 
  4056  0895                     	;# 
  4057  0896                     	;# 
  4058  089B                     	;# 
  4059  0911                     	;# 
  4060  0912                     	;# 
  4061  0913                     	;# 
  4062  0914                     	;# 
  4063  0915                     	;# 
  4064  0916                     	;# 
  4065  0918                     	;# 
  4066  0919                     	;# 
  4067  091A                     	;# 
  4068  091B                     	;# 
  4069  091C                     	;# 
  4070  091D                     	;# 
  4071  091E                     	;# 
  4072  091F                     	;# 
  4073  0E0F                     	;# 
  4074  0E10                     	;# 
  4075  0E11                     	;# 
  4076  0E12                     	;# 
  4077  0E13                     	;# 
  4078  0E14                     	;# 
  4079  0E15                     	;# 
  4080  0E16                     	;# 
  4081  0E17                     	;# 
  4082  0E18                     	;# 
  4083  0E19                     	;# 
  4084  0E1A                     	;# 
  4085  0E1B                     	;# 
  4086  0E1C                     	;# 
  4087  0E1D                     	;# 
  4088  0E1E                     	;# 
  4089  0E1F                     	;# 
  4090  0E20                     	;# 
  4091  0E21                     	;# 
  4092  0E22                     	;# 
  4093  0E24                     	;# 
  4094  0E25                     	;# 
  4095  0E28                     	;# 
  4096  0E29                     	;# 
  4097  0E2A                     	;# 
  4098  0E2B                     	;# 
  4099  0E2C                     	;# 
  4100  0E2D                     	;# 
  4101  0E2E                     	;# 
  4102  0E2F                     	;# 
  4103  0E90                     	;# 
  4104  0E91                     	;# 
  4105  0E92                     	;# 
  4106  0E94                     	;# 
  4107  0E95                     	;# 
  4108  0E9C                     	;# 
  4109  0E9D                     	;# 
  4110  0E9E                     	;# 
  4111  0E9F                     	;# 
  4112  0EA0                     	;# 
  4113  0EA1                     	;# 
  4114  0EA2                     	;# 
  4115  0EA3                     	;# 
  4116  0EA4                     	;# 
  4117  0EA5                     	;# 
  4118  0EA6                     	;# 
  4119  0EA7                     	;# 
  4120  0F0F                     	;# 
  4121  0F10                     	;# 
  4122  0F11                     	;# 
  4123  0F12                     	;# 
  4124  0F13                     	;# 
  4125  0F14                     	;# 
  4126  0F15                     	;# 
  4127  0F16                     	;# 
  4128  0F17                     	;# 
  4129  0F18                     	;# 
  4130  0F19                     	;# 
  4131  0F1A                     	;# 
  4132  0F1B                     	;# 
  4133  0F1C                     	;# 
  4134  0F1D                     	;# 
  4135  0F1E                     	;# 
  4136  0F1F                     	;# 
  4137  0F20                     	;# 
  4138  0F21                     	;# 
  4139  0F22                     	;# 
  4140  0F23                     	;# 
  4141  0F24                     	;# 
  4142  0F25                     	;# 
  4143  0F26                     	;# 
  4144  0F27                     	;# 
  4145  0F28                     	;# 
  4146  0F29                     	;# 
  4147  0F2A                     	;# 
  4148  0F2B                     	;# 
  4149  0F2C                     	;# 
  4150  0F2D                     	;# 
  4151  0F2E                     	;# 
  4152  0F2F                     	;# 
  4153  0F30                     	;# 
  4154  0F31                     	;# 
  4155  0F32                     	;# 
  4156  0F33                     	;# 
  4157  0F34                     	;# 
  4158  0F35                     	;# 
  4159  0F36                     	;# 
  4160  0F37                     	;# 
  4161  0FE4                     	;# 
  4162  0FE5                     	;# 
  4163  0FE6                     	;# 
  4164  0FE7                     	;# 
  4165  0FE8                     	;# 
  4166  0FE9                     	;# 
  4167  0FEA                     	;# 
  4168  0FEB                     	;# 
  4169  0FED                     	;# 
  4170  0FEE                     	;# 
  4171  0FEF                     	;# 
  4172                           
  4173                           	psect	eeprom_data
  4174  0000  0000 0000 0000 0000 0001 0045 0043 004F 	db	0,0,0,0,1,69,67,79	;# 
  4175  0008  0042 004F 0054 0020 004C 0043 0043 002E 	db	66,79,84,32,76,67,67,46	;# 
  4176  0010  0000 0000 0000 0000 0002 0000 0000 0000 	db	0,0,0,0,2,0,0,0	;# 
  4177  0018  0001 0000 0000 0000 0000 0002 0000 0000 	db	1,0,0,0,0,2,0,0	;# 
  4178  0020  0000 0001 0000 0000 0000 0000 0003 0003 	db	0,1,0,0,0,0,3,3	;# 
  4179  0028  0001 0000 0028 0003 0002 0000 0064 0003 	db	1,0,40,3,2,0,100,3	;# 
  4180  0030  0003 0000 0048 0003 0004 0000 00C8 0003 	db	3,0,72,3,4,0,200,3	;# 
  4181  0038  0005 0000 0000 0003 0006 0000 0052 0003 	db	5,0,0,3,6,0,82,3	;# 
  4182  0040  0007 0000 0000 0002 0008 0000 0002 0009 	db	7,0,0,2,8,0,2,9	;# 
  4183  0048  0000 0002 000A 0001 0003 000B 0000 0000 	db	0,2,10,1,3,11,0,0	;# 
  4184  0050  0003 000C 0000 0000 0003 000D 0000 00B4 	db	3,12,0,0,3,13,0,180	;# 
  4185  0058  0003 000E 0000 0000 0003 000F 0000 0000 	db	3,14,0,0,3,15,0,0	;# 
  4186  0060  0003 0010 0000 0000 0003 0011 0000 0000 	db	3,16,0,0,3,17,0,0	;# 
  4187  0068  0003 0012 0000 0000 0003 0013 0000 0000 	db	3,18,0,0,3,19,0,0	;# 
  4188  0070  0000 0000 0000 0000 00FE 0000 0000 0000 	db	0,0,0,0,254,0,0,0	;# 
  4189  0078  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  4190  0080  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  4191  0088  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  4192  0090  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  4193  0098  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  4194  00A0  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  4195  00A8  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  4196  00B0  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  4197  00B8  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  4198  00C0  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  4199  00C8  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  4200  00D0  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  4201  00D8  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  4202  00E0  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  4203  00E8  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  4204  00F0  0000 0000 0000 0000 0000 0000 0000 0000 	db	0,0,0,0,0,0,0,0	;# 
  4205  0000                     	;# 
  4206  0001                     	;# 
  4207  0002                     	;# 
  4208  0003                     	;# 
  4209  0004                     	;# 
  4210  0005                     	;# 
  4211  0006                     	;# 
  4212  0007                     	;# 
  4213  0008                     	;# 
  4214  0009                     	;# 
  4215  000A                     	;# 
  4216  000B                     	;# 
  4217  000C                     	;# 
  4218  000D                     	;# 
  4219  000E                     	;# 
  4220  0010                     	;# 
  4221  0011                     	;# 
  4222  0012                     	;# 
  4223  0013                     	;# 
  4224  0014                     	;# 
  4225  0015                     	;# 
  4226  0016                     	;# 
  4227  0017                     	;# 
  4228  0018                     	;# 
  4229  0019                     	;# 
  4230  0019                     	;# 
  4231  001A                     	;# 
  4232  001B                     	;# 
  4233  001C                     	;# 
  4234  001D                     	;# 
  4235  001E                     	;# 
  4236  001F                     	;# 
  4237  008C                     	;# 
  4238  008D                     	;# 
  4239  008E                     	;# 
  4240  0090                     	;# 
  4241  0091                     	;# 
  4242  0092                     	;# 
  4243  0093                     	;# 
  4244  0094                     	;# 
  4245  0097                     	;# 
  4246  009B                     	;# 
  4247  009B                     	;# 
  4248  009C                     	;# 
  4249  009D                     	;# 
  4250  009E                     	;# 
  4251  009F                     	;# 
  4252  010C                     	;# 
  4253  010D                     	;# 
  4254  010E                     	;# 
  4255  0111                     	;# 
  4256  0112                     	;# 
  4257  0113                     	;# 
  4258  0114                     	;# 
  4259  0115                     	;# 
  4260  0116                     	;# 
  4261  0117                     	;# 
  4262  0118                     	;# 
  4263  0119                     	;# 
  4264  018C                     	;# 
  4265  018D                     	;# 
  4266  018E                     	;# 
  4267  0199                     	;# 
  4268  0199                     	;# 
  4269  0199                     	;# 
  4270  019A                     	;# 
  4271  019A                     	;# 
  4272  019A                     	;# 
  4273  019B                     	;# 
  4274  019B                     	;# 
  4275  019B                     	;# 
  4276  019B                     	;# 
  4277  019B                     	;# 
  4278  019C                     	;# 
  4279  019C                     	;# 
  4280  019C                     	;# 
  4281  019D                     	;# 
  4282  019D                     	;# 
  4283  019D                     	;# 
  4284  019E                     	;# 
  4285  019E                     	;# 
  4286  019E                     	;# 
  4287  019F                     	;# 
  4288  019F                     	;# 
  4289  019F                     	;# 
  4290  019F                     	;# 
  4291  019F                     	;# 
  4292  020C                     	;# 
  4293  020D                     	;# 
  4294  020E                     	;# 
  4295  0211                     	;# 
  4296  0211                     	;# 
  4297  0212                     	;# 
  4298  0212                     	;# 
  4299  0213                     	;# 
  4300  0213                     	;# 
  4301  0214                     	;# 
  4302  0214                     	;# 
  4303  0215                     	;# 
  4304  0215                     	;# 
  4305  0215                     	;# 
  4306  0215                     	;# 
  4307  0216                     	;# 
  4308  0216                     	;# 
  4309  0217                     	;# 
  4310  0217                     	;# 
  4311  0219                     	;# 
  4312  021A                     	;# 
  4313  021B                     	;# 
  4314  021C                     	;# 
  4315  021D                     	;# 
  4316  021D                     	;# 
  4317  021E                     	;# 
  4318  021F                     	;# 
  4319  028C                     	;# 
  4320  028D                     	;# 
  4321  028E                     	;# 
  4322  0291                     	;# 
  4323  0291                     	;# 
  4324  0292                     	;# 
  4325  0293                     	;# 
  4326  0294                     	;# 
  4327  0295                     	;# 
  4328  0295                     	;# 
  4329  0296                     	;# 
  4330  0297                     	;# 
  4331  0298                     	;# 
  4332  029F                     	;# 
  4333  030C                     	;# 
  4334  030D                     	;# 
  4335  030E                     	;# 
  4336  0311                     	;# 
  4337  0311                     	;# 
  4338  0312                     	;# 
  4339  0313                     	;# 
  4340  0314                     	;# 
  4341  0315                     	;# 
  4342  0315                     	;# 
  4343  0316                     	;# 
  4344  0317                     	;# 
  4345  0318                     	;# 
  4346  038C                     	;# 
  4347  038D                     	;# 
  4348  038E                     	;# 
  4349  0391                     	;# 
  4350  0392                     	;# 
  4351  0393                     	;# 
  4352  0394                     	;# 
  4353  0395                     	;# 
  4354  0396                     	;# 
  4355  0397                     	;# 
  4356  0398                     	;# 
  4357  0399                     	;# 
  4358  039A                     	;# 
  4359  039C                     	;# 
  4360  039D                     	;# 
  4361  039E                     	;# 
  4362  039F                     	;# 
  4363  040C                     	;# 
  4364  040D                     	;# 
  4365  040E                     	;# 
  4366  0411                     	;# 
  4367  0411                     	;# 
  4368  0412                     	;# 
  4369  0413                     	;# 
  4370  0414                     	;# 
  4371  0415                     	;# 
  4372  0416                     	;# 
  4373  0417                     	;# 
  4374  0418                     	;# 
  4375  0418                     	;# 
  4376  0419                     	;# 
  4377  041A                     	;# 
  4378  041B                     	;# 
  4379  041C                     	;# 
  4380  041D                     	;# 
  4381  041E                     	;# 
  4382  041F                     	;# 
  4383  048C                     	;# 
  4384  048D                     	;# 
  4385  048E                     	;# 
  4386  0498                     	;# 
  4387  0498                     	;# 
  4388  0499                     	;# 
  4389  049A                     	;# 
  4390  049B                     	;# 
  4391  049B                     	;# 
  4392  049C                     	;# 
  4393  049D                     	;# 
  4394  049E                     	;# 
  4395  049F                     	;# 
  4396  0617                     	;# 
  4397  0618                     	;# 
  4398  0619                     	;# 
  4399  0619                     	;# 
  4400  061A                     	;# 
  4401  061B                     	;# 
  4402  061C                     	;# 
  4403  061C                     	;# 
  4404  061F                     	;# 
  4405  0691                     	;# 
  4406  0692                     	;# 
  4407  0693                     	;# 
  4408  0694                     	;# 
  4409  0695                     	;# 
  4410  0696                     	;# 
  4411  0697                     	;# 
  4412  0698                     	;# 
  4413  0699                     	;# 
  4414  0711                     	;# 
  4415  0712                     	;# 
  4416  0713                     	;# 
  4417  0714                     	;# 
  4418  0715                     	;# 
  4419  0716                     	;# 
  4420  0717                     	;# 
  4421  0718                     	;# 
  4422  0719                     	;# 
  4423  0891                     	;# 
  4424  0891                     	;# 
  4425  0892                     	;# 
  4426  0893                     	;# 
  4427  0893                     	;# 
  4428  0894                     	;# 
  4429  0895                     	;# 
  4430  0896                     	;# 
  4431  089B                     	;# 
  4432  0911                     	;# 
  4433  0912                     	;# 
  4434  0913                     	;# 
  4435  0914                     	;# 
  4436  0915                     	;# 
  4437  0916                     	;# 
  4438  0918                     	;# 
  4439  0919                     	;# 
  4440  091A                     	;# 
  4441  091B                     	;# 
  4442  091C                     	;# 
  4443  091D                     	;# 
  4444  091E                     	;# 
  4445  091F                     	;# 
  4446  0E0F                     	;# 
  4447  0E10                     	;# 
  4448  0E11                     	;# 
  4449  0E12                     	;# 
  4450  0E13                     	;# 
  4451  0E14                     	;# 
  4452  0E15                     	;# 
  4453  0E16                     	;# 
  4454  0E17                     	;# 
  4455  0E18                     	;# 
  4456  0E19                     	;# 
  4457  0E1A                     	;# 
  4458  0E1B                     	;# 
  4459  0E1C                     	;# 
  4460  0E1D                     	;# 
  4461  0E1E                     	;# 
  4462  0E1F                     	;# 
  4463  0E20                     	;# 
  4464  0E21                     	;# 
  4465  0E22                     	;# 
  4466  0E24                     	;# 
  4467  0E25                     	;# 
  4468  0E28                     	;# 
  4469  0E29                     	;# 
  4470  0E2A                     	;# 
  4471  0E2B                     	;# 
  4472  0E2C                     	;# 
  4473  0E2D                     	;# 
  4474  0E2E                     	;# 
  4475  0E2F                     	;# 
  4476  0E90                     	;# 
  4477  0E91                     	;# 
  4478  0E92                     	;# 
  4479  0E94                     	;# 
  4480  0E95                     	;# 
  4481  0E9C                     	;# 
  4482  0E9D                     	;# 
  4483  0E9E                     	;# 
  4484  0E9F                     	;# 
  4485  0EA0                     	;# 
  4486  0EA1                     	;# 
  4487  0EA2                     	;# 
  4488  0EA3                     	;# 
  4489  0EA4                     	;# 
  4490  0EA5                     	;# 
  4491  0EA6                     	;# 
  4492  0EA7                     	;# 
  4493  0F0F                     	;# 
  4494  0F10                     	;# 
  4495  0F11                     	;# 
  4496  0F12                     	;# 
  4497  0F13                     	;# 
  4498  0F14                     	;# 
  4499  0F15                     	;# 
  4500  0F16                     	;# 
  4501  0F17                     	;# 
  4502  0F18                     	;# 
  4503  0F19                     	;# 
  4504  0F1A                     	;# 
  4505  0F1B                     	;# 
  4506  0F1C                     	;# 
  4507  0F1D                     	;# 
  4508  0F1E                     	;# 
  4509  0F1F                     	;# 
  4510  0F20                     	;# 
  4511  0F21                     	;# 
  4512  0F22                     	;# 
  4513  0F23                     	;# 
  4514  0F24                     	;# 
  4515  0F25                     	;# 
  4516  0F26                     	;# 
  4517  0F27                     	;# 
  4518  0F28                     	;# 
  4519  0F29                     	;# 
  4520  0F2A                     	;# 
  4521  0F2B                     	;# 
  4522  0F2C                     	;# 
  4523  0F2D                     	;# 
  4524  0F2E                     	;# 
  4525  0F2F                     	;# 
  4526  0F30                     	;# 
  4527  0F31                     	;# 
  4528  0F32                     	;# 
  4529  0F33                     	;# 
  4530  0F34                     	;# 
  4531  0F35                     	;# 
  4532  0F36                     	;# 
  4533  0F37                     	;# 
  4534  0FE4                     	;# 
  4535  0FE5                     	;# 
  4536  0FE6                     	;# 
  4537  0FE7                     	;# 
  4538  0FE8                     	;# 
  4539  0FE9                     	;# 
  4540  0FEA                     	;# 
  4541  0FEB                     	;# 
  4542  0FED                     	;# 
  4543  0FEE                     	;# 
  4544  0FEF                     	;# 
  4545  0000                     	;# 
  4546  0001                     	;# 
  4547  0002                     	;# 
  4548  0003                     	;# 
  4549  0004                     	;# 
  4550  0005                     	;# 
  4551  0006                     	;# 
  4552  0007                     	;# 
  4553  0008                     	;# 
  4554  0009                     	;# 
  4555  000A                     	;# 
  4556  000B                     	;# 
  4557  000C                     	;# 
  4558  000D                     	;# 
  4559  000E                     	;# 
  4560  0010                     	;# 
  4561  0011                     	;# 
  4562  0012                     	;# 
  4563  0013                     	;# 
  4564  0014                     	;# 
  4565  0015                     	;# 
  4566  0016                     	;# 
  4567  0017                     	;# 
  4568  0018                     	;# 
  4569  0019                     	;# 
  4570  0019                     	;# 
  4571  001A                     	;# 
  4572  001B                     	;# 
  4573  001C                     	;# 
  4574  001D                     	;# 
  4575  001E                     	;# 
  4576  001F                     	;# 
  4577  008C                     	;# 
  4578  008D                     	;# 
  4579  008E                     	;# 
  4580  0090                     	;# 
  4581  0091                     	;# 
  4582  0092                     	;# 
  4583  0093                     	;# 
  4584  0094                     	;# 
  4585  0097                     	;# 
  4586  009B                     	;# 
  4587  009B                     	;# 
  4588  009C                     	;# 
  4589  009D                     	;# 
  4590  009E                     	;# 
  4591  009F                     	;# 
  4592  010C                     	;# 
  4593  010D                     	;# 
  4594  010E                     	;# 
  4595  0111                     	;# 
  4596  0112                     	;# 
  4597  0113                     	;# 
  4598  0114                     	;# 
  4599  0115                     	;# 
  4600  0116                     	;# 
  4601  0117                     	;# 
  4602  0118                     	;# 
  4603  0119                     	;# 
  4604  018C                     	;# 
  4605  018D                     	;# 
  4606  018E                     	;# 
  4607  0197                     	;# 
  4608  0199                     	;# 
  4609  0199                     	;# 
  4610  0199                     	;# 
  4611  019A                     	;# 
  4612  019A                     	;# 
  4613  019A                     	;# 
  4614  019B                     	;# 
  4615  019B                     	;# 
  4616  019B                     	;# 
  4617  019B                     	;# 
  4618  019B                     	;# 
  4619  019C                     	;# 
  4620  019C                     	;# 
  4621  019C                     	;# 
  4622  019D                     	;# 
  4623  019D                     	;# 
  4624  019D                     	;# 
  4625  019E                     	;# 
  4626  019E                     	;# 
  4627  019E                     	;# 
  4628  019F                     	;# 
  4629  019F                     	;# 
  4630  019F                     	;# 
  4631  019F                     	;# 
  4632  019F                     	;# 
  4633  020C                     	;# 
  4634  020D                     	;# 
  4635  020E                     	;# 
  4636  0211                     	;# 
  4637  0211                     	;# 
  4638  0212                     	;# 
  4639  0212                     	;# 
  4640  0213                     	;# 
  4641  0213                     	;# 
  4642  0214                     	;# 
  4643  0214                     	;# 
  4644  0215                     	;# 
  4645  0215                     	;# 
  4646  0215                     	;# 
  4647  0215                     	;# 
  4648  0216                     	;# 
  4649  0216                     	;# 
  4650  0217                     	;# 
  4651  0217                     	;# 
  4652  0219                     	;# 
  4653  021A                     	;# 
  4654  021B                     	;# 
  4655  021C                     	;# 
  4656  021D                     	;# 
  4657  021D                     	;# 
  4658  021E                     	;# 
  4659  021F                     	;# 
  4660  028C                     	;# 
  4661  028D                     	;# 
  4662  028E                     	;# 
  4663  0291                     	;# 
  4664  0291                     	;# 
  4665  0292                     	;# 
  4666  0293                     	;# 
  4667  0294                     	;# 
  4668  0295                     	;# 
  4669  0295                     	;# 
  4670  0296                     	;# 
  4671  0297                     	;# 
  4672  0298                     	;# 
  4673  029F                     	;# 
  4674  030C                     	;# 
  4675  030D                     	;# 
  4676  030E                     	;# 
  4677  0311                     	;# 
  4678  0311                     	;# 
  4679  0312                     	;# 
  4680  0313                     	;# 
  4681  0314                     	;# 
  4682  0315                     	;# 
  4683  0315                     	;# 
  4684  0316                     	;# 
  4685  0317                     	;# 
  4686  0318                     	;# 
  4687  038C                     	;# 
  4688  038D                     	;# 
  4689  038E                     	;# 
  4690  0391                     	;# 
  4691  0392                     	;# 
  4692  0393                     	;# 
  4693  0394                     	;# 
  4694  0395                     	;# 
  4695  0396                     	;# 
  4696  0397                     	;# 
  4697  0398                     	;# 
  4698  0399                     	;# 
  4699  039A                     	;# 
  4700  039C                     	;# 
  4701  039D                     	;# 
  4702  039E                     	;# 
  4703  039F                     	;# 
  4704  040C                     	;# 
  4705  040D                     	;# 
  4706  040E                     	;# 
  4707  0411                     	;# 
  4708  0411                     	;# 
  4709  0412                     	;# 
  4710  0413                     	;# 
  4711  0414                     	;# 
  4712  0415                     	;# 
  4713  0416                     	;# 
  4714  0417                     	;# 
  4715  0418                     	;# 
  4716  0418                     	;# 
  4717  0419                     	;# 
  4718  041A                     	;# 
  4719  041B                     	;# 
  4720  041C                     	;# 
  4721  041D                     	;# 
  4722  041E                     	;# 
  4723  041F                     	;# 
  4724  048C                     	;# 
  4725  048D                     	;# 
  4726  048E                     	;# 
  4727  0498                     	;# 
  4728  0498                     	;# 
  4729  0499                     	;# 
  4730  049A                     	;# 
  4731  049B                     	;# 
  4732  049B                     	;# 
  4733  049C                     	;# 
  4734  049D                     	;# 
  4735  049E                     	;# 
  4736  049F                     	;# 
  4737  0617                     	;# 
  4738  0618                     	;# 
  4739  0619                     	;# 
  4740  0619                     	;# 
  4741  061A                     	;# 
  4742  061B                     	;# 
  4743  061C                     	;# 
  4744  061C                     	;# 
  4745  061F                     	;# 
  4746  0691                     	;# 
  4747  0692                     	;# 
  4748  0693                     	;# 
  4749  0694                     	;# 
  4750  0695                     	;# 
  4751  0696                     	;# 
  4752  0697                     	;# 
  4753  0698                     	;# 
  4754  0699                     	;# 
  4755  0711                     	;# 
  4756  0712                     	;# 
  4757  0713                     	;# 
  4758  0714                     	;# 
  4759  0715                     	;# 
  4760  0716                     	;# 
  4761  0717                     	;# 
  4762  0718                     	;# 
  4763  0719                     	;# 
  4764  0891                     	;# 
  4765  0891                     	;# 
  4766  0892                     	;# 
  4767  0893                     	;# 
  4768  0893                     	;# 
  4769  0894                     	;# 
  4770  0895                     	;# 
  4771  0896                     	;# 
  4772  089B                     	;# 
  4773  0911                     	;# 
  4774  0912                     	;# 
  4775  0913                     	;# 
  4776  0914                     	;# 
  4777  0915                     	;# 
  4778  0916                     	;# 
  4779  0918                     	;# 
  4780  0919                     	;# 
  4781  091A                     	;# 
  4782  091B                     	;# 
  4783  091C                     	;# 
  4784  091D                     	;# 
  4785  091E                     	;# 
  4786  091F                     	;# 
  4787  0E0F                     	;# 
  4788  0E10                     	;# 
  4789  0E11                     	;# 
  4790  0E12                     	;# 
  4791  0E13                     	;# 
  4792  0E14                     	;# 
  4793  0E15                     	;# 
  4794  0E16                     	;# 
  4795  0E17                     	;# 
  4796  0E18                     	;# 
  4797  0E19                     	;# 
  4798  0E1A                     	;# 
  4799  0E1B                     	;# 
  4800  0E1C                     	;# 
  4801  0E1D                     	;# 
  4802  0E1E                     	;# 
  4803  0E1F                     	;# 
  4804  0E20                     	;# 
  4805  0E21                     	;# 
  4806  0E22                     	;# 
  4807  0E24                     	;# 
  4808  0E25                     	;# 
  4809  0E28                     	;# 
  4810  0E29                     	;# 
  4811  0E2A                     	;# 
  4812  0E2B                     	;# 
  4813  0E2C                     	;# 
  4814  0E2D                     	;# 
  4815  0E2E                     	;# 
  4816  0E2F                     	;# 
  4817  0E90                     	;# 
  4818  0E91                     	;# 
  4819  0E92                     	;# 
  4820  0E94                     	;# 
  4821  0E95                     	;# 
  4822  0E9C                     	;# 
  4823  0E9D                     	;# 
  4824  0E9E                     	;# 
  4825  0E9F                     	;# 
  4826  0EA0                     	;# 
  4827  0EA1                     	;# 
  4828  0EA2                     	;# 
  4829  0EA3                     	;# 
  4830  0EA4                     	;# 
  4831  0EA5                     	;# 
  4832  0EA6                     	;# 
  4833  0EA7                     	;# 
  4834  0F0F                     	;# 
  4835  0F10                     	;# 
  4836  0F11                     	;# 
  4837  0F12                     	;# 
  4838  0F13                     	;# 
  4839  0F14                     	;# 
  4840  0F15                     	;# 
  4841  0F16                     	;# 
  4842  0F17                     	;# 
  4843  0F18                     	;# 
  4844  0F19                     	;# 
  4845  0F1A                     	;# 
  4846  0F1B                     	;# 
  4847  0F1C                     	;# 
  4848  0F1D                     	;# 
  4849  0F1E                     	;# 
  4850  0F1F                     	;# 
  4851  0F20                     	;# 
  4852  0F21                     	;# 
  4853  0F22                     	;# 
  4854  0F23                     	;# 
  4855  0F24                     	;# 
  4856  0F25                     	;# 
  4857  0F26                     	;# 
  4858  0F27                     	;# 
  4859  0F28                     	;# 
  4860  0F29                     	;# 
  4861  0F2A                     	;# 
  4862  0F2B                     	;# 
  4863  0F2C                     	;# 
  4864  0F2D                     	;# 
  4865  0F2E                     	;# 
  4866  0F2F                     	;# 
  4867  0F30                     	;# 
  4868  0F31                     	;# 
  4869  0F32                     	;# 
  4870  0F33                     	;# 
  4871  0F34                     	;# 
  4872  0F35                     	;# 
  4873  0F36                     	;# 
  4874  0F37                     	;# 
  4875  0FE4                     	;# 
  4876  0FE5                     	;# 
  4877  0FE6                     	;# 
  4878  0FE7                     	;# 
  4879  0FE8                     	;# 
  4880  0FE9                     	;# 
  4881  0FEA                     	;# 
  4882  0FEB                     	;# 
  4883  0FED                     	;# 
  4884  0FEE                     	;# 
  4885  0FEF                     	;# 
  4886  0000                     	;# 
  4887  0001                     	;# 
  4888  0002                     	;# 
  4889  0003                     	;# 
  4890  0004                     	;# 
  4891  0005                     	;# 
  4892  0006                     	;# 
  4893  0007                     	;# 
  4894  0008                     	;# 
  4895  0009                     	;# 
  4896  000A                     	;# 
  4897  000B                     	;# 
  4898  000C                     	;# 
  4899  000D                     	;# 
  4900  000E                     	;# 
  4901  0010                     	;# 
  4902  0011                     	;# 
  4903  0012                     	;# 
  4904  0013                     	;# 
  4905  0014                     	;# 
  4906  0015                     	;# 
  4907  0016                     	;# 
  4908  0017                     	;# 
  4909  0018                     	;# 
  4910  0019                     	;# 
  4911  0019                     	;# 
  4912  001A                     	;# 
  4913  001B                     	;# 
  4914  001C                     	;# 
  4915  001D                     	;# 
  4916  001E                     	;# 
  4917  001F                     	;# 
  4918  008C                     	;# 
  4919  008D                     	;# 
  4920  008E                     	;# 
  4921  0090                     	;# 
  4922  0091                     	;# 
  4923  0092                     	;# 
  4924  0093                     	;# 
  4925  0094                     	;# 
  4926  0097                     	;# 
  4927  009B                     	;# 
  4928  009B                     	;# 
  4929  009C                     	;# 
  4930  009D                     	;# 
  4931  009E                     	;# 
  4932  009F                     	;# 
  4933  010C                     	;# 
  4934  010D                     	;# 
  4935  010E                     	;# 
  4936  0111                     	;# 
  4937  0112                     	;# 
  4938  0113                     	;# 
  4939  0114                     	;# 
  4940  0115                     	;# 
  4941  0116                     	;# 
  4942  0117                     	;# 
  4943  0118                     	;# 
  4944  0119                     	;# 
  4945  018C                     	;# 
  4946  018D                     	;# 
  4947  018E                     	;# 
  4948  0199                     	;# 
  4949  0199                     	;# 
  4950  0199                     	;# 
  4951  019A                     	;# 
  4952  019A                     	;# 
  4953  019A                     	;# 
  4954  019B                     	;# 
  4955  019B                     	;# 
  4956  019B                     	;# 
  4957  019B                     	;# 
  4958  019B                     	;# 
  4959  019C                     	;# 
  4960  019C                     	;# 
  4961  019C                     	;# 
  4962  019D                     	;# 
  4963  019D                     	;# 
  4964  019D                     	;# 
  4965  019E                     	;# 
  4966  019E                     	;# 
  4967  019E                     	;# 
  4968  019F                     	;# 
  4969  019F                     	;# 
  4970  019F                     	;# 
  4971  019F                     	;# 
  4972  019F                     	;# 
  4973  020C                     	;# 
  4974  020D                     	;# 
  4975  020E                     	;# 
  4976  0211                     	;# 
  4977  0211                     	;# 
  4978  0212                     	;# 
  4979  0212                     	;# 
  4980  0213                     	;# 
  4981  0213                     	;# 
  4982  0214                     	;# 
  4983  0214                     	;# 
  4984  0215                     	;# 
  4985  0215                     	;# 
  4986  0215                     	;# 
  4987  0215                     	;# 
  4988  0216                     	;# 
  4989  0216                     	;# 
  4990  0217                     	;# 
  4991  0217                     	;# 
  4992  0219                     	;# 
  4993  021A                     	;# 
  4994  021B                     	;# 
  4995  021C                     	;# 
  4996  021D                     	;# 
  4997  021D                     	;# 
  4998  021E                     	;# 
  4999  021F                     	;# 
  5000  028C                     	;# 
  5001  028D                     	;# 
  5002  028E                     	;# 
  5003  0291                     	;# 
  5004  0291                     	;# 
  5005  0292                     	;# 
  5006  0293                     	;# 
  5007  0294                     	;# 
  5008  0295                     	;# 
  5009  0295                     	;# 
  5010  0296                     	;# 
  5011  0297                     	;# 
  5012  0298                     	;# 
  5013  029F                     	;# 
  5014  030C                     	;# 
  5015  030D                     	;# 
  5016  030E                     	;# 
  5017  0311                     	;# 
  5018  0311                     	;# 
  5019  0312                     	;# 
  5020  0313                     	;# 
  5021  0314                     	;# 
  5022  0315                     	;# 
  5023  0315                     	;# 
  5024  0316                     	;# 
  5025  0317                     	;# 
  5026  0318                     	;# 
  5027  038C                     	;# 
  5028  038D                     	;# 
  5029  038E                     	;# 
  5030  0391                     	;# 
  5031  0392                     	;# 
  5032  0393                     	;# 
  5033  0394                     	;# 
  5034  0395                     	;# 
  5035  0396                     	;# 
  5036  0397                     	;# 
  5037  0398                     	;# 
  5038  0399                     	;# 
  5039  039A                     	;# 
  5040  039C                     	;# 
  5041  039D                     	;# 
  5042  039E                     	;# 
  5043  039F                     	;# 
  5044  040C                     	;# 
  5045  040D                     	;# 
  5046  040E                     	;# 
  5047  0411                     	;# 
  5048  0411                     	;# 
  5049  0412                     	;# 
  5050  0413                     	;# 
  5051  0414                     	;# 
  5052  0415                     	;# 
  5053  0416                     	;# 
  5054  0417                     	;# 
  5055  0418                     	;# 
  5056  0418                     	;# 
  5057  0419                     	;# 
  5058  041A                     	;# 
  5059  041B                     	;# 
  5060  041C                     	;# 
  5061  041D                     	;# 
  5062  041E                     	;# 
  5063  041F                     	;# 
  5064  048C                     	;# 
  5065  048D                     	;# 
  5066  048E                     	;# 
  5067  0498                     	;# 
  5068  0498                     	;# 
  5069  0499                     	;# 
  5070  049A                     	;# 
  5071  049B                     	;# 
  5072  049B                     	;# 
  5073  049C                     	;# 
  5074  049D                     	;# 
  5075  049E                     	;# 
  5076  049F                     	;# 
  5077  0617                     	;# 
  5078  0618                     	;# 
  5079  0619                     	;# 
  5080  0619                     	;# 
  5081  061A                     	;# 
  5082  061B                     	;# 
  5083  061C                     	;# 
  5084  061C                     	;# 
  5085  061F                     	;# 
  5086  0691                     	;# 
  5087  0692                     	;# 
  5088  0693                     	;# 
  5089  0694                     	;# 
  5090  0695                     	;# 
  5091  0696                     	;# 
  5092  0697                     	;# 
  5093  0698                     	;# 
  5094  0699                     	;# 
  5095  0711                     	;# 
  5096  0712                     	;# 
  5097  0713                     	;# 
  5098  0714                     	;# 
  5099  0715                     	;# 
  5100  0716                     	;# 
  5101  0717                     	;# 
  5102  0718                     	;# 
  5103  0719                     	;# 
  5104  0891                     	;# 
  5105  0891                     	;# 
  5106  0892                     	;# 
  5107  0893                     	;# 
  5108  0893                     	;# 
  5109  0894                     	;# 
  5110  0895                     	;# 
  5111  0896                     	;# 
  5112  089B                     	;# 
  5113  0911                     	;# 
  5114  0912                     	;# 
  5115  0913                     	;# 
  5116  0914                     	;# 
  5117  0915                     	;# 
  5118  0916                     	;# 
  5119  0918                     	;# 
  5120  0919                     	;# 
  5121  091A                     	;# 
  5122  091B                     	;# 
  5123  091C                     	;# 
  5124  091D                     	;# 
  5125  091E                     	;# 
  5126  091F                     	;# 
  5127  0E0F                     	;# 
  5128  0E10                     	;# 
  5129  0E11                     	;# 
  5130  0E12                     	;# 
  5131  0E13                     	;# 
  5132  0E14                     	;# 
  5133  0E15                     	;# 
  5134  0E16                     	;# 
  5135  0E17                     	;# 
  5136  0E18                     	;# 
  5137  0E19                     	;# 
  5138  0E1A                     	;# 
  5139  0E1B                     	;# 
  5140  0E1C                     	;# 
  5141  0E1D                     	;# 
  5142  0E1E                     	;# 
  5143  0E1F                     	;# 
  5144  0E20                     	;# 
  5145  0E21                     	;# 
  5146  0E22                     	;# 
  5147  0E24                     	;# 
  5148  0E25                     	;# 
  5149  0E28                     	;# 
  5150  0E29                     	;# 
  5151  0E2A                     	;# 
  5152  0E2B                     	;# 
  5153  0E2C                     	;# 
  5154  0E2D                     	;# 
  5155  0E2E                     	;# 
  5156  0E2F                     	;# 
  5157  0E90                     	;# 
  5158  0E91                     	;# 
  5159  0E92                     	;# 
  5160  0E94                     	;# 
  5161  0E95                     	;# 
  5162  0E9C                     	;# 
  5163  0E9D                     	;# 
  5164  0E9E                     	;# 
  5165  0E9F                     	;# 
  5166  0EA0                     	;# 
  5167  0EA1                     	;# 
  5168  0EA2                     	;# 
  5169  0EA3                     	;# 
  5170  0EA4                     	;# 
  5171  0EA5                     	;# 
  5172  0EA6                     	;# 
  5173  0EA7                     	;# 
  5174  0F0F                     	;# 
  5175  0F10                     	;# 
  5176  0F11                     	;# 
  5177  0F12                     	;# 
  5178  0F13                     	;# 
  5179  0F14                     	;# 
  5180  0F15                     	;# 
  5181  0F16                     	;# 
  5182  0F17                     	;# 
  5183  0F18                     	;# 
  5184  0F19                     	;# 
  5185  0F1A                     	;# 
  5186  0F1B                     	;# 
  5187  0F1C                     	;# 
  5188  0F1D                     	;# 
  5189  0F1E                     	;# 
  5190  0F1F                     	;# 
  5191  0F20                     	;# 
  5192  0F21                     	;# 
  5193  0F22                     	;# 
  5194  0F23                     	;# 
  5195  0F24                     	;# 
  5196  0F25                     	;# 
  5197  0F26                     	;# 
  5198  0F27                     	;# 
  5199  0F28                     	;# 
  5200  0F29                     	;# 
  5201  0F2A                     	;# 
  5202  0F2B                     	;# 
  5203  0F2C                     	;# 
  5204  0F2D                     	;# 
  5205  0F2E                     	;# 
  5206  0F2F                     	;# 
  5207  0F30                     	;# 
  5208  0F31                     	;# 
  5209  0F32                     	;# 
  5210  0F33                     	;# 
  5211  0F34                     	;# 
  5212  0F35                     	;# 
  5213  0F36                     	;# 
  5214  0F37                     	;# 
  5215  0FE4                     	;# 
  5216  0FE5                     	;# 
  5217  0FE6                     	;# 
  5218  0FE7                     	;# 
  5219  0FE8                     	;# 
  5220  0FE9                     	;# 
  5221  0FEA                     	;# 
  5222  0FEB                     	;# 
  5223  0FED                     	;# 
  5224  0FEE                     	;# 
  5225  0FEF                     	;# 
  5226  0000                     	;# 
  5227  0001                     	;# 
  5228  0002                     	;# 
  5229  0003                     	;# 
  5230  0004                     	;# 
  5231  0005                     	;# 
  5232  0006                     	;# 
  5233  0007                     	;# 
  5234  0008                     	;# 
  5235  0009                     	;# 
  5236  000A                     	;# 
  5237  000B                     	;# 
  5238  000C                     	;# 
  5239  000D                     	;# 
  5240  000E                     	;# 
  5241  0010                     	;# 
  5242  0011                     	;# 
  5243  0012                     	;# 
  5244  0013                     	;# 
  5245  0014                     	;# 
  5246  0015                     	;# 
  5247  0016                     	;# 
  5248  0017                     	;# 
  5249  0018                     	;# 
  5250  0019                     	;# 
  5251  0019                     	;# 
  5252  001A                     	;# 
  5253  001B                     	;# 
  5254  001C                     	;# 
  5255  001D                     	;# 
  5256  001E                     	;# 
  5257  001F                     	;# 
  5258  008C                     	;# 
  5259  008D                     	;# 
  5260  008E                     	;# 
  5261  0090                     	;# 
  5262  0091                     	;# 
  5263  0092                     	;# 
  5264  0093                     	;# 
  5265  0094                     	;# 
  5266  0097                     	;# 
  5267  009B                     	;# 
  5268  009B                     	;# 
  5269  009C                     	;# 
  5270  009D                     	;# 
  5271  009E                     	;# 
  5272  009F                     	;# 
  5273  010C                     	;# 
  5274  010D                     	;# 
  5275  010E                     	;# 
  5276  0111                     	;# 
  5277  0112                     	;# 
  5278  0113                     	;# 
  5279  0114                     	;# 
  5280  0115                     	;# 
  5281  0116                     	;# 
  5282  0117                     	;# 
  5283  0118                     	;# 
  5284  0119                     	;# 
  5285  018C                     	;# 
  5286  018D                     	;# 
  5287  018E                     	;# 
  5288  0197                     	;# 
  5289  0199                     	;# 
  5290  0199                     	;# 
  5291  0199                     	;# 
  5292  019A                     	;# 
  5293  019A                     	;# 
  5294  019A                     	;# 
  5295  019B                     	;# 
  5296  019B                     	;# 
  5297  019B                     	;# 
  5298  019B                     	;# 
  5299  019B                     	;# 
  5300  019C                     	;# 
  5301  019C                     	;# 
  5302  019C                     	;# 
  5303  019D                     	;# 
  5304  019D                     	;# 
  5305  019D                     	;# 
  5306  019E                     	;# 
  5307  019E                     	;# 
  5308  019E                     	;# 
  5309  019F                     	;# 
  5310  019F                     	;# 
  5311  019F                     	;# 
  5312  019F                     	;# 
  5313  019F                     	;# 
  5314  020C                     	;# 
  5315  020D                     	;# 
  5316  020E                     	;# 
  5317  0211                     	;# 
  5318  0211                     	;# 
  5319  0212                     	;# 
  5320  0212                     	;# 
  5321  0213                     	;# 
  5322  0213                     	;# 
  5323  0214                     	;# 
  5324  0214                     	;# 
  5325  0215                     	;# 
  5326  0215                     	;# 
  5327  0215                     	;# 
  5328  0215                     	;# 
  5329  0216                     	;# 
  5330  0216                     	;# 
  5331  0217                     	;# 
  5332  0217                     	;# 
  5333  0219                     	;# 
  5334  021A                     	;# 
  5335  021B                     	;# 
  5336  021C                     	;# 
  5337  021D                     	;# 
  5338  021D                     	;# 
  5339  021E                     	;# 
  5340  021F                     	;# 
  5341  028C                     	;# 
  5342  028D                     	;# 
  5343  028E                     	;# 
  5344  0291                     	;# 
  5345  0291                     	;# 
  5346  0292                     	;# 
  5347  0293                     	;# 
  5348  0294                     	;# 
  5349  0295                     	;# 
  5350  0295                     	;# 
  5351  0296                     	;# 
  5352  0297                     	;# 
  5353  0298                     	;# 
  5354  029F                     	;# 
  5355  030C                     	;# 
  5356  030D                     	;# 
  5357  030E                     	;# 
  5358  0311                     	;# 
  5359  0311                     	;# 
  5360  0312                     	;# 
  5361  0313                     	;# 
  5362  0314                     	;# 
  5363  0315                     	;# 
  5364  0315                     	;# 
  5365  0316                     	;# 
  5366  0317                     	;# 
  5367  0318                     	;# 
  5368  038C                     	;# 
  5369  038D                     	;# 
  5370  038E                     	;# 
  5371  0391                     	;# 
  5372  0392                     	;# 
  5373  0393                     	;# 
  5374  0394                     	;# 
  5375  0395                     	;# 
  5376  0396                     	;# 
  5377  0397                     	;# 
  5378  0398                     	;# 
  5379  0399                     	;# 
  5380  039A                     	;# 
  5381  039C                     	;# 
  5382  039D                     	;# 
  5383  039E                     	;# 
  5384  039F                     	;# 
  5385  040C                     	;# 
  5386  040D                     	;# 
  5387  040E                     	;# 
  5388  0411                     	;# 
  5389  0411                     	;# 
  5390  0412                     	;# 
  5391  0413                     	;# 
  5392  0414                     	;# 
  5393  0415                     	;# 
  5394  0416                     	;# 
  5395  0417                     	;# 
  5396  0418                     	;# 
  5397  0418                     	;# 
  5398  0419                     	;# 
  5399  041A                     	;# 
  5400  041B                     	;# 
  5401  041C                     	;# 
  5402  041D                     	;# 
  5403  041E                     	;# 
  5404  041F                     	;# 
  5405  048C                     	;# 
  5406  048D                     	;# 
  5407  048E                     	;# 
  5408  0498                     	;# 
  5409  0498                     	;# 
  5410  0499                     	;# 
  5411  049A                     	;# 
  5412  049B                     	;# 
  5413  049B                     	;# 
  5414  049C                     	;# 
  5415  049D                     	;# 
  5416  049E                     	;# 
  5417  049F                     	;# 
  5418  0617                     	;# 
  5419  0618                     	;# 
  5420  0619                     	;# 
  5421  0619                     	;# 
  5422  061A                     	;# 
  5423  061B                     	;# 
  5424  061C                     	;# 
  5425  061C                     	;# 
  5426  061F                     	;# 
  5427  0691                     	;# 
  5428  0692                     	;# 
  5429  0693                     	;# 
  5430  0694                     	;# 
  5431  0695                     	;# 
  5432  0696                     	;# 
  5433  0697                     	;# 
  5434  0698                     	;# 
  5435  0699                     	;# 
  5436  0711                     	;# 
  5437  0712                     	;# 
  5438  0713                     	;# 
  5439  0714                     	;# 
  5440  0715                     	;# 
  5441  0716                     	;# 
  5442  0717                     	;# 
  5443  0718                     	;# 
  5444  0719                     	;# 
  5445  0891                     	;# 
  5446  0891                     	;# 
  5447  0892                     	;# 
  5448  0893                     	;# 
  5449  0893                     	;# 
  5450  0894                     	;# 
  5451  0895                     	;# 
  5452  0896                     	;# 
  5453  089B                     	;# 
  5454  0911                     	;# 
  5455  0912                     	;# 
  5456  0913                     	;# 
  5457  0914                     	;# 
  5458  0915                     	;# 
  5459  0916                     	;# 
  5460  0918                     	;# 
  5461  0919                     	;# 
  5462  091A                     	;# 
  5463  091B                     	;# 
  5464  091C                     	;# 
  5465  091D                     	;# 
  5466  091E                     	;# 
  5467  091F                     	;# 
  5468  0E0F                     	;# 
  5469  0E10                     	;# 
  5470  0E11                     	;# 
  5471  0E12                     	;# 
  5472  0E13                     	;# 
  5473  0E14                     	;# 
  5474  0E15                     	;# 
  5475  0E16                     	;# 
  5476  0E17                     	;# 
  5477  0E18                     	;# 
  5478  0E19                     	;# 
  5479  0E1A                     	;# 
  5480  0E1B                     	;# 
  5481  0E1C                     	;# 
  5482  0E1D                     	;# 
  5483  0E1E                     	;# 
  5484  0E1F                     	;# 
  5485  0E20                     	;# 
  5486  0E21                     	;# 
  5487  0E22                     	;# 
  5488  0E24                     	;# 
  5489  0E25                     	;# 
  5490  0E28                     	;# 
  5491  0E29                     	;# 
  5492  0E2A                     	;# 
  5493  0E2B                     	;# 
  5494  0E2C                     	;# 
  5495  0E2D                     	;# 
  5496  0E2E                     	;# 
  5497  0E2F                     	;# 
  5498  0E90                     	;# 
  5499  0E91                     	;# 
  5500  0E92                     	;# 
  5501  0E94                     	;# 
  5502  0E95                     	;# 
  5503  0E9C                     	;# 
  5504  0E9D                     	;# 
  5505  0E9E                     	;# 
  5506  0E9F                     	;# 
  5507  0EA0                     	;# 
  5508  0EA1                     	;# 
  5509  0EA2                     	;# 
  5510  0EA3                     	;# 
  5511  0EA4                     	;# 
  5512  0EA5                     	;# 
  5513  0EA6                     	;# 
  5514  0EA7                     	;# 
  5515  0F0F                     	;# 
  5516  0F10                     	;# 
  5517  0F11                     	;# 
  5518  0F12                     	;# 
  5519  0F13                     	;# 
  5520  0F14                     	;# 
  5521  0F15                     	;# 
  5522  0F16                     	;# 
  5523  0F17                     	;# 
  5524  0F18                     	;# 
  5525  0F19                     	;# 
  5526  0F1A                     	;# 
  5527  0F1B                     	;# 
  5528  0F1C                     	;# 
  5529  0F1D                     	;# 
  5530  0F1E                     	;# 
  5531  0F1F                     	;# 
  5532  0F20                     	;# 
  5533  0F21                     	;# 
  5534  0F22                     	;# 
  5535  0F23                     	;# 
  5536  0F24                     	;# 
  5537  0F25                     	;# 
  5538  0F26                     	;# 
  5539  0F27                     	;# 
  5540  0F28                     	;# 
  5541  0F29                     	;# 
  5542  0F2A                     	;# 
  5543  0F2B                     	;# 
  5544  0F2C                     	;# 
  5545  0F2D                     	;# 
  5546  0F2E                     	;# 
  5547  0F2F                     	;# 
  5548  0F30                     	;# 
  5549  0F31                     	;# 
  5550  0F32                     	;# 
  5551  0F33                     	;# 
  5552  0F34                     	;# 
  5553  0F35                     	;# 
  5554  0F36                     	;# 
  5555  0F37                     	;# 
  5556  0FE4                     	;# 
  5557  0FE5                     	;# 
  5558  0FE6                     	;# 
  5559  0FE7                     	;# 
  5560  0FE8                     	;# 
  5561  0FE9                     	;# 
  5562  0FEA                     	;# 
  5563  0FEB                     	;# 
  5564  0FED                     	;# 
  5565  0FEE                     	;# 
  5566  0FEF                     	;# 
  5567  0000                     	;# 
  5568  0001                     	;# 
  5569  0002                     	;# 
  5570  0003                     	;# 
  5571  0004                     	;# 
  5572  0005                     	;# 
  5573  0006                     	;# 
  5574  0007                     	;# 
  5575  0008                     	;# 
  5576  0009                     	;# 
  5577  000A                     	;# 
  5578  000B                     	;# 
  5579  000C                     	;# 
  5580  000D                     	;# 
  5581  000E                     	;# 
  5582  0010                     	;# 
  5583  0011                     	;# 
  5584  0012                     	;# 
  5585  0013                     	;# 
  5586  0014                     	;# 
  5587  0015                     	;# 
  5588  0016                     	;# 
  5589  0017                     	;# 
  5590  0018                     	;# 
  5591  0019                     	;# 
  5592  0019                     	;# 
  5593  001A                     	;# 
  5594  001B                     	;# 
  5595  001C                     	;# 
  5596  001D                     	;# 
  5597  001E                     	;# 
  5598  001F                     	;# 
  5599  008C                     	;# 
  5600  008D                     	;# 
  5601  008E                     	;# 
  5602  0090                     	;# 
  5603  0091                     	;# 
  5604  0092                     	;# 
  5605  0093                     	;# 
  5606  0094                     	;# 
  5607  0097                     	;# 
  5608  009B                     	;# 
  5609  009B                     	;# 
  5610  009C                     	;# 
  5611  009D                     	;# 
  5612  009E                     	;# 
  5613  009F                     	;# 
  5614  010C                     	;# 
  5615  010D                     	;# 
  5616  010E                     	;# 
  5617  0111                     	;# 
  5618  0112                     	;# 
  5619  0113                     	;# 
  5620  0114                     	;# 
  5621  0115                     	;# 
  5622  0116                     	;# 
  5623  0117                     	;# 
  5624  0118                     	;# 
  5625  0119                     	;# 
  5626  018C                     	;# 
  5627  018D                     	;# 
  5628  018E                     	;# 
  5629  0199                     	;# 
  5630  0199                     	;# 
  5631  0199                     	;# 
  5632  019A                     	;# 
  5633  019A                     	;# 
  5634  019A                     	;# 
  5635  019B                     	;# 
  5636  019B                     	;# 
  5637  019B                     	;# 
  5638  019B                     	;# 
  5639  019B                     	;# 
  5640  019C                     	;# 
  5641  019C                     	;# 
  5642  019C                     	;# 
  5643  019D                     	;# 
  5644  019D                     	;# 
  5645  019D                     	;# 
  5646  019E                     	;# 
  5647  019E                     	;# 
  5648  019E                     	;# 
  5649  019F                     	;# 
  5650  019F                     	;# 
  5651  019F                     	;# 
  5652  019F                     	;# 
  5653  019F                     	;# 
  5654  020C                     	;# 
  5655  020D                     	;# 
  5656  020E                     	;# 
  5657  0211                     	;# 
  5658  0211                     	;# 
  5659  0212                     	;# 
  5660  0212                     	;# 
  5661  0213                     	;# 
  5662  0213                     	;# 
  5663  0214                     	;# 
  5664  0214                     	;# 
  5665  0215                     	;# 
  5666  0215                     	;# 
  5667  0215                     	;# 
  5668  0215                     	;# 
  5669  0216                     	;# 
  5670  0216                     	;# 
  5671  0217                     	;# 
  5672  0217                     	;# 
  5673  0219                     	;# 
  5674  021A                     	;# 
  5675  021B                     	;# 
  5676  021C                     	;# 
  5677  021D                     	;# 
  5678  021D                     	;# 
  5679  021E                     	;# 
  5680  021F                     	;# 
  5681  028C                     	;# 
  5682  028D                     	;# 
  5683  028E                     	;# 
  5684  0291                     	;# 
  5685  0291                     	;# 
  5686  0292                     	;# 
  5687  0293                     	;# 
  5688  0294                     	;# 
  5689  0295                     	;# 
  5690  0295                     	;# 
  5691  0296                     	;# 
  5692  0297                     	;# 
  5693  0298                     	;# 
  5694  029F                     	;# 
  5695  030C                     	;# 
  5696  030D                     	;# 
  5697  030E                     	;# 
  5698  0311                     	;# 
  5699  0311                     	;# 
  5700  0312                     	;# 
  5701  0313                     	;# 
  5702  0314                     	;# 
  5703  0315                     	;# 
  5704  0315                     	;# 
  5705  0316                     	;# 
  5706  0317                     	;# 
  5707  0318                     	;# 
  5708  038C                     	;# 
  5709  038D                     	;# 
  5710  038E                     	;# 
  5711  0391                     	;# 
  5712  0392                     	;# 
  5713  0393                     	;# 
  5714  0394                     	;# 
  5715  0395                     	;# 
  5716  0396                     	;# 
  5717  0397                     	;# 
  5718  0398                     	;# 
  5719  0399                     	;# 
  5720  039A                     	;# 
  5721  039C                     	;# 
  5722  039D                     	;# 
  5723  039E                     	;# 
  5724  039F                     	;# 
  5725  040C                     	;# 
  5726  040D                     	;# 
  5727  040E                     	;# 
  5728  0411                     	;# 
  5729  0411                     	;# 
  5730  0412                     	;# 
  5731  0413                     	;# 
  5732  0414                     	;# 
  5733  0415                     	;# 
  5734  0416                     	;# 
  5735  0417                     	;# 
  5736  0418                     	;# 
  5737  0418                     	;# 
  5738  0419                     	;# 
  5739  041A                     	;# 
  5740  041B                     	;# 
  5741  041C                     	;# 
  5742  041D                     	;# 
  5743  041E                     	;# 
  5744  041F                     	;# 
  5745  048C                     	;# 
  5746  048D                     	;# 
  5747  048E                     	;# 
  5748  0498                     	;# 
  5749  0498                     	;# 
  5750  0499                     	;# 
  5751  049A                     	;# 
  5752  049B                     	;# 
  5753  049B                     	;# 
  5754  049C                     	;# 
  5755  049D                     	;# 
  5756  049E                     	;# 
  5757  049F                     	;# 
  5758  0617                     	;# 
  5759  0618                     	;# 
  5760  0619                     	;# 
  5761  0619                     	;# 
  5762  061A                     	;# 
  5763  061B                     	;# 
  5764  061C                     	;# 
  5765  061C                     	;# 
  5766  061F                     	;# 
  5767  0691                     	;# 
  5768  0692                     	;# 
  5769  0693                     	;# 
  5770  0694                     	;# 
  5771  0695                     	;# 
  5772  0696                     	;# 
  5773  0697                     	;# 
  5774  0698                     	;# 
  5775  0699                     	;# 
  5776  0711                     	;# 
  5777  0712                     	;# 
  5778  0713                     	;# 
  5779  0714                     	;# 
  5780  0715                     	;# 
  5781  0716                     	;# 
  5782  0717                     	;# 
  5783  0718                     	;# 
  5784  0719                     	;# 
  5785  0891                     	;# 
  5786  0891                     	;# 
  5787  0892                     	;# 
  5788  0893                     	;# 
  5789  0893                     	;# 
  5790  0894                     	;# 
  5791  0895                     	;# 
  5792  0896                     	;# 
  5793  089B                     	;# 
  5794  0911                     	;# 
  5795  0912                     	;# 
  5796  0913                     	;# 
  5797  0914                     	;# 
  5798  0915                     	;# 
  5799  0916                     	;# 
  5800  0918                     	;# 
  5801  0919                     	;# 
  5802  091A                     	;# 
  5803  091B                     	;# 
  5804  091C                     	;# 
  5805  091D                     	;# 
  5806  091E                     	;# 
  5807  091F                     	;# 
  5808  0E0F                     	;# 
  5809  0E10                     	;# 
  5810  0E11                     	;# 
  5811  0E12                     	;# 
  5812  0E13                     	;# 
  5813  0E14                     	;# 
  5814  0E15                     	;# 
  5815  0E16                     	;# 
  5816  0E17                     	;# 
  5817  0E18                     	;# 
  5818  0E19                     	;# 
  5819  0E1A                     	;# 
  5820  0E1B                     	;# 
  5821  0E1C                     	;# 
  5822  0E1D                     	;# 
  5823  0E1E                     	;# 
  5824  0E1F                     	;# 
  5825  0E20                     	;# 
  5826  0E21                     	;# 
  5827  0E22                     	;# 
  5828  0E24                     	;# 
  5829  0E25                     	;# 
  5830  0E28                     	;# 
  5831  0E29                     	;# 
  5832  0E2A                     	;# 
  5833  0E2B                     	;# 
  5834  0E2C                     	;# 
  5835  0E2D                     	;# 
  5836  0E2E                     	;# 
  5837  0E2F                     	;# 
  5838  0E90                     	;# 
  5839  0E91                     	;# 
  5840  0E92                     	;# 
  5841  0E94                     	;# 
  5842  0E95                     	;# 
  5843  0E9C                     	;# 
  5844  0E9D                     	;# 
  5845  0E9E                     	;# 
  5846  0E9F                     	;# 
  5847  0EA0                     	;# 
  5848  0EA1                     	;# 
  5849  0EA2                     	;# 
  5850  0EA3                     	;# 
  5851  0EA4                     	;# 
  5852  0EA5                     	;# 
  5853  0EA6                     	;# 
  5854  0EA7                     	;# 
  5855  0F0F                     	;# 
  5856  0F10                     	;# 
  5857  0F11                     	;# 
  5858  0F12                     	;# 
  5859  0F13                     	;# 
  5860  0F14                     	;# 
  5861  0F15                     	;# 
  5862  0F16                     	;# 
  5863  0F17                     	;# 
  5864  0F18                     	;# 
  5865  0F19                     	;# 
  5866  0F1A                     	;# 
  5867  0F1B                     	;# 
  5868  0F1C                     	;# 
  5869  0F1D                     	;# 
  5870  0F1E                     	;# 
  5871  0F1F                     	;# 
  5872  0F20                     	;# 
  5873  0F21                     	;# 
  5874  0F22                     	;# 
  5875  0F23                     	;# 
  5876  0F24                     	;# 
  5877  0F25                     	;# 
  5878  0F26                     	;# 
  5879  0F27                     	;# 
  5880  0F28                     	;# 
  5881  0F29                     	;# 
  5882  0F2A                     	;# 
  5883  0F2B                     	;# 
  5884  0F2C                     	;# 
  5885  0F2D                     	;# 
  5886  0F2E                     	;# 
  5887  0F2F                     	;# 
  5888  0F30                     	;# 
  5889  0F31                     	;# 
  5890  0F32                     	;# 
  5891  0F33                     	;# 
  5892  0F34                     	;# 
  5893  0F35                     	;# 
  5894  0F36                     	;# 
  5895  0F37                     	;# 
  5896  0FE4                     	;# 
  5897  0FE5                     	;# 
  5898  0FE6                     	;# 
  5899  0FE7                     	;# 
  5900  0FE8                     	;# 
  5901  0FE9                     	;# 
  5902  0FEA                     	;# 
  5903  0FEB                     	;# 
  5904  0FED                     	;# 
  5905  0FEE                     	;# 
  5906  0FEF                     	;# 
  5907  0000                     	;# 
  5908  0001                     	;# 
  5909  0002                     	;# 
  5910  0003                     	;# 
  5911  0004                     	;# 
  5912  0005                     	;# 
  5913  0006                     	;# 
  5914  0007                     	;# 
  5915  0008                     	;# 
  5916  0009                     	;# 
  5917  000A                     	;# 
  5918  000B                     	;# 
  5919  000C                     	;# 
  5920  000D                     	;# 
  5921  000E                     	;# 
  5922  0010                     	;# 
  5923  0011                     	;# 
  5924  0012                     	;# 
  5925  0013                     	;# 
  5926  0014                     	;# 
  5927  0015                     	;# 
  5928  0016                     	;# 
  5929  0017                     	;# 
  5930  0018                     	;# 
  5931  0019                     	;# 
  5932  0019                     	;# 
  5933  001A                     	;# 
  5934  001B                     	;# 
  5935  001C                     	;# 
  5936  001D                     	;# 
  5937  001E                     	;# 
  5938  001F                     	;# 
  5939  008C                     	;# 
  5940  008D                     	;# 
  5941  008E                     	;# 
  5942  0090                     	;# 
  5943  0091                     	;# 
  5944  0092                     	;# 
  5945  0093                     	;# 
  5946  0094                     	;# 
  5947  0097                     	;# 
  5948  009B                     	;# 
  5949  009B                     	;# 
  5950  009C                     	;# 
  5951  009D                     	;# 
  5952  009E                     	;# 
  5953  009F                     	;# 
  5954  010C                     	;# 
  5955  010D                     	;# 
  5956  010E                     	;# 
  5957  0111                     	;# 
  5958  0112                     	;# 
  5959  0113                     	;# 
  5960  0114                     	;# 
  5961  0115                     	;# 
  5962  0116                     	;# 
  5963  0117                     	;# 
  5964  0118                     	;# 
  5965  0119                     	;# 
  5966  018C                     	;# 
  5967  018D                     	;# 
  5968  018E                     	;# 
  5969  0197                     	;# 
  5970  0199                     	;# 
  5971  0199                     	;# 
  5972  0199                     	;# 
  5973  019A                     	;# 
  5974  019A                     	;# 
  5975  019A                     	;# 
  5976  019B                     	;# 
  5977  019B                     	;# 
  5978  019B                     	;# 
  5979  019B                     	;# 
  5980  019B                     	;# 
  5981  019C                     	;# 
  5982  019C                     	;# 
  5983  019C                     	;# 
  5984  019D                     	;# 
  5985  019D                     	;# 
  5986  019D                     	;# 
  5987  019E                     	;# 
  5988  019E                     	;# 
  5989  019E                     	;# 
  5990  019F                     	;# 
  5991  019F                     	;# 
  5992  019F                     	;# 
  5993  019F                     	;# 
  5994  019F                     	;# 
  5995  020C                     	;# 
  5996  020D                     	;# 
  5997  020E                     	;# 
  5998  0211                     	;# 
  5999  0211                     	;# 
  6000  0212                     	;# 
  6001  0212                     	;# 
  6002  0213                     	;# 
  6003  0213                     	;# 
  6004  0214                     	;# 
  6005  0214                     	;# 
  6006  0215                     	;# 
  6007  0215                     	;# 
  6008  0215                     	;# 
  6009  0215                     	;# 
  6010  0216                     	;# 
  6011  0216                     	;# 
  6012  0217                     	;# 
  6013  0217                     	;# 
  6014  0219                     	;# 
  6015  021A                     	;# 
  6016  021B                     	;# 
  6017  021C                     	;# 
  6018  021D                     	;# 
  6019  021D                     	;# 
  6020  021E                     	;# 
  6021  021F                     	;# 
  6022  028C                     	;# 
  6023  028D                     	;# 
  6024  028E                     	;# 
  6025  0291                     	;# 
  6026  0291                     	;# 
  6027  0292                     	;# 
  6028  0293                     	;# 
  6029  0294                     	;# 
  6030  0295                     	;# 
  6031  0295                     	;# 
  6032  0296                     	;# 
  6033  0297                     	;# 
  6034  0298                     	;# 
  6035  029F                     	;# 
  6036  030C                     	;# 
  6037  030D                     	;# 
  6038  030E                     	;# 
  6039  0311                     	;# 
  6040  0311                     	;# 
  6041  0312                     	;# 
  6042  0313                     	;# 
  6043  0314                     	;# 
  6044  0315                     	;# 
  6045  0315                     	;# 
  6046  0316                     	;# 
  6047  0317                     	;# 
  6048  0318                     	;# 
  6049  038C                     	;# 
  6050  038D                     	;# 
  6051  038E                     	;# 
  6052  0391                     	;# 
  6053  0392                     	;# 
  6054  0393                     	;# 
  6055  0394                     	;# 
  6056  0395                     	;# 
  6057  0396                     	;# 
  6058  0397                     	;# 
  6059  0398                     	;# 
  6060  0399                     	;# 
  6061  039A                     	;# 
  6062  039C                     	;# 
  6063  039D                     	;# 
  6064  039E                     	;# 
  6065  039F                     	;# 
  6066  040C                     	;# 
  6067  040D                     	;# 
  6068  040E                     	;# 
  6069  0411                     	;# 
  6070  0411                     	;# 
  6071  0412                     	;# 
  6072  0413                     	;# 
  6073  0414                     	;# 
  6074  0415                     	;# 
  6075  0416                     	;# 
  6076  0417                     	;# 
  6077  0418                     	;# 
  6078  0418                     	;# 
  6079  0419                     	;# 
  6080  041A                     	;# 
  6081  041B                     	;# 
  6082  041C                     	;# 
  6083  041D                     	;# 
  6084  041E                     	;# 
  6085  041F                     	;# 
  6086  048C                     	;# 
  6087  048D                     	;# 
  6088  048E                     	;# 
  6089  0498                     	;# 
  6090  0498                     	;# 
  6091  0499                     	;# 
  6092  049A                     	;# 
  6093  049B                     	;# 
  6094  049B                     	;# 
  6095  049C                     	;# 
  6096  049D                     	;# 
  6097  049E                     	;# 
  6098  049F                     	;# 
  6099  0617                     	;# 
  6100  0618                     	;# 
  6101  0619                     	;# 
  6102  0619                     	;# 
  6103  061A                     	;# 
  6104  061B                     	;# 
  6105  061C                     	;# 
  6106  061C                     	;# 
  6107  061F                     	;# 
  6108  0691                     	;# 
  6109  0692                     	;# 
  6110  0693                     	;# 
  6111  0694                     	;# 
  6112  0695                     	;# 
  6113  0696                     	;# 
  6114  0697                     	;# 
  6115  0698                     	;# 
  6116  0699                     	;# 
  6117  0711                     	;# 
  6118  0712                     	;# 
  6119  0713                     	;# 
  6120  0714                     	;# 
  6121  0715                     	;# 
  6122  0716                     	;# 
  6123  0717                     	;# 
  6124  0718                     	;# 
  6125  0719                     	;# 
  6126  0891                     	;# 
  6127  0891                     	;# 
  6128  0892                     	;# 
  6129  0893                     	;# 
  6130  0893                     	;# 
  6131  0894                     	;# 
  6132  0895                     	;# 
  6133  0896                     	;# 
  6134  089B                     	;# 
  6135  0911                     	;# 
  6136  0912                     	;# 
  6137  0913                     	;# 
  6138  0914                     	;# 
  6139  0915                     	;# 
  6140  0916                     	;# 
  6141  0918                     	;# 
  6142  0919                     	;# 
  6143  091A                     	;# 
  6144  091B                     	;# 
  6145  091C                     	;# 
  6146  091D                     	;# 
  6147  091E                     	;# 
  6148  091F                     	;# 
  6149  0E0F                     	;# 
  6150  0E10                     	;# 
  6151  0E11                     	;# 
  6152  0E12                     	;# 
  6153  0E13                     	;# 
  6154  0E14                     	;# 
  6155  0E15                     	;# 
  6156  0E16                     	;# 
  6157  0E17                     	;# 
  6158  0E18                     	;# 
  6159  0E19                     	;# 
  6160  0E1A                     	;# 
  6161  0E1B                     	;# 
  6162  0E1C                     	;# 
  6163  0E1D                     	;# 
  6164  0E1E                     	;# 
  6165  0E1F                     	;# 
  6166  0E20                     	;# 
  6167  0E21                     	;# 
  6168  0E22                     	;# 
  6169  0E24                     	;# 
  6170  0E25                     	;# 
  6171  0E28                     	;# 
  6172  0E29                     	;# 
  6173  0E2A                     	;# 
  6174  0E2B                     	;# 
  6175  0E2C                     	;# 
  6176  0E2D                     	;# 
  6177  0E2E                     	;# 
  6178  0E2F                     	;# 
  6179  0E90                     	;# 
  6180  0E91                     	;# 
  6181  0E92                     	;# 
  6182  0E94                     	;# 
  6183  0E95                     	;# 
  6184  0E9C                     	;# 
  6185  0E9D                     	;# 
  6186  0E9E                     	;# 
  6187  0E9F                     	;# 
  6188  0EA0                     	;# 
  6189  0EA1                     	;# 
  6190  0EA2                     	;# 
  6191  0EA3                     	;# 
  6192  0EA4                     	;# 
  6193  0EA5                     	;# 
  6194  0EA6                     	;# 
  6195  0EA7                     	;# 
  6196  0F0F                     	;# 
  6197  0F10                     	;# 
  6198  0F11                     	;# 
  6199  0F12                     	;# 
  6200  0F13                     	;# 
  6201  0F14                     	;# 
  6202  0F15                     	;# 
  6203  0F16                     	;# 
  6204  0F17                     	;# 
  6205  0F18                     	;# 
  6206  0F19                     	;# 
  6207  0F1A                     	;# 
  6208  0F1B                     	;# 
  6209  0F1C                     	;# 
  6210  0F1D                     	;# 
  6211  0F1E                     	;# 
  6212  0F1F                     	;# 
  6213  0F20                     	;# 
  6214  0F21                     	;# 
  6215  0F22                     	;# 
  6216  0F23                     	;# 
  6217  0F24                     	;# 
  6218  0F25                     	;# 
  6219  0F26                     	;# 
  6220  0F27                     	;# 
  6221  0F28                     	;# 
  6222  0F29                     	;# 
  6223  0F2A                     	;# 
  6224  0F2B                     	;# 
  6225  0F2C                     	;# 
  6226  0F2D                     	;# 
  6227  0F2E                     	;# 
  6228  0F2F                     	;# 
  6229  0F30                     	;# 
  6230  0F31                     	;# 
  6231  0F32                     	;# 
  6232  0F33                     	;# 
  6233  0F34                     	;# 
  6234  0F35                     	;# 
  6235  0F36                     	;# 
  6236  0F37                     	;# 
  6237  0FE4                     	;# 
  6238  0FE5                     	;# 
  6239  0FE6                     	;# 
  6240  0FE7                     	;# 
  6241  0FE8                     	;# 
  6242  0FE9                     	;# 
  6243  0FEA                     	;# 
  6244  0FEB                     	;# 
  6245  0FED                     	;# 
  6246  0FEE                     	;# 
  6247  0FEF                     	;# 
  6248  0000                     	;# 
  6249  0001                     	;# 
  6250  0002                     	;# 
  6251  0003                     	;# 
  6252  0004                     	;# 
  6253  0005                     	;# 
  6254  0006                     	;# 
  6255  0007                     	;# 
  6256  0008                     	;# 
  6257  0009                     	;# 
  6258  000A                     	;# 
  6259  000B                     	;# 
  6260  000C                     	;# 
  6261  000D                     	;# 
  6262  000E                     	;# 
  6263  0010                     	;# 
  6264  0011                     	;# 
  6265  0012                     	;# 
  6266  0013                     	;# 
  6267  0014                     	;# 
  6268  0015                     	;# 
  6269  0016                     	;# 
  6270  0017                     	;# 
  6271  0018                     	;# 
  6272  0019                     	;# 
  6273  0019                     	;# 
  6274  001A                     	;# 
  6275  001B                     	;# 
  6276  001C                     	;# 
  6277  001D                     	;# 
  6278  001E                     	;# 
  6279  001F                     	;# 
  6280  008C                     	;# 
  6281  008D                     	;# 
  6282  008E                     	;# 
  6283  0090                     	;# 
  6284  0091                     	;# 
  6285  0092                     	;# 
  6286  0093                     	;# 
  6287  0094                     	;# 
  6288  0097                     	;# 
  6289  009B                     	;# 
  6290  009B                     	;# 
  6291  009C                     	;# 
  6292  009D                     	;# 
  6293  009E                     	;# 
  6294  009F                     	;# 
  6295  010C                     	;# 
  6296  010D                     	;# 
  6297  010E                     	;# 
  6298  0111                     	;# 
  6299  0112                     	;# 
  6300  0113                     	;# 
  6301  0114                     	;# 
  6302  0115                     	;# 
  6303  0116                     	;# 
  6304  0117                     	;# 
  6305  0118                     	;# 
  6306  0119                     	;# 
  6307  018C                     	;# 
  6308  018D                     	;# 
  6309  018E                     	;# 
  6310  0199                     	;# 
  6311  0199                     	;# 
  6312  0199                     	;# 
  6313  019A                     	;# 
  6314  019A                     	;# 
  6315  019A                     	;# 
  6316  019B                     	;# 
  6317  019B                     	;# 
  6318  019B                     	;# 
  6319  019B                     	;# 
  6320  019B                     	;# 
  6321  019C                     	;# 
  6322  019C                     	;# 
  6323  019C                     	;# 
  6324  019D                     	;# 
  6325  019D                     	;# 
  6326  019D                     	;# 
  6327  019E                     	;# 
  6328  019E                     	;# 
  6329  019E                     	;# 
  6330  019F                     	;# 
  6331  019F                     	;# 
  6332  019F                     	;# 
  6333  019F                     	;# 
  6334  019F                     	;# 
  6335  020C                     	;# 
  6336  020D                     	;# 
  6337  020E                     	;# 
  6338  0211                     	;# 
  6339  0211                     	;# 
  6340  0212                     	;# 
  6341  0212                     	;# 
  6342  0213                     	;# 
  6343  0213                     	;# 
  6344  0214                     	;# 
  6345  0214                     	;# 
  6346  0215                     	;# 
  6347  0215                     	;# 
  6348  0215                     	;# 
  6349  0215                     	;# 
  6350  0216                     	;# 
  6351  0216                     	;# 
  6352  0217                     	;# 
  6353  0217                     	;# 
  6354  0219                     	;# 
  6355  021A                     	;# 
  6356  021B                     	;# 
  6357  021C                     	;# 
  6358  021D                     	;# 
  6359  021D                     	;# 
  6360  021E                     	;# 
  6361  021F                     	;# 
  6362  028C                     	;# 
  6363  028D                     	;# 
  6364  028E                     	;# 
  6365  0291                     	;# 
  6366  0291                     	;# 
  6367  0292                     	;# 
  6368  0293                     	;# 
  6369  0294                     	;# 
  6370  0295                     	;# 
  6371  0295                     	;# 
  6372  0296                     	;# 
  6373  0297                     	;# 
  6374  0298                     	;# 
  6375  029F                     	;# 
  6376  030C                     	;# 
  6377  030D                     	;# 
  6378  030E                     	;# 
  6379  0311                     	;# 
  6380  0311                     	;# 
  6381  0312                     	;# 
  6382  0313                     	;# 
  6383  0314                     	;# 
  6384  0315                     	;# 
  6385  0315                     	;# 
  6386  0316                     	;# 
  6387  0317                     	;# 
  6388  0318                     	;# 
  6389  038C                     	;# 
  6390  038D                     	;# 
  6391  038E                     	;# 
  6392  0391                     	;# 
  6393  0392                     	;# 
  6394  0393                     	;# 
  6395  0394                     	;# 
  6396  0395                     	;# 
  6397  0396                     	;# 
  6398  0397                     	;# 
  6399  0398                     	;# 
  6400  0399                     	;# 
  6401  039A                     	;# 
  6402  039C                     	;# 
  6403  039D                     	;# 
  6404  039E                     	;# 
  6405  039F                     	;# 
  6406  040C                     	;# 
  6407  040D                     	;# 
  6408  040E                     	;# 
  6409  0411                     	;# 
  6410  0411                     	;# 
  6411  0412                     	;# 
  6412  0413                     	;# 
  6413  0414                     	;# 
  6414  0415                     	;# 
  6415  0416                     	;# 
  6416  0417                     	;# 
  6417  0418                     	;# 
  6418  0418                     	;# 
  6419  0419                     	;# 
  6420  041A                     	;# 
  6421  041B                     	;# 
  6422  041C                     	;# 
  6423  041D                     	;# 
  6424  041E                     	;# 
  6425  041F                     	;# 
  6426  048C                     	;# 
  6427  048D                     	;# 
  6428  048E                     	;# 
  6429  0498                     	;# 
  6430  0498                     	;# 
  6431  0499                     	;# 
  6432  049A                     	;# 
  6433  049B                     	;# 
  6434  049B                     	;# 
  6435  049C                     	;# 
  6436  049D                     	;# 
  6437  049E                     	;# 
  6438  049F                     	;# 
  6439  0617                     	;# 
  6440  0618                     	;# 
  6441  0619                     	;# 
  6442  0619                     	;# 
  6443  061A                     	;# 
  6444  061B                     	;# 
  6445  061C                     	;# 
  6446  061C                     	;# 
  6447  061F                     	;# 
  6448  0691                     	;# 
  6449  0692                     	;# 
  6450  0693                     	;# 
  6451  0694                     	;# 
  6452  0695                     	;# 
  6453  0696                     	;# 
  6454  0697                     	;# 
  6455  0698                     	;# 
  6456  0699                     	;# 
  6457  0711                     	;# 
  6458  0712                     	;# 
  6459  0713                     	;# 
  6460  0714                     	;# 
  6461  0715                     	;# 
  6462  0716                     	;# 
  6463  0717                     	;# 
  6464  0718                     	;# 
  6465  0719                     	;# 
  6466  0891                     	;# 
  6467  0891                     	;# 
  6468  0892                     	;# 
  6469  0893                     	;# 
  6470  0893                     	;# 
  6471  0894                     	;# 
  6472  0895                     	;# 
  6473  0896                     	;# 
  6474  089B                     	;# 
  6475  0911                     	;# 
  6476  0912                     	;# 
  6477  0913                     	;# 
  6478  0914                     	;# 
  6479  0915                     	;# 
  6480  0916                     	;# 
  6481  0918                     	;# 
  6482  0919                     	;# 
  6483  091A                     	;# 
  6484  091B                     	;# 
  6485  091C                     	;# 
  6486  091D                     	;# 
  6487  091E                     	;# 
  6488  091F                     	;# 
  6489  0E0F                     	;# 
  6490  0E10                     	;# 
  6491  0E11                     	;# 
  6492  0E12                     	;# 
  6493  0E13                     	;# 
  6494  0E14                     	;# 
  6495  0E15                     	;# 
  6496  0E16                     	;# 
  6497  0E17                     	;# 
  6498  0E18                     	;# 
  6499  0E19                     	;# 
  6500  0E1A                     	;# 
  6501  0E1B                     	;# 
  6502  0E1C                     	;# 
  6503  0E1D                     	;# 
  6504  0E1E                     	;# 
  6505  0E1F                     	;# 
  6506  0E20                     	;# 
  6507  0E21                     	;# 
  6508  0E22                     	;# 
  6509  0E24                     	;# 
  6510  0E25                     	;# 
  6511  0E28                     	;# 
  6512  0E29                     	;# 
  6513  0E2A                     	;# 
  6514  0E2B                     	;# 
  6515  0E2C                     	;# 
  6516  0E2D                     	;# 
  6517  0E2E                     	;# 
  6518  0E2F                     	;# 
  6519  0E90                     	;# 
  6520  0E91                     	;# 
  6521  0E92                     	;# 
  6522  0E94                     	;# 
  6523  0E95                     	;# 
  6524  0E9C                     	;# 
  6525  0E9D                     	;# 
  6526  0E9E                     	;# 
  6527  0E9F                     	;# 
  6528  0EA0                     	;# 
  6529  0EA1                     	;# 
  6530  0EA2                     	;# 
  6531  0EA3                     	;# 
  6532  0EA4                     	;# 
  6533  0EA5                     	;# 
  6534  0EA6                     	;# 
  6535  0EA7                     	;# 
  6536  0F0F                     	;# 
  6537  0F10                     	;# 
  6538  0F11                     	;# 
  6539  0F12                     	;# 
  6540  0F13                     	;# 
  6541  0F14                     	;# 
  6542  0F15                     	;# 
  6543  0F16                     	;# 
  6544  0F17                     	;# 
  6545  0F18                     	;# 
  6546  0F19                     	;# 
  6547  0F1A                     	;# 
  6548  0F1B                     	;# 
  6549  0F1C                     	;# 
  6550  0F1D                     	;# 
  6551  0F1E                     	;# 
  6552  0F1F                     	;# 
  6553  0F20                     	;# 
  6554  0F21                     	;# 
  6555  0F22                     	;# 
  6556  0F23                     	;# 
  6557  0F24                     	;# 
  6558  0F25                     	;# 
  6559  0F26                     	;# 
  6560  0F27                     	;# 
  6561  0F28                     	;# 
  6562  0F29                     	;# 
  6563  0F2A                     	;# 
  6564  0F2B                     	;# 
  6565  0F2C                     	;# 
  6566  0F2D                     	;# 
  6567  0F2E                     	;# 
  6568  0F2F                     	;# 
  6569  0F30                     	;# 
  6570  0F31                     	;# 
  6571  0F32                     	;# 
  6572  0F33                     	;# 
  6573  0F34                     	;# 
  6574  0F35                     	;# 
  6575  0F36                     	;# 
  6576  0F37                     	;# 
  6577  0FE4                     	;# 
  6578  0FE5                     	;# 
  6579  0FE6                     	;# 
  6580  0FE7                     	;# 
  6581  0FE8                     	;# 
  6582  0FE9                     	;# 
  6583  0FEA                     	;# 
  6584  0FEB                     	;# 
  6585  0FED                     	;# 
  6586  0FEE                     	;# 
  6587  0FEF                     	;# 
  6588  0000                     	;# 
  6589  0001                     	;# 
  6590  0002                     	;# 
  6591  0003                     	;# 
  6592  0004                     	;# 
  6593  0005                     	;# 
  6594  0006                     	;# 
  6595  0007                     	;# 
  6596  0008                     	;# 
  6597  0009                     	;# 
  6598  000A                     	;# 
  6599  000B                     	;# 
  6600  000C                     	;# 
  6601  000D                     	;# 
  6602  000E                     	;# 
  6603  0010                     	;# 
  6604  0011                     	;# 
  6605  0012                     	;# 
  6606  0013                     	;# 
  6607  0014                     	;# 
  6608  0015                     	;# 
  6609  0016                     	;# 
  6610  0017                     	;# 
  6611  0018                     	;# 
  6612  0019                     	;# 
  6613  0019                     	;# 
  6614  001A                     	;# 
  6615  001B                     	;# 
  6616  001C                     	;# 
  6617  001D                     	;# 
  6618  001E                     	;# 
  6619  001F                     	;# 
  6620  008C                     	;# 
  6621  008D                     	;# 
  6622  008E                     	;# 
  6623  0090                     	;# 
  6624  0091                     	;# 
  6625  0092                     	;# 
  6626  0093                     	;# 
  6627  0094                     	;# 
  6628  0097                     	;# 
  6629  009B                     	;# 
  6630  009B                     	;# 
  6631  009C                     	;# 
  6632  009D                     	;# 
  6633  009E                     	;# 
  6634  009F                     	;# 
  6635  010C                     	;# 
  6636  010D                     	;# 
  6637  010E                     	;# 
  6638  0111                     	;# 
  6639  0112                     	;# 
  6640  0113                     	;# 
  6641  0114                     	;# 
  6642  0115                     	;# 
  6643  0116                     	;# 
  6644  0117                     	;# 
  6645  0118                     	;# 
  6646  0119                     	;# 
  6647  018C                     	;# 
  6648  018D                     	;# 
  6649  018E                     	;# 
  6650  0197                     	;# 
  6651  0199                     	;# 
  6652  0199                     	;# 
  6653  0199                     	;# 
  6654  019A                     	;# 
  6655  019A                     	;# 
  6656  019A                     	;# 
  6657  019B                     	;# 
  6658  019B                     	;# 
  6659  019B                     	;# 
  6660  019B                     	;# 
  6661  019B                     	;# 
  6662  019C                     	;# 
  6663  019C                     	;# 
  6664  019C                     	;# 
  6665  019D                     	;# 
  6666  019D                     	;# 
  6667  019D                     	;# 
  6668  019E                     	;# 
  6669  019E                     	;# 
  6670  019E                     	;# 
  6671  019F                     	;# 
  6672  019F                     	;# 
  6673  019F                     	;# 
  6674  019F                     	;# 
  6675  019F                     	;# 
  6676  020C                     	;# 
  6677  020D                     	;# 
  6678  020E                     	;# 
  6679  0211                     	;# 
  6680  0211                     	;# 
  6681  0212                     	;# 
  6682  0212                     	;# 
  6683  0213                     	;# 
  6684  0213                     	;# 
  6685  0214                     	;# 
  6686  0214                     	;# 
  6687  0215                     	;# 
  6688  0215                     	;# 
  6689  0215                     	;# 
  6690  0215                     	;# 
  6691  0216                     	;# 
  6692  0216                     	;# 
  6693  0217                     	;# 
  6694  0217                     	;# 
  6695  0219                     	;# 
  6696  021A                     	;# 
  6697  021B                     	;# 
  6698  021C                     	;# 
  6699  021D                     	;# 
  6700  021D                     	;# 
  6701  021E                     	;# 
  6702  021F                     	;# 
  6703  028C                     	;# 
  6704  028D                     	;# 
  6705  028E                     	;# 
  6706  0291                     	;# 
  6707  0291                     	;# 
  6708  0292                     	;# 
  6709  0293                     	;# 
  6710  0294                     	;# 
  6711  0295                     	;# 
  6712  0295                     	;# 
  6713  0296                     	;# 
  6714  0297                     	;# 
  6715  0298                     	;# 
  6716  029F                     	;# 
  6717  030C                     	;# 
  6718  030D                     	;# 
  6719  030E                     	;# 
  6720  0311                     	;# 
  6721  0311                     	;# 
  6722  0312                     	;# 
  6723  0313                     	;# 
  6724  0314                     	;# 
  6725  0315                     	;# 
  6726  0315                     	;# 
  6727  0316                     	;# 
  6728  0317                     	;# 
  6729  0318                     	;# 
  6730  038C                     	;# 
  6731  038D                     	;# 
  6732  038E                     	;# 
  6733  0391                     	;# 
  6734  0392                     	;# 
  6735  0393                     	;# 
  6736  0394                     	;# 
  6737  0395                     	;# 
  6738  0396                     	;# 
  6739  0397                     	;# 
  6740  0398                     	;# 
  6741  0399                     	;# 
  6742  039A                     	;# 
  6743  039C                     	;# 
  6744  039D                     	;# 
  6745  039E                     	;# 
  6746  039F                     	;# 
  6747  040C                     	;# 
  6748  040D                     	;# 
  6749  040E                     	;# 
  6750  0411                     	;# 
  6751  0411                     	;# 
  6752  0412                     	;# 
  6753  0413                     	;# 
  6754  0414                     	;# 
  6755  0415                     	;# 
  6756  0416                     	;# 
  6757  0417                     	;# 
  6758  0418                     	;# 
  6759  0418                     	;# 
  6760  0419                     	;# 
  6761  041A                     	;# 
  6762  041B                     	;# 
  6763  041C                     	;# 
  6764  041D                     	;# 
  6765  041E                     	;# 
  6766  041F                     	;# 
  6767  048C                     	;# 
  6768  048D                     	;# 
  6769  048E                     	;# 
  6770  0498                     	;# 
  6771  0498                     	;# 
  6772  0499                     	;# 
  6773  049A                     	;# 
  6774  049B                     	;# 
  6775  049B                     	;# 
  6776  049C                     	;# 
  6777  049D                     	;# 
  6778  049E                     	;# 
  6779  049F                     	;# 
  6780  0617                     	;# 
  6781  0618                     	;# 
  6782  0619                     	;# 
  6783  0619                     	;# 
  6784  061A                     	;# 
  6785  061B                     	;# 
  6786  061C                     	;# 
  6787  061C                     	;# 
  6788  061F                     	;# 
  6789  0691                     	;# 
  6790  0692                     	;# 
  6791  0693                     	;# 
  6792  0694                     	;# 
  6793  0695                     	;# 
  6794  0696                     	;# 
  6795  0697                     	;# 
  6796  0698                     	;# 
  6797  0699                     	;# 
  6798  0711                     	;# 
  6799  0712                     	;# 
  6800  0713                     	;# 
  6801  0714                     	;# 
  6802  0715                     	;# 
  6803  0716                     	;# 
  6804  0717                     	;# 
  6805  0718                     	;# 
  6806  0719                     	;# 
  6807  0891                     	;# 
  6808  0891                     	;# 
  6809  0892                     	;# 
  6810  0893                     	;# 
  6811  0893                     	;# 
  6812  0894                     	;# 
  6813  0895                     	;# 
  6814  0896                     	;# 
  6815  089B                     	;# 
  6816  0911                     	;# 
  6817  0912                     	;# 
  6818  0913                     	;# 
  6819  0914                     	;# 
  6820  0915                     	;# 
  6821  0916                     	;# 
  6822  0918                     	;# 
  6823  0919                     	;# 
  6824  091A                     	;# 
  6825  091B                     	;# 
  6826  091C                     	;# 
  6827  091D                     	;# 
  6828  091E                     	;# 
  6829  091F                     	;# 
  6830  0E0F                     	;# 
  6831  0E10                     	;# 
  6832  0E11                     	;# 
  6833  0E12                     	;# 
  6834  0E13                     	;# 
  6835  0E14                     	;# 
  6836  0E15                     	;# 
  6837  0E16                     	;# 
  6838  0E17                     	;# 
  6839  0E18                     	;# 
  6840  0E19                     	;# 
  6841  0E1A                     	;# 
  6842  0E1B                     	;# 
  6843  0E1C                     	;# 
  6844  0E1D                     	;# 
  6845  0E1E                     	;# 
  6846  0E1F                     	;# 
  6847  0E20                     	;# 
  6848  0E21                     	;# 
  6849  0E22                     	;# 
  6850  0E24                     	;# 
  6851  0E25                     	;# 
  6852  0E28                     	;# 
  6853  0E29                     	;# 
  6854  0E2A                     	;# 
  6855  0E2B                     	;# 
  6856  0E2C                     	;# 
  6857  0E2D                     	;# 
  6858  0E2E                     	;# 
  6859  0E2F                     	;# 
  6860  0E90                     	;# 
  6861  0E91                     	;# 
  6862  0E92                     	;# 
  6863  0E94                     	;# 
  6864  0E95                     	;# 
  6865  0E9C                     	;# 
  6866  0E9D                     	;# 
  6867  0E9E                     	;# 
  6868  0E9F                     	;# 
  6869  0EA0                     	;# 
  6870  0EA1                     	;# 
  6871  0EA2                     	;# 
  6872  0EA3                     	;# 
  6873  0EA4                     	;# 
  6874  0EA5                     	;# 
  6875  0EA6                     	;# 
  6876  0EA7                     	;# 
  6877  0F0F                     	;# 
  6878  0F10                     	;# 
  6879  0F11                     	;# 
  6880  0F12                     	;# 
  6881  0F13                     	;# 
  6882  0F14                     	;# 
  6883  0F15                     	;# 
  6884  0F16                     	;# 
  6885  0F17                     	;# 
  6886  0F18                     	;# 
  6887  0F19                     	;# 
  6888  0F1A                     	;# 
  6889  0F1B                     	;# 
  6890  0F1C                     	;# 
  6891  0F1D                     	;# 
  6892  0F1E                     	;# 
  6893  0F1F                     	;# 
  6894  0F20                     	;# 
  6895  0F21                     	;# 
  6896  0F22                     	;# 
  6897  0F23                     	;# 
  6898  0F24                     	;# 
  6899  0F25                     	;# 
  6900  0F26                     	;# 
  6901  0F27                     	;# 
  6902  0F28                     	;# 
  6903  0F29                     	;# 
  6904  0F2A                     	;# 
  6905  0F2B                     	;# 
  6906  0F2C                     	;# 
  6907  0F2D                     	;# 
  6908  0F2E                     	;# 
  6909  0F2F                     	;# 
  6910  0F30                     	;# 
  6911  0F31                     	;# 
  6912  0F32                     	;# 
  6913  0F33                     	;# 
  6914  0F34                     	;# 
  6915  0F35                     	;# 
  6916  0F36                     	;# 
  6917  0F37                     	;# 
  6918  0FE4                     	;# 
  6919  0FE5                     	;# 
  6920  0FE6                     	;# 
  6921  0FE7                     	;# 
  6922  0FE8                     	;# 
  6923  0FE9                     	;# 
  6924  0FEA                     	;# 
  6925  0FEB                     	;# 
  6926  0FED                     	;# 
  6927  0FEE                     	;# 
  6928  0FEF                     	;# 
  6929  0000                     	;# 
  6930  0001                     	;# 
  6931  0002                     	;# 
  6932  0003                     	;# 
  6933  0004                     	;# 
  6934  0005                     	;# 
  6935  0006                     	;# 
  6936  0007                     	;# 
  6937  0008                     	;# 
  6938  0009                     	;# 
  6939  000A                     	;# 
  6940  000B                     	;# 
  6941  000C                     	;# 
  6942  000D                     	;# 
  6943  000E                     	;# 
  6944  0010                     	;# 
  6945  0011                     	;# 
  6946  0012                     	;# 
  6947  0013                     	;# 
  6948  0014                     	;# 
  6949  0015                     	;# 
  6950  0016                     	;# 
  6951  0017                     	;# 
  6952  0018                     	;# 
  6953  0019                     	;# 
  6954  0019                     	;# 
  6955  001A                     	;# 
  6956  001B                     	;# 
  6957  001C                     	;# 
  6958  001D                     	;# 
  6959  001E                     	;# 
  6960  001F                     	;# 
  6961  008C                     	;# 
  6962  008D                     	;# 
  6963  008E                     	;# 
  6964  0090                     	;# 
  6965  0091                     	;# 
  6966  0092                     	;# 
  6967  0093                     	;# 
  6968  0094                     	;# 
  6969  0097                     	;# 
  6970  009B                     	;# 
  6971  009B                     	;# 
  6972  009C                     	;# 
  6973  009D                     	;# 
  6974  009E                     	;# 
  6975  009F                     	;# 
  6976  010C                     	;# 
  6977  010D                     	;# 
  6978  010E                     	;# 
  6979  0111                     	;# 
  6980  0112                     	;# 
  6981  0113                     	;# 
  6982  0114                     	;# 
  6983  0115                     	;# 
  6984  0116                     	;# 
  6985  0117                     	;# 
  6986  0118                     	;# 
  6987  0119                     	;# 
  6988  018C                     	;# 
  6989  018D                     	;# 
  6990  018E                     	;# 
  6991  0199                     	;# 
  6992  0199                     	;# 
  6993  0199                     	;# 
  6994  019A                     	;# 
  6995  019A                     	;# 
  6996  019A                     	;# 
  6997  019B                     	;# 
  6998  019B                     	;# 
  6999  019B                     	;# 
  7000  019B                     	;# 
  7001  019B                     	;# 
  7002  019C                     	;# 
  7003  019C                     	;# 
  7004  019C                     	;# 
  7005  019D                     	;# 
  7006  019D                     	;# 
  7007  019D                     	;# 
  7008  019E                     	;# 
  7009  019E                     	;# 
  7010  019E                     	;# 
  7011  019F                     	;# 
  7012  019F                     	;# 
  7013  019F                     	;# 
  7014  019F                     	;# 
  7015  019F                     	;# 
  7016  020C                     	;# 
  7017  020D                     	;# 
  7018  020E                     	;# 
  7019  0211                     	;# 
  7020  0211                     	;# 
  7021  0212                     	;# 
  7022  0212                     	;# 
  7023  0213                     	;# 
  7024  0213                     	;# 
  7025  0214                     	;# 
  7026  0214                     	;# 
  7027  0215                     	;# 
  7028  0215                     	;# 
  7029  0215                     	;# 
  7030  0215                     	;# 
  7031  0216                     	;# 
  7032  0216                     	;# 
  7033  0217                     	;# 
  7034  0217                     	;# 
  7035  0219                     	;# 
  7036  021A                     	;# 
  7037  021B                     	;# 
  7038  021C                     	;# 
  7039  021D                     	;# 
  7040  021D                     	;# 
  7041  021E                     	;# 
  7042  021F                     	;# 
  7043  028C                     	;# 
  7044  028D                     	;# 
  7045  028E                     	;# 
  7046  0291                     	;# 
  7047  0291                     	;# 
  7048  0292                     	;# 
  7049  0293                     	;# 
  7050  0294                     	;# 
  7051  0295                     	;# 
  7052  0295                     	;# 
  7053  0296                     	;# 
  7054  0297                     	;# 
  7055  0298                     	;# 
  7056  029F                     	;# 
  7057  030C                     	;# 
  7058  030D                     	;# 
  7059  030E                     	;# 
  7060  0311                     	;# 
  7061  0311                     	;# 
  7062  0312                     	;# 
  7063  0313                     	;# 
  7064  0314                     	;# 
  7065  0315                     	;# 
  7066  0315                     	;# 
  7067  0316                     	;# 
  7068  0317                     	;# 
  7069  0318                     	;# 
  7070  038C                     	;# 
  7071  038D                     	;# 
  7072  038E                     	;# 
  7073  0391                     	;# 
  7074  0392                     	;# 
  7075  0393                     	;# 
  7076  0394                     	;# 
  7077  0395                     	;# 
  7078  0396                     	;# 
  7079  0397                     	;# 
  7080  0398                     	;# 
  7081  0399                     	;# 
  7082  039A                     	;# 
  7083  039C                     	;# 
  7084  039D                     	;# 
  7085  039E                     	;# 
  7086  039F                     	;# 
  7087  040C                     	;# 
  7088  040D                     	;# 
  7089  040E                     	;# 
  7090  0411                     	;# 
  7091  0411                     	;# 
  7092  0412                     	;# 
  7093  0413                     	;# 
  7094  0414                     	;# 
  7095  0415                     	;# 
  7096  0416                     	;# 
  7097  0417                     	;# 
  7098  0418                     	;# 
  7099  0418                     	;# 
  7100  0419                     	;# 
  7101  041A                     	;# 
  7102  041B                     	;# 
  7103  041C                     	;# 
  7104  041D                     	;# 
  7105  041E                     	;# 
  7106  041F                     	;# 
  7107  048C                     	;# 
  7108  048D                     	;# 
  7109  048E                     	;# 
  7110  0498                     	;# 
  7111  0498                     	;# 
  7112  0499                     	;# 
  7113  049A                     	;# 
  7114  049B                     	;# 
  7115  049B                     	;# 
  7116  049C                     	;# 
  7117  049D                     	;# 
  7118  049E                     	;# 
  7119  049F                     	;# 
  7120  0617                     	;# 
  7121  0618                     	;# 
  7122  0619                     	;# 
  7123  0619                     	;# 
  7124  061A                     	;# 
  7125  061B                     	;# 
  7126  061C                     	;# 
  7127  061C                     	;# 
  7128  061F                     	;# 
  7129  0691                     	;# 
  7130  0692                     	;# 
  7131  0693                     	;# 
  7132  0694                     	;# 
  7133  0695                     	;# 
  7134  0696                     	;# 
  7135  0697                     	;# 
  7136  0698                     	;# 
  7137  0699                     	;# 
  7138  0711                     	;# 
  7139  0712                     	;# 
  7140  0713                     	;# 
  7141  0714                     	;# 
  7142  0715                     	;# 
  7143  0716                     	;# 
  7144  0717                     	;# 
  7145  0718                     	;# 
  7146  0719                     	;# 
  7147  0891                     	;# 
  7148  0891                     	;# 
  7149  0892                     	;# 
  7150  0893                     	;# 
  7151  0893                     	;# 
  7152  0894                     	;# 
  7153  0895                     	;# 
  7154  0896                     	;# 
  7155  089B                     	;# 
  7156  0911                     	;# 
  7157  0912                     	;# 
  7158  0913                     	;# 
  7159  0914                     	;# 
  7160  0915                     	;# 
  7161  0916                     	;# 
  7162  0918                     	;# 
  7163  0919                     	;# 
  7164  091A                     	;# 
  7165  091B                     	;# 
  7166  091C                     	;# 
  7167  091D                     	;# 
  7168  091E                     	;# 
  7169  091F                     	;# 
  7170  0E0F                     	;# 
  7171  0E10                     	;# 
  7172  0E11                     	;# 
  7173  0E12                     	;# 
  7174  0E13                     	;# 
  7175  0E14                     	;# 
  7176  0E15                     	;# 
  7177  0E16                     	;# 
  7178  0E17                     	;# 
  7179  0E18                     	;# 
  7180  0E19                     	;# 
  7181  0E1A                     	;# 
  7182  0E1B                     	;# 
  7183  0E1C                     	;# 
  7184  0E1D                     	;# 
  7185  0E1E                     	;# 
  7186  0E1F                     	;# 
  7187  0E20                     	;# 
  7188  0E21                     	;# 
  7189  0E22                     	;# 
  7190  0E24                     	;# 
  7191  0E25                     	;# 
  7192  0E28                     	;# 
  7193  0E29                     	;# 
  7194  0E2A                     	;# 
  7195  0E2B                     	;# 
  7196  0E2C                     	;# 
  7197  0E2D                     	;# 
  7198  0E2E                     	;# 
  7199  0E2F                     	;# 
  7200  0E90                     	;# 
  7201  0E91                     	;# 
  7202  0E92                     	;# 
  7203  0E94                     	;# 
  7204  0E95                     	;# 
  7205  0E9C                     	;# 
  7206  0E9D                     	;# 
  7207  0E9E                     	;# 
  7208  0E9F                     	;# 
  7209  0EA0                     	;# 
  7210  0EA1                     	;# 
  7211  0EA2                     	;# 
  7212  0EA3                     	;# 
  7213  0EA4                     	;# 
  7214  0EA5                     	;# 
  7215  0EA6                     	;# 
  7216  0EA7                     	;# 
  7217  0F0F                     	;# 
  7218  0F10                     	;# 
  7219  0F11                     	;# 
  7220  0F12                     	;# 
  7221  0F13                     	;# 
  7222  0F14                     	;# 
  7223  0F15                     	;# 
  7224  0F16                     	;# 
  7225  0F17                     	;# 
  7226  0F18                     	;# 
  7227  0F19                     	;# 
  7228  0F1A                     	;# 
  7229  0F1B                     	;# 
  7230  0F1C                     	;# 
  7231  0F1D                     	;# 
  7232  0F1E                     	;# 
  7233  0F1F                     	;# 
  7234  0F20                     	;# 
  7235  0F21                     	;# 
  7236  0F22                     	;# 
  7237  0F23                     	;# 
  7238  0F24                     	;# 
  7239  0F25                     	;# 
  7240  0F26                     	;# 
  7241  0F27                     	;# 
  7242  0F28                     	;# 
  7243  0F29                     	;# 
  7244  0F2A                     	;# 
  7245  0F2B                     	;# 
  7246  0F2C                     	;# 
  7247  0F2D                     	;# 
  7248  0F2E                     	;# 
  7249  0F2F                     	;# 
  7250  0F30                     	;# 
  7251  0F31                     	;# 
  7252  0F32                     	;# 
  7253  0F33                     	;# 
  7254  0F34                     	;# 
  7255  0F35                     	;# 
  7256  0F36                     	;# 
  7257  0F37                     	;# 
  7258  0FE4                     	;# 
  7259  0FE5                     	;# 
  7260  0FE6                     	;# 
  7261  0FE7                     	;# 
  7262  0FE8                     	;# 
  7263  0FE9                     	;# 
  7264  0FEA                     	;# 
  7265  0FEB                     	;# 
  7266  0FED                     	;# 
  7267  0FEE                     	;# 
  7268  0FEF                     	;# 
  7269  0000                     	;# 
  7270  0001                     	;# 
  7271  0002                     	;# 
  7272  0003                     	;# 
  7273  0004                     	;# 
  7274  0005                     	;# 
  7275  0006                     	;# 
  7276  0007                     	;# 
  7277  0008                     	;# 
  7278  0009                     	;# 
  7279  000A                     	;# 
  7280  000B                     	;# 
  7281  000C                     	;# 
  7282  000D                     	;# 
  7283  000E                     	;# 
  7284  0010                     	;# 
  7285  0011                     	;# 
  7286  0012                     	;# 
  7287  0013                     	;# 
  7288  0014                     	;# 
  7289  0015                     	;# 
  7290  0016                     	;# 
  7291  0017                     	;# 
  7292  0018                     	;# 
  7293  0019                     	;# 
  7294  0019                     	;# 
  7295  001A                     	;# 
  7296  001B                     	;# 
  7297  001C                     	;# 
  7298  001D                     	;# 
  7299  001E                     	;# 
  7300  001F                     	;# 
  7301  008C                     	;# 
  7302  008D                     	;# 
  7303  008E                     	;# 
  7304  0090                     	;# 
  7305  0091                     	;# 
  7306  0092                     	;# 
  7307  0093                     	;# 
  7308  0094                     	;# 
  7309  0097                     	;# 
  7310  009B                     	;# 
  7311  009B                     	;# 
  7312  009C                     	;# 
  7313  009D                     	;# 
  7314  009E                     	;# 
  7315  009F                     	;# 
  7316  010C                     	;# 
  7317  010D                     	;# 
  7318  010E                     	;# 
  7319  0111                     	;# 
  7320  0112                     	;# 
  7321  0113                     	;# 
  7322  0114                     	;# 
  7323  0115                     	;# 
  7324  0116                     	;# 
  7325  0117                     	;# 
  7326  0118                     	;# 
  7327  0119                     	;# 
  7328  018C                     	;# 
  7329  018D                     	;# 
  7330  018E                     	;# 
  7331  0197                     	;# 
  7332  0199                     	;# 
  7333  0199                     	;# 
  7334  0199                     	;# 
  7335  019A                     	;# 
  7336  019A                     	;# 
  7337  019A                     	;# 
  7338  019B                     	;# 
  7339  019B                     	;# 
  7340  019B                     	;# 
  7341  019B                     	;# 
  7342  019B                     	;# 
  7343  019C                     	;# 
  7344  019C                     	;# 
  7345  019C                     	;# 
  7346  019D                     	;# 
  7347  019D                     	;# 
  7348  019D                     	;# 
  7349  019E                     	;# 
  7350  019E                     	;# 
  7351  019E                     	;# 
  7352  019F                     	;# 
  7353  019F                     	;# 
  7354  019F                     	;# 
  7355  019F                     	;# 
  7356  019F                     	;# 
  7357  020C                     	;# 
  7358  020D                     	;# 
  7359  020E                     	;# 
  7360  0211                     	;# 
  7361  0211                     	;# 
  7362  0212                     	;# 
  7363  0212                     	;# 
  7364  0213                     	;# 
  7365  0213                     	;# 
  7366  0214                     	;# 
  7367  0214                     	;# 
  7368  0215                     	;# 
  7369  0215                     	;# 
  7370  0215                     	;# 
  7371  0215                     	;# 
  7372  0216                     	;# 
  7373  0216                     	;# 
  7374  0217                     	;# 
  7375  0217                     	;# 
  7376  0219                     	;# 
  7377  021A                     	;# 
  7378  021B                     	;# 
  7379  021C                     	;# 
  7380  021D                     	;# 
  7381  021D                     	;# 
  7382  021E                     	;# 
  7383  021F                     	;# 
  7384  028C                     	;# 
  7385  028D                     	;# 
  7386  028E                     	;# 
  7387  0291                     	;# 
  7388  0291                     	;# 
  7389  0292                     	;# 
  7390  0293                     	;# 
  7391  0294                     	;# 
  7392  0295                     	;# 
  7393  0295                     	;# 
  7394  0296                     	;# 
  7395  0297                     	;# 
  7396  0298                     	;# 
  7397  029F                     	;# 
  7398  030C                     	;# 
  7399  030D                     	;# 
  7400  030E                     	;# 
  7401  0311                     	;# 
  7402  0311                     	;# 
  7403  0312                     	;# 
  7404  0313                     	;# 
  7405  0314                     	;# 
  7406  0315                     	;# 
  7407  0315                     	;# 
  7408  0316                     	;# 
  7409  0317                     	;# 
  7410  0318                     	;# 
  7411  038C                     	;# 
  7412  038D                     	;# 
  7413  038E                     	;# 
  7414  0391                     	;# 
  7415  0392                     	;# 
  7416  0393                     	;# 
  7417  0394                     	;# 
  7418  0395                     	;# 
  7419  0396                     	;# 
  7420  0397                     	;# 
  7421  0398                     	;# 
  7422  0399                     	;# 
  7423  039A                     	;# 
  7424  039C                     	;# 
  7425  039D                     	;# 
  7426  039E                     	;# 
  7427  039F                     	;# 
  7428  040C                     	;# 
  7429  040D                     	;# 
  7430  040E                     	;# 
  7431  0411                     	;# 
  7432  0411                     	;# 
  7433  0412                     	;# 
  7434  0413                     	;# 
  7435  0414                     	;# 
  7436  0415                     	;# 
  7437  0416                     	;# 
  7438  0417                     	;# 
  7439  0418                     	;# 
  7440  0418                     	;# 
  7441  0419                     	;# 
  7442  041A                     	;# 
  7443  041B                     	;# 
  7444  041C                     	;# 
  7445  041D                     	;# 
  7446  041E                     	;# 
  7447  041F                     	;# 
  7448  048C                     	;# 
  7449  048D                     	;# 
  7450  048E                     	;# 
  7451  0498                     	;# 
  7452  0498                     	;# 
  7453  0499                     	;# 
  7454  049A                     	;# 
  7455  049B                     	;# 
  7456  049B                     	;# 
  7457  049C                     	;# 
  7458  049D                     	;# 
  7459  049E                     	;# 
  7460  049F                     	;# 
  7461  0617                     	;# 
  7462  0618                     	;# 
  7463  0619                     	;# 
  7464  0619                     	;# 
  7465  061A                     	;# 
  7466  061B                     	;# 
  7467  061C                     	;# 
  7468  061C                     	;# 
  7469  061F                     	;# 
  7470  0691                     	;# 
  7471  0692                     	;# 
  7472  0693                     	;# 
  7473  0694                     	;# 
  7474  0695                     	;# 
  7475  0696                     	;# 
  7476  0697                     	;# 
  7477  0698                     	;# 
  7478  0699                     	;# 
  7479  0711                     	;# 
  7480  0712                     	;# 
  7481  0713                     	;# 
  7482  0714                     	;# 
  7483  0715                     	;# 
  7484  0716                     	;# 
  7485  0717                     	;# 
  7486  0718                     	;# 
  7487  0719                     	;# 
  7488  0891                     	;# 
  7489  0891                     	;# 
  7490  0892                     	;# 
  7491  0893                     	;# 
  7492  0893                     	;# 
  7493  0894                     	;# 
  7494  0895                     	;# 
  7495  0896                     	;# 
  7496  089B                     	;# 
  7497  0911                     	;# 
  7498  0912                     	;# 
  7499  0913                     	;# 
  7500  0914                     	;# 
  7501  0915                     	;# 
  7502  0916                     	;# 
  7503  0918                     	;# 
  7504  0919                     	;# 
  7505  091A                     	;# 
  7506  091B                     	;# 
  7507  091C                     	;# 
  7508  091D                     	;# 
  7509  091E                     	;# 
  7510  091F                     	;# 
  7511  0E0F                     	;# 
  7512  0E10                     	;# 
  7513  0E11                     	;# 
  7514  0E12                     	;# 
  7515  0E13                     	;# 
  7516  0E14                     	;# 
  7517  0E15                     	;# 
  7518  0E16                     	;# 
  7519  0E17                     	;# 
  7520  0E18                     	;# 
  7521  0E19                     	;# 
  7522  0E1A                     	;# 
  7523  0E1B                     	;# 
  7524  0E1C                     	;# 
  7525  0E1D                     	;# 
  7526  0E1E                     	;# 
  7527  0E1F                     	;# 
  7528  0E20                     	;# 
  7529  0E21                     	;# 
  7530  0E22                     	;# 
  7531  0E24                     	;# 
  7532  0E25                     	;# 
  7533  0E28                     	;# 
  7534  0E29                     	;# 
  7535  0E2A                     	;# 
  7536  0E2B                     	;# 
  7537  0E2C                     	;# 
  7538  0E2D                     	;# 
  7539  0E2E                     	;# 
  7540  0E2F                     	;# 
  7541  0E90                     	;# 
  7542  0E91                     	;# 
  7543  0E92                     	;# 
  7544  0E94                     	;# 
  7545  0E95                     	;# 
  7546  0E9C                     	;# 
  7547  0E9D                     	;# 
  7548  0E9E                     	;# 
  7549  0E9F                     	;# 
  7550  0EA0                     	;# 
  7551  0EA1                     	;# 
  7552  0EA2                     	;# 
  7553  0EA3                     	;# 
  7554  0EA4                     	;# 
  7555  0EA5                     	;# 
  7556  0EA6                     	;# 
  7557  0EA7                     	;# 
  7558  0F0F                     	;# 
  7559  0F10                     	;# 
  7560  0F11                     	;# 
  7561  0F12                     	;# 
  7562  0F13                     	;# 
  7563  0F14                     	;# 
  7564  0F15                     	;# 
  7565  0F16                     	;# 
  7566  0F17                     	;# 
  7567  0F18                     	;# 
  7568  0F19                     	;# 
  7569  0F1A                     	;# 
  7570  0F1B                     	;# 
  7571  0F1C                     	;# 
  7572  0F1D                     	;# 
  7573  0F1E                     	;# 
  7574  0F1F                     	;# 
  7575  0F20                     	;# 
  7576  0F21                     	;# 
  7577  0F22                     	;# 
  7578  0F23                     	;# 
  7579  0F24                     	;# 
  7580  0F25                     	;# 
  7581  0F26                     	;# 
  7582  0F27                     	;# 
  7583  0F28                     	;# 
  7584  0F29                     	;# 
  7585  0F2A                     	;# 
  7586  0F2B                     	;# 
  7587  0F2C                     	;# 
  7588  0F2D                     	;# 
  7589  0F2E                     	;# 
  7590  0F2F                     	;# 
  7591  0F30                     	;# 
  7592  0F31                     	;# 
  7593  0F32                     	;# 
  7594  0F33                     	;# 
  7595  0F34                     	;# 
  7596  0F35                     	;# 
  7597  0F36                     	;# 
  7598  0F37                     	;# 
  7599  0FE4                     	;# 
  7600  0FE5                     	;# 
  7601  0FE6                     	;# 
  7602  0FE7                     	;# 
  7603  0FE8                     	;# 
  7604  0FE9                     	;# 
  7605  0FEA                     	;# 
  7606  0FEB                     	;# 
  7607  0FED                     	;# 
  7608  0FEE                     	;# 
  7609  0FEF                     	;# 
  7610  0000                     	;# 
  7611  0001                     	;# 
  7612  0002                     	;# 
  7613  0003                     	;# 
  7614  0004                     	;# 
  7615  0005                     	;# 
  7616  0006                     	;# 
  7617  0007                     	;# 
  7618  0008                     	;# 
  7619  0009                     	;# 
  7620  000A                     	;# 
  7621  000B                     	;# 
  7622  000C                     	;# 
  7623  000D                     	;# 
  7624  000E                     	;# 
  7625  0010                     	;# 
  7626  0011                     	;# 
  7627  0012                     	;# 
  7628  0013                     	;# 
  7629  0014                     	;# 
  7630  0015                     	;# 
  7631  0016                     	;# 
  7632  0017                     	;# 
  7633  0018                     	;# 
  7634  0019                     	;# 
  7635  0019                     	;# 
  7636  001A                     	;# 
  7637  001B                     	;# 
  7638  001C                     	;# 
  7639  001D                     	;# 
  7640  001E                     	;# 
  7641  001F                     	;# 
  7642  008C                     	;# 
  7643  008D                     	;# 
  7644  008E                     	;# 
  7645  0090                     	;# 
  7646  0091                     	;# 
  7647  0092                     	;# 
  7648  0093                     	;# 
  7649  0094                     	;# 
  7650  0097                     	;# 
  7651  009B                     	;# 
  7652  009B                     	;# 
  7653  009C                     	;# 
  7654  009D                     	;# 
  7655  009E                     	;# 
  7656  009F                     	;# 
  7657  010C                     	;# 
  7658  010D                     	;# 
  7659  010E                     	;# 
  7660  0111                     	;# 
  7661  0112                     	;# 
  7662  0113                     	;# 
  7663  0114                     	;# 
  7664  0115                     	;# 
  7665  0116                     	;# 
  7666  0117                     	;# 
  7667  0118                     	;# 
  7668  0119                     	;# 
  7669  018C                     	;# 
  7670  018D                     	;# 
  7671  018E                     	;# 
  7672  0199                     	;# 
  7673  0199                     	;# 
  7674  0199                     	;# 
  7675  019A                     	;# 
  7676  019A                     	;# 
  7677  019A                     	;# 
  7678  019B                     	;# 
  7679  019B                     	;# 
  7680  019B                     	;# 
  7681  019B                     	;# 
  7682  019B                     	;# 
  7683  019C                     	;# 
  7684  019C                     	;# 
  7685  019C                     	;# 
  7686  019D                     	;# 
  7687  019D                     	;# 
  7688  019D                     	;# 
  7689  019E                     	;# 
  7690  019E                     	;# 
  7691  019E                     	;# 
  7692  019F                     	;# 
  7693  019F                     	;# 
  7694  019F                     	;# 
  7695  019F                     	;# 
  7696  019F                     	;# 
  7697  020C                     	;# 
  7698  020D                     	;# 
  7699  020E                     	;# 
  7700  0211                     	;# 
  7701  0211                     	;# 
  7702  0212                     	;# 
  7703  0212                     	;# 
  7704  0213                     	;# 
  7705  0213                     	;# 
  7706  0214                     	;# 
  7707  0214                     	;# 
  7708  0215                     	;# 
  7709  0215                     	;# 
  7710  0215                     	;# 
  7711  0215                     	;# 
  7712  0216                     	;# 
  7713  0216                     	;# 
  7714  0217                     	;# 
  7715  0217                     	;# 
  7716  0219                     	;# 
  7717  021A                     	;# 
  7718  021B                     	;# 
  7719  021C                     	;# 
  7720  021D                     	;# 
  7721  021D                     	;# 
  7722  021E                     	;# 
  7723  021F                     	;# 
  7724  028C                     	;# 
  7725  028D                     	;# 
  7726  028E                     	;# 
  7727  0291                     	;# 
  7728  0291                     	;# 
  7729  0292                     	;# 
  7730  0293                     	;# 
  7731  0294                     	;# 
  7732  0295                     	;# 
  7733  0295                     	;# 
  7734  0296                     	;# 
  7735  0297                     	;# 
  7736  0298                     	;# 
  7737  029F                     	;# 
  7738  030C                     	;# 
  7739  030D                     	;# 
  7740  030E                     	;# 
  7741  0311                     	;# 
  7742  0311                     	;# 
  7743  0312                     	;# 
  7744  0313                     	;# 
  7745  0314                     	;# 
  7746  0315                     	;# 
  7747  0315                     	;# 
  7748  0316                     	;# 
  7749  0317                     	;# 
  7750  0318                     	;# 
  7751  038C                     	;# 
  7752  038D                     	;# 
  7753  038E                     	;# 
  7754  0391                     	;# 
  7755  0392                     	;# 
  7756  0393                     	;# 
  7757  0394                     	;# 
  7758  0395                     	;# 
  7759  0396                     	;# 
  7760  0397                     	;# 
  7761  0398                     	;# 
  7762  0399                     	;# 
  7763  039A                     	;# 
  7764  039C                     	;# 
  7765  039D                     	;# 
  7766  039E                     	;# 
  7767  039F                     	;# 
  7768  040C                     	;# 
  7769  040D                     	;# 
  7770  040E                     	;# 
  7771  0411                     	;# 
  7772  0411                     	;# 
  7773  0412                     	;# 
  7774  0413                     	;# 
  7775  0414                     	;# 
  7776  0415                     	;# 
  7777  0416                     	;# 
  7778  0417                     	;# 
  7779  0418                     	;# 
  7780  0418                     	;# 
  7781  0419                     	;# 
  7782  041A                     	;# 
  7783  041B                     	;# 
  7784  041C                     	;# 
  7785  041D                     	;# 
  7786  041E                     	;# 
  7787  041F                     	;# 
  7788  048C                     	;# 
  7789  048D                     	;# 
  7790  048E                     	;# 
  7791  0498                     	;# 
  7792  0498                     	;# 
  7793  0499                     	;# 
  7794  049A                     	;# 
  7795  049B                     	;# 
  7796  049B                     	;# 
  7797  049C                     	;# 
  7798  049D                     	;# 
  7799  049E                     	;# 
  7800  049F                     	;# 
  7801  0617                     	;# 
  7802  0618                     	;# 
  7803  0619                     	;# 
  7804  0619                     	;# 
  7805  061A                     	;# 
  7806  061B                     	;# 
  7807  061C                     	;# 
  7808  061C                     	;# 
  7809  061F                     	;# 
  7810  0691                     	;# 
  7811  0692                     	;# 
  7812  0693                     	;# 
  7813  0694                     	;# 
  7814  0695                     	;# 
  7815  0696                     	;# 
  7816  0697                     	;# 
  7817  0698                     	;# 
  7818  0699                     	;# 
  7819  0711                     	;# 
  7820  0712                     	;# 
  7821  0713                     	;# 
  7822  0714                     	;# 
  7823  0715                     	;# 
  7824  0716                     	;# 
  7825  0717                     	;# 
  7826  0718                     	;# 
  7827  0719                     	;# 
  7828  0891                     	;# 
  7829  0891                     	;# 
  7830  0892                     	;# 
  7831  0893                     	;# 
  7832  0893                     	;# 
  7833  0894                     	;# 
  7834  0895                     	;# 
  7835  0896                     	;# 
  7836  089B                     	;# 
  7837  0911                     	;# 
  7838  0912                     	;# 
  7839  0913                     	;# 
  7840  0914                     	;# 
  7841  0915                     	;# 
  7842  0916                     	;# 
  7843  0918                     	;# 
  7844  0919                     	;# 
  7845  091A                     	;# 
  7846  091B                     	;# 
  7847  091C                     	;# 
  7848  091D                     	;# 
  7849  091E                     	;# 
  7850  091F                     	;# 
  7851  0E0F                     	;# 
  7852  0E10                     	;# 
  7853  0E11                     	;# 
  7854  0E12                     	;# 
  7855  0E13                     	;# 
  7856  0E14                     	;# 
  7857  0E15                     	;# 
  7858  0E16                     	;# 
  7859  0E17                     	;# 
  7860  0E18                     	;# 
  7861  0E19                     	;# 
  7862  0E1A                     	;# 
  7863  0E1B                     	;# 
  7864  0E1C                     	;# 
  7865  0E1D                     	;# 
  7866  0E1E                     	;# 
  7867  0E1F                     	;# 
  7868  0E20                     	;# 
  7869  0E21                     	;# 
  7870  0E22                     	;# 
  7871  0E24                     	;# 
  7872  0E25                     	;# 
  7873  0E28                     	;# 
  7874  0E29                     	;# 
  7875  0E2A                     	;# 
  7876  0E2B                     	;# 
  7877  0E2C                     	;# 
  7878  0E2D                     	;# 
  7879  0E2E                     	;# 
  7880  0E2F                     	;# 
  7881  0E90                     	;# 
  7882  0E91                     	;# 
  7883  0E92                     	;# 
  7884  0E94                     	;# 
  7885  0E95                     	;# 
  7886  0E9C                     	;# 
  7887  0E9D                     	;# 
  7888  0E9E                     	;# 
  7889  0E9F                     	;# 
  7890  0EA0                     	;# 
  7891  0EA1                     	;# 
  7892  0EA2                     	;# 
  7893  0EA3                     	;# 
  7894  0EA4                     	;# 
  7895  0EA5                     	;# 
  7896  0EA6                     	;# 
  7897  0EA7                     	;# 
  7898  0F0F                     	;# 
  7899  0F10                     	;# 
  7900  0F11                     	;# 
  7901  0F12                     	;# 
  7902  0F13                     	;# 
  7903  0F14                     	;# 
  7904  0F15                     	;# 
  7905  0F16                     	;# 
  7906  0F17                     	;# 
  7907  0F18                     	;# 
  7908  0F19                     	;# 
  7909  0F1A                     	;# 
  7910  0F1B                     	;# 
  7911  0F1C                     	;# 
  7912  0F1D                     	;# 
  7913  0F1E                     	;# 
  7914  0F1F                     	;# 
  7915  0F20                     	;# 
  7916  0F21                     	;# 
  7917  0F22                     	;# 
  7918  0F23                     	;# 
  7919  0F24                     	;# 
  7920  0F25                     	;# 
  7921  0F26                     	;# 
  7922  0F27                     	;# 
  7923  0F28                     	;# 
  7924  0F29                     	;# 
  7925  0F2A                     	;# 
  7926  0F2B                     	;# 
  7927  0F2C                     	;# 
  7928  0F2D                     	;# 
  7929  0F2E                     	;# 
  7930  0F2F                     	;# 
  7931  0F30                     	;# 
  7932  0F31                     	;# 
  7933  0F32                     	;# 
  7934  0F33                     	;# 
  7935  0F34                     	;# 
  7936  0F35                     	;# 
  7937  0F36                     	;# 
  7938  0F37                     	;# 
  7939  0FE4                     	;# 
  7940  0FE5                     	;# 
  7941  0FE6                     	;# 
  7942  0FE7                     	;# 
  7943  0FE8                     	;# 
  7944  0FE9                     	;# 
  7945  0FEA                     	;# 
  7946  0FEB                     	;# 
  7947  0FED                     	;# 
  7948  0FEE                     	;# 
  7949  0FEF                     	;# 
  7950  0000                     	;# 
  7951  0001                     	;# 
  7952  0002                     	;# 
  7953  0003                     	;# 
  7954  0004                     	;# 
  7955  0005                     	;# 
  7956  0006                     	;# 
  7957  0007                     	;# 
  7958  0008                     	;# 
  7959  0009                     	;# 
  7960  000A                     	;# 
  7961  000B                     	;# 
  7962  000C                     	;# 
  7963  000D                     	;# 
  7964  000E                     	;# 
  7965  0010                     	;# 
  7966  0011                     	;# 
  7967  0012                     	;# 
  7968  0013                     	;# 
  7969  0014                     	;# 
  7970  0015                     	;# 
  7971  0016                     	;# 
  7972  0017                     	;# 
  7973  0018                     	;# 
  7974  0019                     	;# 
  7975  0019                     	;# 
  7976  001A                     	;# 
  7977  001B                     	;# 
  7978  001C                     	;# 
  7979  001D                     	;# 
  7980  001E                     	;# 
  7981  001F                     	;# 
  7982  008C                     	;# 
  7983  008D                     	;# 
  7984  008E                     	;# 
  7985  0090                     	;# 
  7986  0091                     	;# 
  7987  0092                     	;# 
  7988  0093                     	;# 
  7989  0094                     	;# 
  7990  0097                     	;# 
  7991  009B                     	;# 
  7992  009B                     	;# 
  7993  009C                     	;# 
  7994  009D                     	;# 
  7995  009E                     	;# 
  7996  009F                     	;# 
  7997  010C                     	;# 
  7998  010D                     	;# 
  7999  010E                     	;# 
  8000  0111                     	;# 
  8001  0112                     	;# 
  8002  0113                     	;# 
  8003  0114                     	;# 
  8004  0115                     	;# 
  8005  0116                     	;# 
  8006  0117                     	;# 
  8007  0118                     	;# 
  8008  0119                     	;# 
  8009  018C                     	;# 
  8010  018D                     	;# 
  8011  018E                     	;# 
  8012  0197                     	;# 
  8013  0199                     	;# 
  8014  0199                     	;# 
  8015  0199                     	;# 
  8016  019A                     	;# 
  8017  019A                     	;# 
  8018  019A                     	;# 
  8019  019B                     	;# 
  8020  019B                     	;# 
  8021  019B                     	;# 
  8022  019B                     	;# 
  8023  019B                     	;# 
  8024  019C                     	;# 
  8025  019C                     	;# 
  8026  019C                     	;# 
  8027  019D                     	;# 
  8028  019D                     	;# 
  8029  019D                     	;# 
  8030  019E                     	;# 
  8031  019E                     	;# 
  8032  019E                     	;# 
  8033  019F                     	;# 
  8034  019F                     	;# 
  8035  019F                     	;# 
  8036  019F                     	;# 
  8037  019F                     	;# 
  8038  020C                     	;# 
  8039  020D                     	;# 
  8040  020E                     	;# 
  8041  0211                     	;# 
  8042  0211                     	;# 
  8043  0212                     	;# 
  8044  0212                     	;# 
  8045  0213                     	;# 
  8046  0213                     	;# 
  8047  0214                     	;# 
  8048  0214                     	;# 
  8049  0215                     	;# 
  8050  0215                     	;# 
  8051  0215                     	;# 
  8052  0215                     	;# 
  8053  0216                     	;# 
  8054  0216                     	;# 
  8055  0217                     	;# 
  8056  0217                     	;# 
  8057  0219                     	;# 
  8058  021A                     	;# 
  8059  021B                     	;# 
  8060  021C                     	;# 
  8061  021D                     	;# 
  8062  021D                     	;# 
  8063  021E                     	;# 
  8064  021F                     	;# 
  8065  028C                     	;# 
  8066  028D                     	;# 
  8067  028E                     	;# 
  8068  0291                     	;# 
  8069  0291                     	;# 
  8070  0292                     	;# 
  8071  0293                     	;# 
  8072  0294                     	;# 
  8073  0295                     	;# 
  8074  0295                     	;# 
  8075  0296                     	;# 
  8076  0297                     	;# 
  8077  0298                     	;# 
  8078  029F                     	;# 
  8079  030C                     	;# 
  8080  030D                     	;# 
  8081  030E                     	;# 
  8082  0311                     	;# 
  8083  0311                     	;# 
  8084  0312                     	;# 
  8085  0313                     	;# 
  8086  0314                     	;# 
  8087  0315                     	;# 
  8088  0315                     	;# 
  8089  0316                     	;# 
  8090  0317                     	;# 
  8091  0318                     	;# 
  8092  038C                     	;# 
  8093  038D                     	;# 
  8094  038E                     	;# 
  8095  0391                     	;# 
  8096  0392                     	;# 
  8097  0393                     	;# 
  8098  0394                     	;# 
  8099  0395                     	;# 
  8100  0396                     	;# 
  8101  0397                     	;# 
  8102  0398                     	;# 
  8103  0399                     	;# 
  8104  039A                     	;# 
  8105  039C                     	;# 
  8106  039D                     	;# 
  8107  039E                     	;# 
  8108  039F                     	;# 
  8109  040C                     	;# 
  8110  040D                     	;# 
  8111  040E                     	;# 
  8112  0411                     	;# 
  8113  0411                     	;# 
  8114  0412                     	;# 
  8115  0413                     	;# 
  8116  0414                     	;# 
  8117  0415                     	;# 
  8118  0416                     	;# 
  8119  0417                     	;# 
  8120  0418                     	;# 
  8121  0418                     	;# 
  8122  0419                     	;# 
  8123  041A                     	;# 
  8124  041B                     	;# 
  8125  041C                     	;# 
  8126  041D                     	;# 
  8127  041E                     	;# 
  8128  041F                     	;# 
  8129  048C                     	;# 
  8130  048D                     	;# 
  8131  048E                     	;# 
  8132  0498                     	;# 
  8133  0498                     	;# 
  8134  0499                     	;# 
  8135  049A                     	;# 
  8136  049B                     	;# 
  8137  049B                     	;# 
  8138  049C                     	;# 
  8139  049D                     	;# 
  8140  049E                     	;# 
  8141  049F                     	;# 
  8142  0617                     	;# 
  8143  0618                     	;# 
  8144  0619                     	;# 
  8145  0619                     	;# 
  8146  061A                     	;# 
  8147  061B                     	;# 
  8148  061C                     	;# 
  8149  061C                     	;# 
  8150  061F                     	;# 
  8151  0691                     	;# 
  8152  0692                     	;# 
  8153  0693                     	;# 
  8154  0694                     	;# 
  8155  0695                     	;# 
  8156  0696                     	;# 
  8157  0697                     	;# 
  8158  0698                     	;# 
  8159  0699                     	;# 
  8160  0711                     	;# 
  8161  0712                     	;# 
  8162  0713                     	;# 
  8163  0714                     	;# 
  8164  0715                     	;# 
  8165  0716                     	;# 
  8166  0717                     	;# 
  8167  0718                     	;# 
  8168  0719                     	;# 
  8169  0891                     	;# 
  8170  0891                     	;# 
  8171  0892                     	;# 
  8172  0893                     	;# 
  8173  0893                     	;# 
  8174  0894                     	;# 
  8175  0895                     	;# 
  8176  0896                     	;# 
  8177  089B                     	;# 
  8178  0911                     	;# 
  8179  0912                     	;# 
  8180  0913                     	;# 
  8181  0914                     	;# 
  8182  0915                     	;# 
  8183  0916                     	;# 
  8184  0918                     	;# 
  8185  0919                     	;# 
  8186  091A                     	;# 
  8187  091B                     	;# 
  8188  091C                     	;# 
  8189  091D                     	;# 
  8190  091E                     	;# 
  8191  091F                     	;# 
  8192  0E0F                     	;# 
  8193  0E10                     	;# 
  8194  0E11                     	;# 
  8195  0E12                     	;# 
  8196  0E13                     	;# 
  8197  0E14                     	;# 
  8198  0E15                     	;# 
  8199  0E16                     	;# 
  8200  0E17                     	;# 
  8201  0E18                     	;# 
  8202  0E19                     	;# 
  8203  0E1A                     	;# 
  8204  0E1B                     	;# 
  8205  0E1C                     	;# 
  8206  0E1D                     	;# 
  8207  0E1E                     	;# 
  8208  0E1F                     	;# 
  8209  0E20                     	;# 
  8210  0E21                     	;# 
  8211  0E22                     	;# 
  8212  0E24                     	;# 
  8213  0E25                     	;# 
  8214  0E28                     	;# 
  8215  0E29                     	;# 
  8216  0E2A                     	;# 
  8217  0E2B                     	;# 
  8218  0E2C                     	;# 
  8219  0E2D                     	;# 
  8220  0E2E                     	;# 
  8221  0E2F                     	;# 
  8222  0E90                     	;# 
  8223  0E91                     	;# 
  8224  0E92                     	;# 
  8225  0E94                     	;# 
  8226  0E95                     	;# 
  8227  0E9C                     	;# 
  8228  0E9D                     	;# 
  8229  0E9E                     	;# 
  8230  0E9F                     	;# 
  8231  0EA0                     	;# 
  8232  0EA1                     	;# 
  8233  0EA2                     	;# 
  8234  0EA3                     	;# 
  8235  0EA4                     	;# 
  8236  0EA5                     	;# 
  8237  0EA6                     	;# 
  8238  0EA7                     	;# 
  8239  0F0F                     	;# 
  8240  0F10                     	;# 
  8241  0F11                     	;# 
  8242  0F12                     	;# 
  8243  0F13                     	;# 
  8244  0F14                     	;# 
  8245  0F15                     	;# 
  8246  0F16                     	;# 
  8247  0F17                     	;# 
  8248  0F18                     	;# 
  8249  0F19                     	;# 
  8250  0F1A                     	;# 
  8251  0F1B                     	;# 
  8252  0F1C                     	;# 
  8253  0F1D                     	;# 
  8254  0F1E                     	;# 
  8255  0F1F                     	;# 
  8256  0F20                     	;# 
  8257  0F21                     	;# 
  8258  0F22                     	;# 
  8259  0F23                     	;# 
  8260  0F24                     	;# 
  8261  0F25                     	;# 
  8262  0F26                     	;# 
  8263  0F27                     	;# 
  8264  0F28                     	;# 
  8265  0F29                     	;# 
  8266  0F2A                     	;# 
  8267  0F2B                     	;# 
  8268  0F2C                     	;# 
  8269  0F2D                     	;# 
  8270  0F2E                     	;# 
  8271  0F2F                     	;# 
  8272  0F30                     	;# 
  8273  0F31                     	;# 
  8274  0F32                     	;# 
  8275  0F33                     	;# 
  8276  0F34                     	;# 
  8277  0F35                     	;# 
  8278  0F36                     	;# 
  8279  0F37                     	;# 
  8280  0FE4                     	;# 
  8281  0FE5                     	;# 
  8282  0FE6                     	;# 
  8283  0FE7                     	;# 
  8284  0FE8                     	;# 
  8285  0FE9                     	;# 
  8286  0FEA                     	;# 
  8287  0FEB                     	;# 
  8288  0FED                     	;# 
  8289  0FEE                     	;# 
  8290  0FEF                     	;# 
  8291  0000                     	;# 
  8292  0001                     	;# 
  8293  0002                     	;# 
  8294  0003                     	;# 
  8295  0004                     	;# 
  8296  0005                     	;# 
  8297  0006                     	;# 
  8298  0007                     	;# 
  8299  0008                     	;# 
  8300  0009                     	;# 
  8301  000A                     	;# 
  8302  000B                     	;# 
  8303  000C                     	;# 
  8304  000D                     	;# 
  8305  000E                     	;# 
  8306  0010                     	;# 
  8307  0011                     	;# 
  8308  0012                     	;# 
  8309  0013                     	;# 
  8310  0014                     	;# 
  8311  0015                     	;# 
  8312  0016                     	;# 
  8313  0017                     	;# 
  8314  0018                     	;# 
  8315  0019                     	;# 
  8316  0019                     	;# 
  8317  001A                     	;# 
  8318  001B                     	;# 
  8319  001C                     	;# 
  8320  001D                     	;# 
  8321  001E                     	;# 
  8322  001F                     	;# 
  8323  008C                     	;# 
  8324  008D                     	;# 
  8325  008E                     	;# 
  8326  0090                     	;# 
  8327  0091                     	;# 
  8328  0092                     	;# 
  8329  0093                     	;# 
  8330  0094                     	;# 
  8331  0097                     	;# 
  8332  009B                     	;# 
  8333  009B                     	;# 
  8334  009C                     	;# 
  8335  009D                     	;# 
  8336  009E                     	;# 
  8337  009F                     	;# 
  8338  010C                     	;# 
  8339  010D                     	;# 
  8340  010E                     	;# 
  8341  0111                     	;# 
  8342  0112                     	;# 
  8343  0113                     	;# 
  8344  0114                     	;# 
  8345  0115                     	;# 
  8346  0116                     	;# 
  8347  0117                     	;# 
  8348  0118                     	;# 
  8349  0119                     	;# 
  8350  018C                     	;# 
  8351  018D                     	;# 
  8352  018E                     	;# 
  8353  0199                     	;# 
  8354  0199                     	;# 
  8355  0199                     	;# 
  8356  019A                     	;# 
  8357  019A                     	;# 
  8358  019A                     	;# 
  8359  019B                     	;# 
  8360  019B                     	;# 
  8361  019B                     	;# 
  8362  019B                     	;# 
  8363  019B                     	;# 
  8364  019C                     	;# 
  8365  019C                     	;# 
  8366  019C                     	;# 
  8367  019D                     	;# 
  8368  019D                     	;# 
  8369  019D                     	;# 
  8370  019E                     	;# 
  8371  019E                     	;# 
  8372  019E                     	;# 
  8373  019F                     	;# 
  8374  019F                     	;# 
  8375  019F                     	;# 
  8376  019F                     	;# 
  8377  019F                     	;# 
  8378  020C                     	;# 
  8379  020D                     	;# 
  8380  020E                     	;# 
  8381  0211                     	;# 
  8382  0211                     	;# 
  8383  0212                     	;# 
  8384  0212                     	;# 
  8385  0213                     	;# 
  8386  0213                     	;# 
  8387  0214                     	;# 
  8388  0214                     	;# 
  8389  0215                     	;# 
  8390  0215                     	;# 
  8391  0215                     	;# 
  8392  0215                     	;# 
  8393  0216                     	;# 
  8394  0216                     	;# 
  8395  0217                     	;# 
  8396  0217                     	;# 
  8397  0219                     	;# 
  8398  021A                     	;# 
  8399  021B                     	;# 
  8400  021C                     	;# 
  8401  021D                     	;# 
  8402  021D                     	;# 
  8403  021E                     	;# 
  8404  021F                     	;# 
  8405  028C                     	;# 
  8406  028D                     	;# 
  8407  028E                     	;# 
  8408  0291                     	;# 
  8409  0291                     	;# 
  8410  0292                     	;# 
  8411  0293                     	;# 
  8412  0294                     	;# 
  8413  0295                     	;# 
  8414  0295                     	;# 
  8415  0296                     	;# 
  8416  0297                     	;# 
  8417  0298                     	;# 
  8418  029F                     	;# 
  8419  030C                     	;# 
  8420  030D                     	;# 
  8421  030E                     	;# 
  8422  0311                     	;# 
  8423  0311                     	;# 
  8424  0312                     	;# 
  8425  0313                     	;# 
  8426  0314                     	;# 
  8427  0315                     	;# 
  8428  0315                     	;# 
  8429  0316                     	;# 
  8430  0317                     	;# 
  8431  0318                     	;# 
  8432  038C                     	;# 
  8433  038D                     	;# 
  8434  038E                     	;# 
  8435  0391                     	;# 
  8436  0392                     	;# 
  8437  0393                     	;# 
  8438  0394                     	;# 
  8439  0395                     	;# 
  8440  0396                     	;# 
  8441  0397                     	;# 
  8442  0398                     	;# 
  8443  0399                     	;# 
  8444  039A                     	;# 
  8445  039C                     	;# 
  8446  039D                     	;# 
  8447  039E                     	;# 
  8448  039F                     	;# 
  8449  040C                     	;# 
  8450  040D                     	;# 
  8451  040E                     	;# 
  8452  0411                     	;# 
  8453  0411                     	;# 
  8454  0412                     	;# 
  8455  0413                     	;# 
  8456  0414                     	;# 
  8457  0415                     	;# 
  8458  0416                     	;# 
  8459  0417                     	;# 
  8460  0418                     	;# 
  8461  0418                     	;# 
  8462  0419                     	;# 
  8463  041A                     	;# 
  8464  041B                     	;# 
  8465  041C                     	;# 
  8466  041D                     	;# 
  8467  041E                     	;# 
  8468  041F                     	;# 
  8469  048C                     	;# 
  8470  048D                     	;# 
  8471  048E                     	;# 
  8472  0498                     	;# 
  8473  0498                     	;# 
  8474  0499                     	;# 
  8475  049A                     	;# 
  8476  049B                     	;# 
  8477  049B                     	;# 
  8478  049C                     	;# 
  8479  049D                     	;# 
  8480  049E                     	;# 
  8481  049F                     	;# 
  8482  0617                     	;# 
  8483  0618                     	;# 
  8484  0619                     	;# 
  8485  0619                     	;# 
  8486  061A                     	;# 
  8487  061B                     	;# 
  8488  061C                     	;# 
  8489  061C                     	;# 
  8490  061F                     	;# 
  8491  0691                     	;# 
  8492  0692                     	;# 
  8493  0693                     	;# 
  8494  0694                     	;# 
  8495  0695                     	;# 
  8496  0696                     	;# 
  8497  0697                     	;# 
  8498  0698                     	;# 
  8499  0699                     	;# 
  8500  0711                     	;# 
  8501  0712                     	;# 
  8502  0713                     	;# 
  8503  0714                     	;# 
  8504  0715                     	;# 
  8505  0716                     	;# 
  8506  0717                     	;# 
  8507  0718                     	;# 
  8508  0719                     	;# 
  8509  0891                     	;# 
  8510  0891                     	;# 
  8511  0892                     	;# 
  8512  0893                     	;# 
  8513  0893                     	;# 
  8514  0894                     	;# 
  8515  0895                     	;# 
  8516  0896                     	;# 
  8517  089B                     	;# 
  8518  0911                     	;# 
  8519  0912                     	;# 
  8520  0913                     	;# 
  8521  0914                     	;# 
  8522  0915                     	;# 
  8523  0916                     	;# 
  8524  0918                     	;# 
  8525  0919                     	;# 
  8526  091A                     	;# 
  8527  091B                     	;# 
  8528  091C                     	;# 
  8529  091D                     	;# 
  8530  091E                     	;# 
  8531  091F                     	;# 
  8532  0E0F                     	;# 
  8533  0E10                     	;# 
  8534  0E11                     	;# 
  8535  0E12                     	;# 
  8536  0E13                     	;# 
  8537  0E14                     	;# 
  8538  0E15                     	;# 
  8539  0E16                     	;# 
  8540  0E17                     	;# 
  8541  0E18                     	;# 
  8542  0E19                     	;# 
  8543  0E1A                     	;# 
  8544  0E1B                     	;# 
  8545  0E1C                     	;# 
  8546  0E1D                     	;# 
  8547  0E1E                     	;# 
  8548  0E1F                     	;# 
  8549  0E20                     	;# 
  8550  0E21                     	;# 
  8551  0E22                     	;# 
  8552  0E24                     	;# 
  8553  0E25                     	;# 
  8554  0E28                     	;# 
  8555  0E29                     	;# 
  8556  0E2A                     	;# 
  8557  0E2B                     	;# 
  8558  0E2C                     	;# 
  8559  0E2D                     	;# 
  8560  0E2E                     	;# 
  8561  0E2F                     	;# 
  8562  0E90                     	;# 
  8563  0E91                     	;# 
  8564  0E92                     	;# 
  8565  0E94                     	;# 
  8566  0E95                     	;# 
  8567  0E9C                     	;# 
  8568  0E9D                     	;# 
  8569  0E9E                     	;# 
  8570  0E9F                     	;# 
  8571  0EA0                     	;# 
  8572  0EA1                     	;# 
  8573  0EA2                     	;# 
  8574  0EA3                     	;# 
  8575  0EA4                     	;# 
  8576  0EA5                     	;# 
  8577  0EA6                     	;# 
  8578  0EA7                     	;# 
  8579  0F0F                     	;# 
  8580  0F10                     	;# 
  8581  0F11                     	;# 
  8582  0F12                     	;# 
  8583  0F13                     	;# 
  8584  0F14                     	;# 
  8585  0F15                     	;# 
  8586  0F16                     	;# 
  8587  0F17                     	;# 
  8588  0F18                     	;# 
  8589  0F19                     	;# 
  8590  0F1A                     	;# 
  8591  0F1B                     	;# 
  8592  0F1C                     	;# 
  8593  0F1D                     	;# 
  8594  0F1E                     	;# 
  8595  0F1F                     	;# 
  8596  0F20                     	;# 
  8597  0F21                     	;# 
  8598  0F22                     	;# 
  8599  0F23                     	;# 
  8600  0F24                     	;# 
  8601  0F25                     	;# 
  8602  0F26                     	;# 
  8603  0F27                     	;# 
  8604  0F28                     	;# 
  8605  0F29                     	;# 
  8606  0F2A                     	;# 
  8607  0F2B                     	;# 
  8608  0F2C                     	;# 
  8609  0F2D                     	;# 
  8610  0F2E                     	;# 
  8611  0F2F                     	;# 
  8612  0F30                     	;# 
  8613  0F31                     	;# 
  8614  0F32                     	;# 
  8615  0F33                     	;# 
  8616  0F34                     	;# 
  8617  0F35                     	;# 
  8618  0F36                     	;# 
  8619  0F37                     	;# 
  8620  0FE4                     	;# 
  8621  0FE5                     	;# 
  8622  0FE6                     	;# 
  8623  0FE7                     	;# 
  8624  0FE8                     	;# 
  8625  0FE9                     	;# 
  8626  0FEA                     	;# 
  8627  0FEB                     	;# 
  8628  0FED                     	;# 
  8629  0FEE                     	;# 
  8630  0FEF                     	;# 
  8631  0000                     	;# 
  8632  0001                     	;# 
  8633  0002                     	;# 
  8634  0003                     	;# 
  8635  0004                     	;# 
  8636  0005                     	;# 
  8637  0006                     	;# 
  8638  0007                     	;# 
  8639  0008                     	;# 
  8640  0009                     	;# 
  8641  000A                     	;# 
  8642  000B                     	;# 
  8643  000C                     	;# 
  8644  000D                     	;# 
  8645  000E                     	;# 
  8646  0010                     	;# 
  8647  0011                     	;# 
  8648  0012                     	;# 
  8649  0013                     	;# 
  8650  0014                     	;# 
  8651  0015                     	;# 
  8652  0016                     	;# 
  8653  0017                     	;# 
  8654  0018                     	;# 
  8655  0019                     	;# 
  8656  0019                     	;# 
  8657  001A                     	;# 
  8658  001B                     	;# 
  8659  001C                     	;# 
  8660  001D                     	;# 
  8661  001E                     	;# 
  8662  001F                     	;# 
  8663  008C                     	;# 
  8664  008D                     	;# 
  8665  008E                     	;# 
  8666  0090                     	;# 
  8667  0091                     	;# 
  8668  0092                     	;# 
  8669  0093                     	;# 
  8670  0094                     	;# 
  8671  0097                     	;# 
  8672  009B                     	;# 
  8673  009B                     	;# 
  8674  009C                     	;# 
  8675  009D                     	;# 
  8676  009E                     	;# 
  8677  009F                     	;# 
  8678  010C                     	;# 
  8679  010D                     	;# 
  8680  010E                     	;# 
  8681  0111                     	;# 
  8682  0112                     	;# 
  8683  0113                     	;# 
  8684  0114                     	;# 
  8685  0115                     	;# 
  8686  0116                     	;# 
  8687  0117                     	;# 
  8688  0118                     	;# 
  8689  0119                     	;# 
  8690  018C                     	;# 
  8691  018D                     	;# 
  8692  018E                     	;# 
  8693  0197                     	;# 
  8694  0199                     	;# 
  8695  0199                     	;# 
  8696  0199                     	;# 
  8697  019A                     	;# 
  8698  019A                     	;# 
  8699  019A                     	;# 
  8700  019B                     	;# 
  8701  019B                     	;# 
  8702  019B                     	;# 
  8703  019B                     	;# 
  8704  019B                     	;# 
  8705  019C                     	;# 
  8706  019C                     	;# 
  8707  019C                     	;# 
  8708  019D                     	;# 
  8709  019D                     	;# 
  8710  019D                     	;# 
  8711  019E                     	;# 
  8712  019E                     	;# 
  8713  019E                     	;# 
  8714  019F                     	;# 
  8715  019F                     	;# 
  8716  019F                     	;# 
  8717  019F                     	;# 
  8718  019F                     	;# 
  8719  020C                     	;# 
  8720  020D                     	;# 
  8721  020E                     	;# 
  8722  0211                     	;# 
  8723  0211                     	;# 
  8724  0212                     	;# 
  8725  0212                     	;# 
  8726  0213                     	;# 
  8727  0213                     	;# 
  8728  0214                     	;# 
  8729  0214                     	;# 
  8730  0215                     	;# 
  8731  0215                     	;# 
  8732  0215                     	;# 
  8733  0215                     	;# 
  8734  0216                     	;# 
  8735  0216                     	;# 
  8736  0217                     	;# 
  8737  0217                     	;# 
  8738  0219                     	;# 
  8739  021A                     	;# 
  8740  021B                     	;# 
  8741  021C                     	;# 
  8742  021D                     	;# 
  8743  021D                     	;# 
  8744  021E                     	;# 
  8745  021F                     	;# 
  8746  028C                     	;# 
  8747  028D                     	;# 
  8748  028E                     	;# 
  8749  0291                     	;# 
  8750  0291                     	;# 
  8751  0292                     	;# 
  8752  0293                     	;# 
  8753  0294                     	;# 
  8754  0295                     	;# 
  8755  0295                     	;# 
  8756  0296                     	;# 
  8757  0297                     	;# 
  8758  0298                     	;# 
  8759  029F                     	;# 
  8760  030C                     	;# 
  8761  030D                     	;# 
  8762  030E                     	;# 
  8763  0311                     	;# 
  8764  0311                     	;# 
  8765  0312                     	;# 
  8766  0313                     	;# 
  8767  0314                     	;# 
  8768  0315                     	;# 
  8769  0315                     	;# 
  8770  0316                     	;# 
  8771  0317                     	;# 
  8772  0318                     	;# 
  8773  038C                     	;# 
  8774  038D                     	;# 
  8775  038E                     	;# 
  8776  0391                     	;# 
  8777  0392                     	;# 
  8778  0393                     	;# 
  8779  0394                     	;# 
  8780  0395                     	;# 
  8781  0396                     	;# 
  8782  0397                     	;# 
  8783  0398                     	;# 
  8784  0399                     	;# 
  8785  039A                     	;# 
  8786  039C                     	;# 
  8787  039D                     	;# 
  8788  039E                     	;# 
  8789  039F                     	;# 
  8790  040C                     	;# 
  8791  040D                     	;# 
  8792  040E                     	;# 
  8793  0411                     	;# 
  8794  0411                     	;# 
  8795  0412                     	;# 
  8796  0413                     	;# 
  8797  0414                     	;# 
  8798  0415                     	;# 
  8799  0416                     	;# 
  8800  0417                     	;# 
  8801  0418                     	;# 
  8802  0418                     	;# 
  8803  0419                     	;# 
  8804  041A                     	;# 
  8805  041B                     	;# 
  8806  041C                     	;# 
  8807  041D                     	;# 
  8808  041E                     	;# 
  8809  041F                     	;# 
  8810  048C                     	;# 
  8811  048D                     	;# 
  8812  048E                     	;# 
  8813  0498                     	;# 
  8814  0498                     	;# 
  8815  0499                     	;# 
  8816  049A                     	;# 
  8817  049B                     	;# 
  8818  049B                     	;# 
  8819  049C                     	;# 
  8820  049D                     	;# 
  8821  049E                     	;# 
  8822  049F                     	;# 
  8823  0617                     	;# 
  8824  0618                     	;# 
  8825  0619                     	;# 
  8826  0619                     	;# 
  8827  061A                     	;# 
  8828  061B                     	;# 
  8829  061C                     	;# 
  8830  061C                     	;# 
  8831  061F                     	;# 
  8832  0691                     	;# 
  8833  0692                     	;# 
  8834  0693                     	;# 
  8835  0694                     	;# 
  8836  0695                     	;# 
  8837  0696                     	;# 
  8838  0697                     	;# 
  8839  0698                     	;# 
  8840  0699                     	;# 
  8841  0711                     	;# 
  8842  0712                     	;# 
  8843  0713                     	;# 
  8844  0714                     	;# 
  8845  0715                     	;# 
  8846  0716                     	;# 
  8847  0717                     	;# 
  8848  0718                     	;# 
  8849  0719                     	;# 
  8850  0891                     	;# 
  8851  0891                     	;# 
  8852  0892                     	;# 
  8853  0893                     	;# 
  8854  0893                     	;# 
  8855  0894                     	;# 
  8856  0895                     	;# 
  8857  0896                     	;# 
  8858  089B                     	;# 
  8859  0911                     	;# 
  8860  0912                     	;# 
  8861  0913                     	;# 
  8862  0914                     	;# 
  8863  0915                     	;# 
  8864  0916                     	;# 
  8865  0918                     	;# 
  8866  0919                     	;# 
  8867  091A                     	;# 
  8868  091B                     	;# 
  8869  091C                     	;# 
  8870  091D                     	;# 
  8871  091E                     	;# 
  8872  091F                     	;# 
  8873  0E0F                     	;# 
  8874  0E10                     	;# 
  8875  0E11                     	;# 
  8876  0E12                     	;# 
  8877  0E13                     	;# 
  8878  0E14                     	;# 
  8879  0E15                     	;# 
  8880  0E16                     	;# 
  8881  0E17                     	;# 
  8882  0E18                     	;# 
  8883  0E19                     	;# 
  8884  0E1A                     	;# 
  8885  0E1B                     	;# 
  8886  0E1C                     	;# 
  8887  0E1D                     	;# 
  8888  0E1E                     	;# 
  8889  0E1F                     	;# 
  8890  0E20                     	;# 
  8891  0E21                     	;# 
  8892  0E22                     	;# 
  8893  0E24                     	;# 
  8894  0E25                     	;# 
  8895  0E28                     	;# 
  8896  0E29                     	;# 
  8897  0E2A                     	;# 
  8898  0E2B                     	;# 
  8899  0E2C                     	;# 
  8900  0E2D                     	;# 
  8901  0E2E                     	;# 
  8902  0E2F                     	;# 
  8903  0E90                     	;# 
  8904  0E91                     	;# 
  8905  0E92                     	;# 
  8906  0E94                     	;# 
  8907  0E95                     	;# 
  8908  0E9C                     	;# 
  8909  0E9D                     	;# 
  8910  0E9E                     	;# 
  8911  0E9F                     	;# 
  8912  0EA0                     	;# 
  8913  0EA1                     	;# 
  8914  0EA2                     	;# 
  8915  0EA3                     	;# 
  8916  0EA4                     	;# 
  8917  0EA5                     	;# 
  8918  0EA6                     	;# 
  8919  0EA7                     	;# 
  8920  0F0F                     	;# 
  8921  0F10                     	;# 
  8922  0F11                     	;# 
  8923  0F12                     	;# 
  8924  0F13                     	;# 
  8925  0F14                     	;# 
  8926  0F15                     	;# 
  8927  0F16                     	;# 
  8928  0F17                     	;# 
  8929  0F18                     	;# 
  8930  0F19                     	;# 
  8931  0F1A                     	;# 
  8932  0F1B                     	;# 
  8933  0F1C                     	;# 
  8934  0F1D                     	;# 
  8935  0F1E                     	;# 
  8936  0F1F                     	;# 
  8937  0F20                     	;# 
  8938  0F21                     	;# 
  8939  0F22                     	;# 
  8940  0F23                     	;# 
  8941  0F24                     	;# 
  8942  0F25                     	;# 
  8943  0F26                     	;# 
  8944  0F27                     	;# 
  8945  0F28                     	;# 
  8946  0F29                     	;# 
  8947  0F2A                     	;# 
  8948  0F2B                     	;# 
  8949  0F2C                     	;# 
  8950  0F2D                     	;# 
  8951  0F2E                     	;# 
  8952  0F2F                     	;# 
  8953  0F30                     	;# 
  8954  0F31                     	;# 
  8955  0F32                     	;# 
  8956  0F33                     	;# 
  8957  0F34                     	;# 
  8958  0F35                     	;# 
  8959  0F36                     	;# 
  8960  0F37                     	;# 
  8961  0FE4                     	;# 
  8962  0FE5                     	;# 
  8963  0FE6                     	;# 
  8964  0FE7                     	;# 
  8965  0FE8                     	;# 
  8966  0FE9                     	;# 
  8967  0FEA                     	;# 
  8968  0FEB                     	;# 
  8969  0FED                     	;# 
  8970  0FEE                     	;# 
  8971  0FEF                     	;# 
  8972  0000                     	;# 
  8973  0001                     	;# 
  8974  0002                     	;# 
  8975  0003                     	;# 
  8976  0004                     	;# 
  8977  0005                     	;# 
  8978  0006                     	;# 
  8979  0007                     	;# 
  8980  0008                     	;# 
  8981  0009                     	;# 
  8982  000A                     	;# 
  8983  000B                     	;# 
  8984  000C                     	;# 
  8985  000D                     	;# 
  8986  000E                     	;# 
  8987  0010                     	;# 
  8988  0011                     	;# 
  8989  0012                     	;# 
  8990  0013                     	;# 
  8991  0014                     	;# 
  8992  0015                     	;# 
  8993  0016                     	;# 
  8994  0017                     	;# 
  8995  0018                     	;# 
  8996  0019                     	;# 
  8997  0019                     	;# 
  8998  001A                     	;# 
  8999  001B                     	;# 
  9000  001C                     	;# 
  9001  001D                     	;# 
  9002  001E                     	;# 
  9003  001F                     	;# 
  9004  008C                     	;# 
  9005  008D                     	;# 
  9006  008E                     	;# 
  9007  0090                     	;# 
  9008  0091                     	;# 
  9009  0092                     	;# 
  9010  0093                     	;# 
  9011  0094                     	;# 
  9012  0097                     	;# 
  9013  009B                     	;# 
  9014  009B                     	;# 
  9015  009C                     	;# 
  9016  009D                     	;# 
  9017  009E                     	;# 
  9018  009F                     	;# 
  9019  010C                     	;# 
  9020  010D                     	;# 
  9021  010E                     	;# 
  9022  0111                     	;# 
  9023  0112                     	;# 
  9024  0113                     	;# 
  9025  0114                     	;# 
  9026  0115                     	;# 
  9027  0116                     	;# 
  9028  0117                     	;# 
  9029  0118                     	;# 
  9030  0119                     	;# 
  9031  018C                     	;# 
  9032  018D                     	;# 
  9033  018E                     	;# 
  9034  0199                     	;# 
  9035  0199                     	;# 
  9036  0199                     	;# 
  9037  019A                     	;# 
  9038  019A                     	;# 
  9039  019A                     	;# 
  9040  019B                     	;# 
  9041  019B                     	;# 
  9042  019B                     	;# 
  9043  019B                     	;# 
  9044  019B                     	;# 
  9045  019C                     	;# 
  9046  019C                     	;# 
  9047  019C                     	;# 
  9048  019D                     	;# 
  9049  019D                     	;# 
  9050  019D                     	;# 
  9051  019E                     	;# 
  9052  019E                     	;# 
  9053  019E                     	;# 
  9054  019F                     	;# 
  9055  019F                     	;# 
  9056  019F                     	;# 
  9057  019F                     	;# 
  9058  019F                     	;# 
  9059  020C                     	;# 
  9060  020D                     	;# 
  9061  020E                     	;# 
  9062  0211                     	;# 
  9063  0211                     	;# 
  9064  0212                     	;# 
  9065  0212                     	;# 
  9066  0213                     	;# 
  9067  0213                     	;# 
  9068  0214                     	;# 
  9069  0214                     	;# 
  9070  0215                     	;# 
  9071  0215                     	;# 
  9072  0215                     	;# 
  9073  0215                     	;# 
  9074  0216                     	;# 
  9075  0216                     	;# 
  9076  0217                     	;# 
  9077  0217                     	;# 
  9078  0219                     	;# 
  9079  021A                     	;# 
  9080  021B                     	;# 
  9081  021C                     	;# 
  9082  021D                     	;# 
  9083  021D                     	;# 
  9084  021E                     	;# 
  9085  021F                     	;# 
  9086  028C                     	;# 
  9087  028D                     	;# 
  9088  028E                     	;# 
  9089  0291                     	;# 
  9090  0291                     	;# 
  9091  0292                     	;# 
  9092  0293                     	;# 
  9093  0294                     	;# 
  9094  0295                     	;# 
  9095  0295                     	;# 
  9096  0296                     	;# 
  9097  0297                     	;# 
  9098  0298                     	;# 
  9099  029F                     	;# 
  9100  030C                     	;# 
  9101  030D                     	;# 
  9102  030E                     	;# 
  9103  0311                     	;# 
  9104  0311                     	;# 
  9105  0312                     	;# 
  9106  0313                     	;# 
  9107  0314                     	;# 
  9108  0315                     	;# 
  9109  0315                     	;# 
  9110  0316                     	;# 
  9111  0317                     	;# 
  9112  0318                     	;# 
  9113  038C                     	;# 
  9114  038D                     	;# 
  9115  038E                     	;# 
  9116  0391                     	;# 
  9117  0392                     	;# 
  9118  0393                     	;# 
  9119  0394                     	;# 
  9120  0395                     	;# 
  9121  0396                     	;# 
  9122  0397                     	;# 
  9123  0398                     	;# 
  9124  0399                     	;# 
  9125  039A                     	;# 
  9126  039C                     	;# 
  9127  039D                     	;# 
  9128  039E                     	;# 
  9129  039F                     	;# 
  9130  040C                     	;# 
  9131  040D                     	;# 
  9132  040E                     	;# 
  9133  0411                     	;# 
  9134  0411                     	;# 
  9135  0412                     	;# 
  9136  0413                     	;# 
  9137  0414                     	;# 
  9138  0415                     	;# 
  9139  0416                     	;# 
  9140  0417                     	;# 
  9141  0418                     	;# 
  9142  0418                     	;# 
  9143  0419                     	;# 
  9144  041A                     	;# 
  9145  041B                     	;# 
  9146  041C                     	;# 
  9147  041D                     	;# 
  9148  041E                     	;# 
  9149  041F                     	;# 
  9150  048C                     	;# 
  9151  048D                     	;# 
  9152  048E                     	;# 
  9153  0498                     	;# 
  9154  0498                     	;# 
  9155  0499                     	;# 
  9156  049A                     	;# 
  9157  049B                     	;# 
  9158  049B                     	;# 
  9159  049C                     	;# 
  9160  049D                     	;# 
  9161  049E                     	;# 
  9162  049F                     	;# 
  9163  0617                     	;# 
  9164  0618                     	;# 
  9165  0619                     	;# 
  9166  0619                     	;# 
  9167  061A                     	;# 
  9168  061B                     	;# 
  9169  061C                     	;# 
  9170  061C                     	;# 
  9171  061F                     	;# 
  9172  0691                     	;# 
  9173  0692                     	;# 
  9174  0693                     	;# 
  9175  0694                     	;# 
  9176  0695                     	;# 
  9177  0696                     	;# 
  9178  0697                     	;# 
  9179  0698                     	;# 
  9180  0699                     	;# 
  9181  0711                     	;# 
  9182  0712                     	;# 
  9183  0713                     	;# 
  9184  0714                     	;# 
  9185  0715                     	;# 
  9186  0716                     	;# 
  9187  0717                     	;# 
  9188  0718                     	;# 
  9189  0719                     	;# 
  9190  0891                     	;# 
  9191  0891                     	;# 
  9192  0892                     	;# 
  9193  0893                     	;# 
  9194  0893                     	;# 
  9195  0894                     	;# 
  9196  0895                     	;# 
  9197  0896                     	;# 
  9198  089B                     	;# 
  9199  0911                     	;# 
  9200  0912                     	;# 
  9201  0913                     	;# 
  9202  0914                     	;# 
  9203  0915                     	;# 
  9204  0916                     	;# 
  9205  0918                     	;# 
  9206  0919                     	;# 
  9207  091A                     	;# 
  9208  091B                     	;# 
  9209  091C                     	;# 
  9210  091D                     	;# 
  9211  091E                     	;# 
  9212  091F                     	;# 
  9213  0E0F                     	;# 
  9214  0E10                     	;# 
  9215  0E11                     	;# 
  9216  0E12                     	;# 
  9217  0E13                     	;# 
  9218  0E14                     	;# 
  9219  0E15                     	;# 
  9220  0E16                     	;# 
  9221  0E17                     	;# 
  9222  0E18                     	;# 
  9223  0E19                     	;# 
  9224  0E1A                     	;# 
  9225  0E1B                     	;# 
  9226  0E1C                     	;# 
  9227  0E1D                     	;# 
  9228  0E1E                     	;# 
  9229  0E1F                     	;# 
  9230  0E20                     	;# 
  9231  0E21                     	;# 
  9232  0E22                     	;# 
  9233  0E24                     	;# 
  9234  0E25                     	;# 
  9235  0E28                     	;# 
  9236  0E29                     	;# 
  9237  0E2A                     	;# 
  9238  0E2B                     	;# 
  9239  0E2C                     	;# 
  9240  0E2D                     	;# 
  9241  0E2E                     	;# 
  9242  0E2F                     	;# 
  9243  0E90                     	;# 
  9244  0E91                     	;# 
  9245  0E92                     	;# 
  9246  0E94                     	;# 
  9247  0E95                     	;# 
  9248  0E9C                     	;# 
  9249  0E9D                     	;# 
  9250  0E9E                     	;# 
  9251  0E9F                     	;# 
  9252  0EA0                     	;# 
  9253  0EA1                     	;# 
  9254  0EA2                     	;# 
  9255  0EA3                     	;# 
  9256  0EA4                     	;# 
  9257  0EA5                     	;# 
  9258  0EA6                     	;# 
  9259  0EA7                     	;# 
  9260  0F0F                     	;# 
  9261  0F10                     	;# 
  9262  0F11                     	;# 
  9263  0F12                     	;# 
  9264  0F13                     	;# 
  9265  0F14                     	;# 
  9266  0F15                     	;# 
  9267  0F16                     	;# 
  9268  0F17                     	;# 
  9269  0F18                     	;# 
  9270  0F19                     	;# 
  9271  0F1A                     	;# 
  9272  0F1B                     	;# 
  9273  0F1C                     	;# 
  9274  0F1D                     	;# 
  9275  0F1E                     	;# 
  9276  0F1F                     	;# 
  9277  0F20                     	;# 
  9278  0F21                     	;# 
  9279  0F22                     	;# 
  9280  0F23                     	;# 
  9281  0F24                     	;# 
  9282  0F25                     	;# 
  9283  0F26                     	;# 
  9284  0F27                     	;# 
  9285  0F28                     	;# 
  9286  0F29                     	;# 
  9287  0F2A                     	;# 
  9288  0F2B                     	;# 
  9289  0F2C                     	;# 
  9290  0F2D                     	;# 
  9291  0F2E                     	;# 
  9292  0F2F                     	;# 
  9293  0F30                     	;# 
  9294  0F31                     	;# 
  9295  0F32                     	;# 
  9296  0F33                     	;# 
  9297  0F34                     	;# 
  9298  0F35                     	;# 
  9299  0F36                     	;# 
  9300  0F37                     	;# 
  9301  0FE4                     	;# 
  9302  0FE5                     	;# 
  9303  0FE6                     	;# 
  9304  0FE7                     	;# 
  9305  0FE8                     	;# 
  9306  0FE9                     	;# 
  9307  0FEA                     	;# 
  9308  0FEB                     	;# 
  9309  0FED                     	;# 
  9310  0FEE                     	;# 
  9311  0FEF                     	;# 
  9312  0000                     	;# 
  9313  0001                     	;# 
  9314  0002                     	;# 
  9315  0003                     	;# 
  9316  0004                     	;# 
  9317  0005                     	;# 
  9318  0006                     	;# 
  9319  0007                     	;# 
  9320  0008                     	;# 
  9321  0009                     	;# 
  9322  000A                     	;# 
  9323  000B                     	;# 
  9324  000C                     	;# 
  9325  000D                     	;# 
  9326  000E                     	;# 
  9327  0010                     	;# 
  9328  0011                     	;# 
  9329  0012                     	;# 
  9330  0013                     	;# 
  9331  0014                     	;# 
  9332  0015                     	;# 
  9333  0016                     	;# 
  9334  0017                     	;# 
  9335  0018                     	;# 
  9336  0019                     	;# 
  9337  0019                     	;# 
  9338  001A                     	;# 
  9339  001B                     	;# 
  9340  001C                     	;# 
  9341  001D                     	;# 
  9342  001E                     	;# 
  9343  001F                     	;# 
  9344  008C                     	;# 
  9345  008D                     	;# 
  9346  008E                     	;# 
  9347  0090                     	;# 
  9348  0091                     	;# 
  9349  0092                     	;# 
  9350  0093                     	;# 
  9351  0094                     	;# 
  9352  0097                     	;# 
  9353  009B                     	;# 
  9354  009B                     	;# 
  9355  009C                     	;# 
  9356  009D                     	;# 
  9357  009E                     	;# 
  9358  009F                     	;# 
  9359  010C                     	;# 
  9360  010D                     	;# 
  9361  010E                     	;# 
  9362  0111                     	;# 
  9363  0112                     	;# 
  9364  0113                     	;# 
  9365  0114                     	;# 
  9366  0115                     	;# 
  9367  0116                     	;# 
  9368  0117                     	;# 
  9369  0118                     	;# 
  9370  0119                     	;# 
  9371  018C                     	;# 
  9372  018D                     	;# 
  9373  018E                     	;# 
  9374  0197                     	;# 
  9375  0199                     	;# 
  9376  0199                     	;# 
  9377  0199                     	;# 
  9378  019A                     	;# 
  9379  019A                     	;# 
  9380  019A                     	;# 
  9381  019B                     	;# 
  9382  019B                     	;# 
  9383  019B                     	;# 
  9384  019B                     	;# 
  9385  019B                     	;# 
  9386  019C                     	;# 
  9387  019C                     	;# 
  9388  019C                     	;# 
  9389  019D                     	;# 
  9390  019D                     	;# 
  9391  019D                     	;# 
  9392  019E                     	;# 
  9393  019E                     	;# 
  9394  019E                     	;# 
  9395  019F                     	;# 
  9396  019F                     	;# 
  9397  019F                     	;# 
  9398  019F                     	;# 
  9399  019F                     	;# 
  9400  020C                     	;# 
  9401  020D                     	;# 
  9402  020E                     	;# 
  9403  0211                     	;# 
  9404  0211                     	;# 
  9405  0212                     	;# 
  9406  0212                     	;# 
  9407  0213                     	;# 
  9408  0213                     	;# 
  9409  0214                     	;# 
  9410  0214                     	;# 
  9411  0215                     	;# 
  9412  0215                     	;# 
  9413  0215                     	;# 
  9414  0215                     	;# 
  9415  0216                     	;# 
  9416  0216                     	;# 
  9417  0217                     	;# 
  9418  0217                     	;# 
  9419  0219                     	;# 
  9420  021A                     	;# 
  9421  021B                     	;# 
  9422  021C                     	;# 
  9423  021D                     	;# 
  9424  021D                     	;# 
  9425  021E                     	;# 
  9426  021F                     	;# 
  9427  028C                     	;# 
  9428  028D                     	;# 
  9429  028E                     	;# 
  9430  0291                     	;# 
  9431  0291                     	;# 
  9432  0292                     	;# 
  9433  0293                     	;# 
  9434  0294                     	;# 
  9435  0295                     	;# 
  9436  0295                     	;# 
  9437  0296                     	;# 
  9438  0297                     	;# 
  9439  0298                     	;# 
  9440  029F                     	;# 
  9441  030C                     	;# 
  9442  030D                     	;# 
  9443  030E                     	;# 
  9444  0311                     	;# 
  9445  0311                     	;# 
  9446  0312                     	;# 
  9447  0313                     	;# 
  9448  0314                     	;# 
  9449  0315                     	;# 
  9450  0315                     	;# 
  9451  0316                     	;# 
  9452  0317                     	;# 
  9453  0318                     	;# 
  9454  038C                     	;# 
  9455  038D                     	;# 
  9456  038E                     	;# 
  9457  0391                     	;# 
  9458  0392                     	;# 
  9459  0393                     	;# 
  9460  0394                     	;# 
  9461  0395                     	;# 
  9462  0396                     	;# 
  9463  0397                     	;# 
  9464  0398                     	;# 
  9465  0399                     	;# 
  9466  039A                     	;# 
  9467  039C                     	;# 
  9468  039D                     	;# 
  9469  039E                     	;# 
  9470  039F                     	;# 
  9471  040C                     	;# 
  9472  040D                     	;# 
  9473  040E                     	;# 
  9474  0411                     	;# 
  9475  0411                     	;# 
  9476  0412                     	;# 
  9477  0413                     	;# 
  9478  0414                     	;# 
  9479  0415                     	;# 
  9480  0416                     	;# 
  9481  0417                     	;# 
  9482  0418                     	;# 
  9483  0418                     	;# 
  9484  0419                     	;# 
  9485  041A                     	;# 
  9486  041B                     	;# 
  9487  041C                     	;# 
  9488  041D                     	;# 
  9489  041E                     	;# 
  9490  041F                     	;# 
  9491  048C                     	;# 
  9492  048D                     	;# 
  9493  048E                     	;# 
  9494  0498                     	;# 
  9495  0498                     	;# 
  9496  0499                     	;# 
  9497  049A                     	;# 
  9498  049B                     	;# 
  9499  049B                     	;# 
  9500  049C                     	;# 
  9501  049D                     	;# 
  9502  049E                     	;# 
  9503  049F                     	;# 
  9504  0617                     	;# 
  9505  0618                     	;# 
  9506  0619                     	;# 
  9507  0619                     	;# 
  9508  061A                     	;# 
  9509  061B                     	;# 
  9510  061C                     	;# 
  9511  061C                     	;# 
  9512  061F                     	;# 
  9513  0691                     	;# 
  9514  0692                     	;# 
  9515  0693                     	;# 
  9516  0694                     	;# 
  9517  0695                     	;# 
  9518  0696                     	;# 
  9519  0697                     	;# 
  9520  0698                     	;# 
  9521  0699                     	;# 
  9522  0711                     	;# 
  9523  0712                     	;# 
  9524  0713                     	;# 
  9525  0714                     	;# 
  9526  0715                     	;# 
  9527  0716                     	;# 
  9528  0717                     	;# 
  9529  0718                     	;# 
  9530  0719                     	;# 
  9531  0891                     	;# 
  9532  0891                     	;# 
  9533  0892                     	;# 
  9534  0893                     	;# 
  9535  0893                     	;# 
  9536  0894                     	;# 
  9537  0895                     	;# 
  9538  0896                     	;# 
  9539  089B                     	;# 
  9540  0911                     	;# 
  9541  0912                     	;# 
  9542  0913                     	;# 
  9543  0914                     	;# 
  9544  0915                     	;# 
  9545  0916                     	;# 
  9546  0918                     	;# 
  9547  0919                     	;# 
  9548  091A                     	;# 
  9549  091B                     	;# 
  9550  091C                     	;# 
  9551  091D                     	;# 
  9552  091E                     	;# 
  9553  091F                     	;# 
  9554  0E0F                     	;# 
  9555  0E10                     	;# 
  9556  0E11                     	;# 
  9557  0E12                     	;# 
  9558  0E13                     	;# 
  9559  0E14                     	;# 
  9560  0E15                     	;# 
  9561  0E16                     	;# 
  9562  0E17                     	;# 
  9563  0E18                     	;# 
  9564  0E19                     	;# 
  9565  0E1A                     	;# 
  9566  0E1B                     	;# 
  9567  0E1C                     	;# 
  9568  0E1D                     	;# 
  9569  0E1E                     	;# 
  9570  0E1F                     	;# 
  9571  0E20                     	;# 
  9572  0E21                     	;# 
  9573  0E22                     	;# 
  9574  0E24                     	;# 
  9575  0E25                     	;# 
  9576  0E28                     	;# 
  9577  0E29                     	;# 
  9578  0E2A                     	;# 
  9579  0E2B                     	;# 
  9580  0E2C                     	;# 
  9581  0E2D                     	;# 
  9582  0E2E                     	;# 
  9583  0E2F                     	;# 
  9584  0E90                     	;# 
  9585  0E91                     	;# 
  9586  0E92                     	;# 
  9587  0E94                     	;# 
  9588  0E95                     	;# 
  9589  0E9C                     	;# 
  9590  0E9D                     	;# 
  9591  0E9E                     	;# 
  9592  0E9F                     	;# 
  9593  0EA0                     	;# 
  9594  0EA1                     	;# 
  9595  0EA2                     	;# 
  9596  0EA3                     	;# 
  9597  0EA4                     	;# 
  9598  0EA5                     	;# 
  9599  0EA6                     	;# 
  9600  0EA7                     	;# 
  9601  0F0F                     	;# 
  9602  0F10                     	;# 
  9603  0F11                     	;# 
  9604  0F12                     	;# 
  9605  0F13                     	;# 
  9606  0F14                     	;# 
  9607  0F15                     	;# 
  9608  0F16                     	;# 
  9609  0F17                     	;# 
  9610  0F18                     	;# 
  9611  0F19                     	;# 
  9612  0F1A                     	;# 
  9613  0F1B                     	;# 
  9614  0F1C                     	;# 
  9615  0F1D                     	;# 
  9616  0F1E                     	;# 
  9617  0F1F                     	;# 
  9618  0F20                     	;# 
  9619  0F21                     	;# 
  9620  0F22                     	;# 
  9621  0F23                     	;# 
  9622  0F24                     	;# 
  9623  0F25                     	;# 
  9624  0F26                     	;# 
  9625  0F27                     	;# 
  9626  0F28                     	;# 
  9627  0F29                     	;# 
  9628  0F2A                     	;# 
  9629  0F2B                     	;# 
  9630  0F2C                     	;# 
  9631  0F2D                     	;# 
  9632  0F2E                     	;# 
  9633  0F2F                     	;# 
  9634  0F30                     	;# 
  9635  0F31                     	;# 
  9636  0F32                     	;# 
  9637  0F33                     	;# 
  9638  0F34                     	;# 
  9639  0F35                     	;# 
  9640  0F36                     	;# 
  9641  0F37                     	;# 
  9642  0FE4                     	;# 
  9643  0FE5                     	;# 
  9644  0FE6                     	;# 
  9645  0FE7                     	;# 
  9646  0FE8                     	;# 
  9647  0FE9                     	;# 
  9648  0FEA                     	;# 
  9649  0FEB                     	;# 
  9650  0FED                     	;# 
  9651  0FEE                     	;# 
  9652  0FEF                     	;_spi1_buffer_data
  9653                           
  9654                           	psect	idataCOMMON
  9655  07FF                     __pidataCOMMON:	
  9656                           
  9657                           ;initializer for _SPI_OFFSET_BYTE
  9658  07FF  3401               	retlw	1
  9659                           
  9660                           	psect	idataBANK0
  9661  07FD                     __pidataBANK0:	
  9662                           
  9663                           ;initializer for _st_dataLength
  9664  07FD  34FF               	retlw	255
  9665  07FE  34FF               	retlw	255
  9666                           
  9667                           	psect	idataBANK1
  9668  0CD2                     __pidataBANK1:	
  9669                           
  9670                           ;initializer for _direction
  9671  0CD2  3401               	retlw	1
  9672  0CD3  3400               	retlw	0
  9673                           
  9674                           ;initializer for _linkAngle
  9675  0CD4  3468               	retlw	104
  9676  0CD5  3401               	retlw	1
  9677                           
  9678                           	psect	stringtext
  9679  1000                     __pstringtext:	
  9680  1000                     _MACHINE_ID:	
  9681  1000  3401               	retlw	1
  9682  1001  3400               	retlw	0
  9683  1002                     __end_of_MACHINE_ID:	
  9684  1002                     _VENDER_ID:	
  9685  1002  3401               	retlw	1
  9686  1003  3400               	retlw	0
  9687  1004                     __end_of_VENDER_ID:	
  9688                           
  9689                           	psect	bitnvCOMMON
  9690  03D8                     __pbitnvCOMMON:	
  9691  03D8                     _isEndPointTrig:	
  9692  03D8                     	ds	1
  9693  000B                     _INTCONbits	set	11
  9694  0010                     _PIR0bits	set	16
  9695  0011                     _PIR1bits	set	17
  9696  0012                     _PIR2bits	set	18
  9697  000C                     _PORTA	set	12
  9698  000D                     _PORTB	set	13
  9699  000E                     _PORTC	set	14
  9700  0090                     _PIE0bits	set	144
  9701  0091                     _PIE1bits	set	145
  9702  0092                     _PIE2bits	set	146
  9703  008C                     _TRISA	set	140
  9704  008D                     _TRISB	set	141
  9705  008D                     _TRISBbits	set	141
  9706  008E                     _TRISC	set	142
  9707  008E                     _TRISCbits	set	142
  9708  010C                     _LATAbits	set	268
  9709  018C                     _ANSELA	set	396
  9710  018D                     _ANSELB	set	397
  9711  018E                     _ANSELC	set	398
  9712  0211                     _SSP1BUF	set	529
  9713  0215                     _SSP1CON1bits	set	533
  9714  0217                     _SSP1CON3bits	set	535
  9715  0214                     _SSP1STATbits	set	532
  9716  0219                     _SSP2BUF	set	537
  9717  021D                     _SSP2CON1bits	set	541
  9718  021F                     _SSP2CON3bits	set	543
  9719  021C                     _SSP2STATbits	set	540
  9720  020C                     _WPUA	set	524
  9721  020D                     _WPUB	set	525
  9722  020E                     _WPUC	set	526
  9723  038C                     _INLVLAbits	set	908
  9724  038D                     _INLVLBbits	set	909
  9725  038E                     _INLVLCbits	set	910
  9726  0393                     _IOCAFbits	set	915
  9727  0392                     _IOCANbits	set	914
  9728  0391                     _IOCAPbits	set	913
  9729  0892                     _NVMADRH	set	2194
  9730  0891                     _NVMADRL	set	2193
  9731  0895                     _NVMCON1bits	set	2197
  9732  0894                     _NVMDATH	set	2196
  9733  0893                     _NVMDATL	set	2195
  9734  44A8                     _RD	set	17576
  9735  091F                     _OSCFRQbits	set	2335
  9736  091E                     _OSCTUNEbits	set	2334
  9737  0E22                     _SSP1SSPPSbits	set	3618
  9738  0E1F                     _SSP2SSPPSbits	set	3615
  9739  0E92                     _RA2PPS	set	3730
  9740  0E9F                     _RB7PPS	set	3743
  9741  0EA2                     _RC2PPS	set	3746
  9742                           
  9743                           ; #config settings
  9744  0000                     
  9745                           	psect	cinit
  9746  004D                     start_initialization:	
  9747  004D                     __initialization:		;BIGRAM_1
  9748                           
  9749                           ; Clear objects allocated to BIGRAM_1
  9750  004D  30F0               	movlw	low (0+9456)
  9751  004E  0084               	movwf	4
  9752  004F  3024               	movlw	high (0+9456)
  9753  0050  0085               	movwf	5
  9754  0051  3000               	movlw	0
  9755  0052  00FE               	movwf	btemp
  9756  0053  3003               	movlw	3
  9757  0054  00FF               	movwf	btemp+1
  9758  0055  318D  2514  3180   	fcall	clear_ram0
  9759                           
  9760                           ; Clear objects allocated to BITCOMMON
  9761  0058  01F0               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
  9762  0059  01F1               	clrf	((__pbitbssCOMMON/(0+8)+1))& (0+127)
  9763                           
  9764                           ; Clear objects allocated to COMMON
  9765  005A  01FC               	clrf	__pbssCOMMON& (0+127)
  9766                           
  9767                           ; Clear objects allocated to BANK0
  9768  005B  305C               	movlw	low __pbssBANK0
  9769  005C  0084               	movwf	4
  9770  005D  3000               	movlw	high __pbssBANK0
  9771  005E  0085               	movwf	5
  9772  005F  3011               	movlw	17
  9773  0060  00FE               	movwf	btemp
  9774  0061  3000               	movlw	0
  9775  0062  00FF               	movwf	btemp+1
  9776  0063  318D  2514  3180   	fcall	clear_ram0
  9777                           
  9778                           ; Clear objects allocated to BANK1
  9779  0066  30A0               	movlw	low __pbssBANK1
  9780  0067  0084               	movwf	4
  9781  0068  3000               	movlw	high __pbssBANK1
  9782  0069  0085               	movwf	5
  9783  006A  3043               	movlw	67
  9784  006B  00FE               	movwf	btemp
  9785  006C  3000               	movlw	0
  9786  006D  00FF               	movwf	btemp+1
  9787  006E  318D  2514  3180   	fcall	clear_ram0
  9788                           
  9789                           ; Clear objects allocated to BANK2
  9790  0071  3020               	movlw	low __pbssBANK2
  9791  0072  0084               	movwf	4
  9792  0073  3001               	movlw	high __pbssBANK2
  9793  0074  0085               	movwf	5
  9794  0075  304A               	movlw	74
  9795  0076  00FE               	movwf	btemp
  9796  0077  3000               	movlw	0
  9797  0078  00FF               	movwf	btemp+1
  9798  0079  318D  2514  3180   	fcall	clear_ram0
  9799                           
  9800                           ; Clear objects allocated to BANK3
  9801  007C  30A0               	movlw	low __pbssBANK3
  9802  007D  0084               	movwf	4
  9803  007E  3001               	movlw	high __pbssBANK3
  9804  007F  0085               	movwf	5
  9805  0080  3012               	movlw	18
  9806  0081  00FE               	movwf	btemp
  9807  0082  3000               	movlw	0
  9808  0083  00FF               	movwf	btemp+1
  9809  0084  318D  2514  3180   	fcall	clear_ram0
  9810                           
  9811                           ; Initialize objects allocated to COMMON
  9812  0087  3187  27FF  3180   	fcall	__pidataCOMMON	;fetch initializer
  9813  008A  00FD               	movwf	__pdataCOMMON& (0+127)
  9814                           
  9815                           ; Initialize objects allocated to BANK0
  9816  008B  3187  27FD  3180   	fcall	__pidataBANK0	;fetch initializer
  9817  008E  00ED               	movwf	__pdataBANK0& (0+127)
  9818  008F  3187  27FE  3180   	fcall	__pidataBANK0+1	;fetch initializer
  9819  0092  00EE               	movwf	(__pdataBANK0+1)& (0+127)
  9820                           
  9821                           ; Initialize objects allocated to BANK1
  9822  0093  0021               	movlb	1	; select bank1
  9823  0094  318C  24D2  3180   	fcall	__pidataBANK1	;fetch initializer
  9824  0097  00E3               	movwf	__pdataBANK1& (0+127)
  9825  0098  318C  24D3  3180   	fcall	__pidataBANK1+1	;fetch initializer
  9826  009B  00E4               	movwf	(__pdataBANK1+1)& (0+127)
  9827  009C  318C  24D4  3180   	fcall	__pidataBANK1+2	;fetch initializer
  9828  009F  00E5               	movwf	(__pdataBANK1+2)& (0+127)
  9829  00A0  318C  24D5         	fcall	__pidataBANK1+3	;fetch initializer
  9830  00A2  00E6               	movwf	(__pdataBANK1+3)& (0+127)
  9831  00A3                     end_of_initialization:	
  9832                           ;End of C runtime variable initialization code
  9833                           
  9834  00A3                     __end_of__initialization:	
  9835  00A3  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  9836  00A4  0020               	movlb	0
  9837  00A5  3187  2FC9         	ljmp	_main	;jump to C main() function
  9838                           
  9839                           	psect	bitbssCOMMON
  9840  0380                     __pbitbssCOMMON:	
  9841  0380                     _isCalibrated:	
  9842  0380                     	ds	1
  9843  0381                     _isMyAddr:	
  9844  0381                     	ds	1
  9845  0382                     _isMycargo:	
  9846  0382                     	ds	1
  9847  0383                     _isSendSPI2:	
  9848  0383                     	ds	1
  9849  0384                     _isreadTrain:	
  9850  0384                     	ds	1
  9851  0385                     _ra3condision:	
  9852  0385                     	ds	1
  9853  0386                     _workingcounta0:	
  9854  0386                     	ds	1
  9855  0387                     _workingcounta1:	
  9856  0387                     	ds	1
  9857  0388                     _workingcounta2:	
  9858  0388                     	ds	1
  9859  0389                     _workingcounta3:	
  9860  0389                     	ds	1
  9861                           
  9862                           	psect	bssCOMMON
  9863  007C                     __pbssCOMMON:	
  9864  007C                     _readOK:	
  9865  007C                     	ds	1
  9866                           
  9867                           	psect	dataCOMMON
  9868  007D                     __pdataCOMMON:	
  9869  007D                     _SPI_OFFSET_BYTE:	
  9870  007D                     	ds	1
  9871                           
  9872                           	psect	bssBANK0
  9873  005C                     __pbssBANK0:	
  9874  005C                     _count1:	
  9875  005C                     	ds	2
  9876  005E                     _count2:	
  9877  005E                     	ds	2
  9878  0060                     _countabuf:	
  9879  0060                     	ds	2
  9880  0062                     _read_count1:	
  9881  0062                     	ds	2
  9882  0064                     _read_count2:	
  9883  0064                     	ds	2
  9884  0066                     _eeprom_address:	
  9885  0066                     	ds	1
  9886  0067                     _readNG:	
  9887  0067                     	ds	1
  9888  0068                     _send_data:	
  9889  0068                     	ds	1
  9890  0069                     _spi1_Read_data:	
  9891  0069                     	ds	1
  9892  006A                     _spi2_Read_data:	
  9893  006A                     	ds	1
  9894  006B                     _spi2_Send_data:	
  9895  006B                     	ds	1
  9896  006C                     _st_type:	
  9897  006C                     	ds	1
  9898                           
  9899                           	psect	dataBANK0
  9900  006D                     __pdataBANK0:	
  9901  006D                     _st_dataLength:	
  9902  006D                     	ds	2
  9903                           
  9904                           	psect	bssBANK1
  9905  00A0                     __pbssBANK1:	
  9906  00A0                     _command:	
  9907  00A0                     	ds	18
  9908  00B2                     _cargoData:	
  9909  00B2                     	ds	16
  9910  00C2                     _calibdata:	
  9911  00C2                     	ds	9
  9912  00CB                     _linkInfo:	
  9913  00CB                     	ds	6
  9914  00D1                     _startTrainBytes:	
  9915  00D1                     	ds	4
  9916  00D5                     _EEPROM_ADDR_buf:	
  9917  00D5                     	ds	2
  9918  00D7                     _RaadData:	
  9919  00D7                     	ds	2
  9920  00D9                     _SIZE_COUNT:	
  9921  00D9                     	ds	2
  9922  00DB                     _counta2:	
  9923  00DB                     	ds	2
  9924  00DD                     _send_count1:	
  9925  00DD                     	ds	2
  9926  00DF                     _spi1_send_count:	
  9927  00DF                     	ds	2
  9928  00E1                     _trainPos:	
  9929  00E1                     	ds	2
  9930                           
  9931                           	psect	dataBANK1
  9932  00E3                     __pdataBANK1:	
  9933  00E3                     _direction:	
  9934  00E3                     	ds	2
  9935  00E5                     _linkAngle:	
  9936  00E5                     	ds	2
  9937                           
  9938                           	psect	bssBANK2
  9939  0120                     __pbssBANK2:	
  9940  0120                     _position:	
  9941  0120                     	ds	20
  9942  0134                     _cargo_index:	
  9943  0134                     	ds	18
  9944  0146                     _comu_types:	
  9945  0146                     	ds	18
  9946  0158                     _index:	
  9947  0158                     	ds	18
  9948                           
  9949                           	psect	bssBANK3
  9950  01A0                     __pbssBANK3:	
  9951  01A0                     _IOCode:	
  9952  01A0                     	ds	18
  9953                           
  9954                           	psect	clrtext
  9955  0D14                     clear_ram0:	
  9956                           ;	Called with FSR0 containing the base address, and
  9957                           ;	btemp/btemp+1 has the size to clear
  9958                           
  9959  0D14  0064               	clrwdt	;clear the watchdog before getting into this loop
  9960  0D15                     clrloop0:	
  9961  0D15  0180               	clrf	0	;clear RAM location pointed to by FSR
  9962  0D16  3101               	addfsr 0,1
  9963  0D17  3001               	movlw	1
  9964  0D18  02FE               	subwf	126,f
  9965  0D19  3000               	movlw	0
  9966  0D1A  3BFF               	subwfb	127,f
  9967  0D1B  087F               	movf	127,w
  9968  0D1C  047E               	iorwf	126,w
  9969  0D1D  1903               	btfsc	3,2
  9970  0D1E  3400               	retlw	0	;all done for this memory range, return
  9971  0D1F  2D15               	goto	clrloop0	;have we reached the end yet?
  9972                           
  9973                           	psect	cstackCOMMON
  9974  0072                     __pcstackCOMMON:	
  9975  0072                     ?_isTrainSt:	
  9976  0072                     ?_isSPI1read:	
  9977                           ; 1 bit 
  9978                           
  9979  0072                     ?_setIndexMode:	
  9980                           ; 1 bit 
  9981                           
  9982  0072                     ?_isEndpoint:	
  9983                           ; 1 bit 
  9984                           
  9985  0072                     ?_clutchaction:	
  9986                           ; 1 bit 
  9987                           
  9988  0072                     ?_setComunicateMode:	
  9989                           ; 1 bit 
  9990                           
  9991  0072                     ?_isSPI2read:	
  9992                           ; 1 bit 
  9993                           
  9994  0072                     ?_setSPI1sendDataManual:	
  9995                           ; 1 bit 
  9996                           
  9997  0072                     ?_resetCargo:	
  9998                           ; 1 bytes @ 0x0
  9999                           
 10000  0072                     ?_readCargo:	
 10001                           ; 1 bytes @ 0x0
 10002                           
 10003  0072                     ?_EEPROM_download:	
 10004                           ; 1 bytes @ 0x0
 10005                           
 10006  0072                     ?_restartCargo:	
 10007                           ; 1 bytes @ 0x0
 10008                           
 10009  0072                     ?_setSPI1sendData:	
 10010                           ; 1 bytes @ 0x0
 10011                           
 10012  0072                     ??_setSPI1sendData:	
 10013                           ; 1 bytes @ 0x0
 10014                           
 10015  0072                     ?_addAngle:	
 10016                           ; 1 bytes @ 0x0
 10017                           
 10018  0072                     ?_clear:	
 10019                           ; 1 bytes @ 0x0
 10020                           
 10021  0072                     ?_resetTrainData:	
 10022                           ; 1 bytes @ 0x0
 10023                           
 10024  0072                     ?_initIndex:	
 10025                           ; 1 bytes @ 0x0
 10026                           
 10027  0072                     ?_spi_init:	
 10028                           ; 1 bytes @ 0x0
 10029                           
 10030  0072                     ?_initCargo:	
 10031                           ; 1 bytes @ 0x0
 10032                           
 10033  0072                     ?_read_train:	
 10034                           ; 1 bytes @ 0x0
 10035                           
 10036  0072                     ?_setSPI2sendData:	
 10037                           ; 1 bytes @ 0x0
 10038                           
 10039  0072                     ?_setCargoAngle:	
 10040                           ; 1 bytes @ 0x0
 10041                           
 10042  0072                     ?_spi1_init:	
 10043                           ; 1 bytes @ 0x0
 10044                           
 10045  0072                     ?_spi2_init:	
 10046                           ; 1 bytes @ 0x0
 10047                           
 10048  0072                     ?_initPosition:	
 10049                           ; 1 bytes @ 0x0
 10050                           
 10051  0072                     ?_setMoter_lotate:	
 10052                           ; 1 bytes @ 0x0
 10053                           
 10054  0072                     ?_InitCalibrate:	
 10055                           ; 1 bytes @ 0x0
 10056                           
 10057  0072                     ?_Calibrate_download:	
 10058                           ; 1 bytes @ 0x0
 10059                           
 10060  0072                     ?_initComand:	
 10061                           ; 1 bytes @ 0x0
 10062                           
 10063  0072                     ?_initComu_types:	
 10064                           ; 1 bytes @ 0x0
 10065                           
 10066  0072                     ?_InterMSSP:	
 10067                           ; 1 bytes @ 0x0
 10068                           
 10069  0072                     ?_initbuffer:	
 10070                           ; 1 bytes @ 0x0
 10071                           
 10072  0072                     ?_init:	
 10073                           ; 1 bytes @ 0x0
 10074                           
 10075  0072                     ?_io_init:	
 10076                           ; 1 bytes @ 0x0
 10077                           
 10078  0072                     ?_initTrain:	
 10079                           ; 1 bytes @ 0x0
 10080                           
 10081  0072                     ?_main:	
 10082                           ; 1 bytes @ 0x0
 10083                           
 10084  0072                     ??_isSPI2read:	
 10085                           ; 1 bytes @ 0x0
 10086                           
 10087  0072                     ?_getMoter_lotate:	
 10088                           ; 1 bytes @ 0x0
 10089                           
 10090  0072                     setCargoAngle@m_linkAngleTo:	
 10091                           ; 2 bytes @ 0x0
 10092                           
 10093                           
 10094                           ; 2 bytes @ 0x0
 10095  0072                     	ds	2
 10096  0074                     ??_addAngle:	
 10097  0074                     ??_setCargoAngle:	
 10098                           ; 1 bytes @ 0x2
 10099                           
 10100  0074                     ??_getMoter_lotate:	
 10101                           ; 1 bytes @ 0x2
 10102                           
 10103  0074                     ??_InterMSSP:	
 10104                           ; 1 bytes @ 0x2
 10105                           
 10106                           
 10107                           ; 1 bytes @ 0x2
 10108  0074                     	ds	6
 10109  007A                     InterMSSP@buf:	
 10110                           
 10111                           ; 1 bytes @ 0x8
 10112  007A                     	ds	1
 10113                           
 10114                           	psect	cstackBANK0
 10115  0020                     __pcstackBANK0:	
 10116  0020                     ??_setSPI1sendDataManual:	
 10117  0020                     ??_resetCargo:	
 10118                           ; 1 bytes @ 0x0
 10119                           
 10120  0020                     ??_restartCargo:	
 10121                           ; 1 bytes @ 0x0
 10122                           
 10123  0020                     ??_clear:	
 10124                           ; 1 bytes @ 0x0
 10125                           
 10126  0020                     ??_isTrainSt:	
 10127                           ; 1 bytes @ 0x0
 10128                           
 10129  0020                     ??_resetTrainData:	
 10130                           ; 1 bytes @ 0x0
 10131                           
 10132  0020                     ??_initIndex:	
 10133                           ; 1 bytes @ 0x0
 10134                           
 10135  0020                     ??_initCargo:	
 10136                           ; 1 bytes @ 0x0
 10137                           
 10138  0020                     ??_isSPI1read:	
 10139                           ; 1 bytes @ 0x0
 10140                           
 10141  0020                     ??_read_train:	
 10142                           ; 1 bytes @ 0x0
 10143                           
 10144  0020                     ??_setSPI2sendData:	
 10145                           ; 1 bytes @ 0x0
 10146                           
 10147  0020                     ??_spi1_init:	
 10148                           ; 1 bytes @ 0x0
 10149                           
 10150  0020                     ??_spi2_init:	
 10151                           ; 1 bytes @ 0x0
 10152                           
 10153  0020                     ??_initPosition:	
 10154                           ; 1 bytes @ 0x0
 10155                           
 10156  0020                     ??_setMoter_lotate:	
 10157                           ; 1 bytes @ 0x0
 10158                           
 10159  0020                     ??_initComand:	
 10160                           ; 1 bytes @ 0x0
 10161                           
 10162  0020                     ??_clutchaction:	
 10163                           ; 1 bytes @ 0x0
 10164                           
 10165  0020                     ??_initComu_types:	
 10166                           ; 1 bytes @ 0x0
 10167                           
 10168  0020                     ?_ReadEEPROM:	
 10169                           ; 1 bytes @ 0x0
 10170                           
 10171  0020                     ??_initbuffer:	
 10172                           ; 1 bytes @ 0x0
 10173                           
 10174  0020                     ??_io_init:	
 10175                           ; 1 bytes @ 0x0
 10176                           
 10177  0020                     ?___lmul:	
 10178                           ; 1 bytes @ 0x0
 10179                           
 10180  0020                     ?___aldiv:	
 10181                           ; 4 bytes @ 0x0
 10182                           
 10183  0020                     ?___almod:	
 10184                           ; 4 bytes @ 0x0
 10185                           
 10186  0020                     ?_getCargoData:	
 10187                           ; 4 bytes @ 0x0
 10188                           
 10189  0020                     setMoter_lotate@lotate:	
 10190                           ; 16 bytes @ 0x0
 10191                           
 10192  0020                     clutchaction@comannd:	
 10193                           ; 1 bytes @ 0x0
 10194                           
 10195  0020                     setSPI1sendDataManual@data:	
 10196                           ; 1 bytes @ 0x0
 10197                           
 10198  0020                     ReadEEPROM@addr:	
 10199                           ; 1 bytes @ 0x0
 10200                           
 10201  0020                     ___lmul@multiplier:	
 10202                           ; 2 bytes @ 0x0
 10203                           
 10204  0020                     ___aldiv@divisor:	
 10205                           ; 4 bytes @ 0x0
 10206                           
 10207  0020                     ___almod@divisor:	
 10208                           ; 4 bytes @ 0x0
 10209                           
 10210                           
 10211                           ; 4 bytes @ 0x0
 10212  0020                     	ds	1
 10213  0021                     ??_setIndexMode:	
 10214  0021                     ??_isEndpoint:	
 10215                           ; 1 bytes @ 0x1
 10216                           
 10217  0021                     spi1_init@dummy:	
 10218                           ; 1 bytes @ 0x1
 10219                           
 10220  0021                     spi2_init@dummy:	
 10221                           ; 1 bytes @ 0x1
 10222                           
 10223                           
 10224                           ; 1 bytes @ 0x1
 10225  0021                     	ds	1
 10226  0022                     ??_spi_init:	
 10227  0022                     ??_ReadEEPROM:	
 10228                           ; 1 bytes @ 0x2
 10229                           
 10230  0022                     setIndexMode@m_index:	
 10231                           ; 1 bytes @ 0x2
 10232                           
 10233  0022                     initbuffer@i:	
 10234                           ; 1 bytes @ 0x2
 10235                           
 10236  0022                     read_train@bufint:	
 10237                           ; 2 bytes @ 0x2
 10238                           
 10239                           
 10240                           ; 2 bytes @ 0x2
 10241  0022                     	ds	1
 10242  0023                     ReadEEPROM@Hiadr:	
 10243  0023                     setIndexMode@i:	
 10244                           ; 1 bytes @ 0x3
 10245                           
 10246                           
 10247                           ; 2 bytes @ 0x3
 10248  0023                     	ds	1
 10249  0024                     ??_init:	
 10250  0024                     ReadEEPROM@Loadr:	
 10251                           ; 1 bytes @ 0x4
 10252                           
 10253  0024                     ___lmul@multiplicand:	
 10254                           ; 1 bytes @ 0x4
 10255                           
 10256  0024                     ___aldiv@dividend:	
 10257                           ; 4 bytes @ 0x4
 10258                           
 10259  0024                     ___almod@dividend:	
 10260                           ; 4 bytes @ 0x4
 10261                           
 10262                           
 10263                           ; 4 bytes @ 0x4
 10264  0024                     	ds	2
 10265  0026                     isEndpoint@spi2data:	
 10266                           
 10267                           ; 1 bytes @ 0x6
 10268  0026                     	ds	2
 10269  0028                     ??___lmul:	
 10270  0028                     ??___aldiv:	
 10271                           ; 1 bytes @ 0x8
 10272                           
 10273  0028                     ??___almod:	
 10274                           ; 1 bytes @ 0x8
 10275                           
 10276  0028                     ___lmul@product:	
 10277                           ; 1 bytes @ 0x8
 10278                           
 10279                           
 10280                           ; 4 bytes @ 0x8
 10281  0028                     	ds	1
 10282  0029                     ___aldiv@counter:	
 10283  0029                     ___almod@counter:	
 10284                           ; 1 bytes @ 0x9
 10285                           
 10286                           
 10287                           ; 1 bytes @ 0x9
 10288  0029                     	ds	1
 10289  002A                     isTrainSt@buf:	
 10290  002A                     ___aldiv@sign:	
 10291                           ; 1 bytes @ 0xA
 10292                           
 10293  002A                     ___almod@sign:	
 10294                           ; 1 bytes @ 0xA
 10295                           
 10296                           
 10297                           ; 1 bytes @ 0xA
 10298  002A                     	ds	1
 10299  002B                     ??_initTrain:	
 10300  002B                     ___aldiv@quotient:	
 10301                           ; 1 bytes @ 0xB
 10302                           
 10303                           
 10304                           ; 4 bytes @ 0xB
 10305  002B                     	ds	4
 10306  002F                     ?_TransLong256To255:	
 10307  002F                     TransLong256To255@data:	
 10308                           ; 4 bytes @ 0xF
 10309                           
 10310                           
 10311                           ; 4 bytes @ 0xF
 10312  002F                     	ds	1
 10313  0030                     ??_getCargoData:	
 10314                           
 10315                           ; 1 bytes @ 0x10
 10316  0030                     	ds	1
 10317  0031                     ??_EEPROM_download:	
 10318  0031                     ??_InitCalibrate:	
 10319                           ; 1 bytes @ 0x11
 10320                           
 10321                           
 10322                           ; 1 bytes @ 0x11
 10323  0031                     	ds	1
 10324  0032                     InitCalibrate@cargoData:	
 10325                           
 10326                           ; 16 bytes @ 0x12
 10327  0032                     	ds	1
 10328  0033                     ??_TransLong256To255:	
 10329                           
 10330                           ; 1 bytes @ 0x13
 10331  0033                     	ds	2
 10332  0035                     EEPROM_download@buflong:	
 10333                           
 10334                           ; 4 bytes @ 0x15
 10335  0035                     	ds	2
 10336  0037                     TransLong256To255@TransData:	
 10337                           
 10338                           ; 4 bytes @ 0x17
 10339  0037                     	ds	2
 10340  0039                     EEPROM_download@bufint:	
 10341                           
 10342                           ; 2 bytes @ 0x19
 10343  0039                     	ds	2
 10344  003B                     EEPROM_download@spi1_Read_data:	
 10345  003B                     TransLong256To255@j:	
 10346                           ; 1 bytes @ 0x1B
 10347                           
 10348                           
 10349                           ; 2 bytes @ 0x1B
 10350  003B                     	ds	2
 10351  003D                     TransLong256To255@mod:	
 10352                           
 10353                           ; 4 bytes @ 0x1D
 10354  003D                     	ds	4
 10355  0041                     TransLong256To255@pow:	
 10356                           
 10357                           ; 4 bytes @ 0x21
 10358  0041                     	ds	4
 10359  0045                     TransLong256To255@i:	
 10360                           
 10361                           ; 2 bytes @ 0x25
 10362  0045                     	ds	2
 10363  0047                     TransLong256To255@buf:	
 10364                           
 10365                           ; 4 bytes @ 0x27
 10366  0047                     	ds	4
 10367  004B                     ??_readCargo:	
 10368  004B                     ??_Calibrate_download:	
 10369                           ; 1 bytes @ 0x2B
 10370                           
 10371                           
 10372                           ; 1 bytes @ 0x2B
 10373  004B                     	ds	6
 10374  0051                     Calibrate_download@buflong:	
 10375  0051                     readCargo@buflong:	
 10376                           ; 4 bytes @ 0x31
 10377                           
 10378                           
 10379                           ; 4 bytes @ 0x31
 10380  0051                     	ds	4
 10381  0055                     Calibrate_download@bufint:	
 10382  0055                     readCargo@bufint:	
 10383                           ; 2 bytes @ 0x35
 10384                           
 10385                           
 10386                           ; 2 bytes @ 0x35
 10387  0055                     	ds	2
 10388  0057                     Calibrate_download@spi_Read_data:	
 10389  0057                     readCargo@spi1_Read_data:	
 10390                           ; 1 bytes @ 0x37
 10391                           
 10392                           
 10393                           ; 1 bytes @ 0x37
 10394  0057                     	ds	1
 10395  0058                     ??_setComunicateMode:	
 10396                           
 10397                           ; 1 bytes @ 0x38
 10398  0058                     	ds	1
 10399  0059                     setComunicateMode@m_type:	
 10400                           
 10401                           ; 1 bytes @ 0x39
 10402  0059                     	ds	1
 10403  005A                     setComunicateMode@i:	
 10404                           
 10405                           ; 2 bytes @ 0x3A
 10406  005A                     	ds	2
 10407  005C                     ??_main:	
 10408                           
 10409                           	psect	maintext
 10410  07C9                     __pmaintext:	
 10411                           ; 1 bytes @ 0x3C
 10412 ;;
 10413 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
 10414 ;;
 10415 ;; *************** function _main *****************
 10416 ;; Defined at:
 10417 ;;		line 162 in file "D:/programdata/16F18346_Hand_IC.X/main.c"
 10418 ;; Parameters:    Size  Location     Type
 10419 ;;		None
 10420 ;; Auto vars:     Size  Location     Type
 10421 ;;		None
 10422 ;; Return value:  Size  Location     Type
 10423 ;;                  1    wreg      void 
 10424 ;; Registers used:
 10425 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10426 ;; Tracked objects:
 10427 ;;		On entry : B1F/0
 10428 ;;		On exit  : 0/0
 10429 ;;		Unchanged: 0/0
 10430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10431 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10432 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10433 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10434 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10435 ;;Total ram usage:        0 bytes
 10436 ;; Hardware stack levels required when called:    7
 10437 ;; This function calls:
 10438 ;;		_InitCalibrate
 10439 ;;		_init
 10440 ;;		_initCargo
 10441 ;;		_initComand
 10442 ;;		_initComu_types
 10443 ;;		_initIndex
 10444 ;;		_initPosition
 10445 ;;		_initTrain
 10446 ;;		_io_init
 10447 ;;		_isSPI1read
 10448 ;;		_read_train
 10449 ;;		_setComunicateMode
 10450 ;;		_setSPI2sendData
 10451 ;;		_spi_init
 10452 ;; This function is called by:
 10453 ;;		Startup code after reset
 10454 ;; This function uses a non-reentrant model
 10455 ;;
 10456                           
 10457                           
 10458                           ;psect for function _main
 10459  07C9                     _main:	
 10460                           
 10461                           ;main.c: 163: initComand();
 10462                           
 10463                           ;incstack = 0
 10464                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10465  07C9  3186  267A  3187   	fcall	_initComand
 10466                           
 10467                           ;main.c: 164: initIndex();
 10468  07CC  3185  25A0  3187   	fcall	_initIndex
 10469                           
 10470                           ;main.c: 165: initComu_types();
 10471  07CF  3186  260D  3187   	fcall	_initComu_types
 10472                           
 10473                           ;main.c: 166: InitCalibrate();
 10474  07D2  318E  26B7  3187   	fcall	_InitCalibrate
 10475                           
 10476                           ;main.c: 167: init();
 10477  07D5  318E  263D  3187   	fcall	_init
 10478                           
 10479                           ;main.c: 168: io_init();
 10480  07D8  318C  24F6  3187   	fcall	_io_init
 10481                           
 10482                           ;main.c: 169: spi_init();
 10483  07DB  318C  24FF  3187   	fcall	_spi_init
 10484                           
 10485                           ;main.c: 170: initCargo();
 10486  07DE  318D  257E  3187   	fcall	_initCargo
 10487                           
 10488                           ;main.c: 171: initPosition();
 10489  07E1  318E  2665  3187   	fcall	_initPosition
 10490                           
 10491                           ;main.c: 172: LATAbits.LATA0 = 1;
 10492  07E4  0022               	movlb	2	; select bank2
 10493  07E5  140C               	bsf	12,0	;volatile
 10494  07E6                     l3361:	
 10495                           ;main.c: 173: while(1){
 10496                           
 10497                           
 10498                           ;main.c: 174: if(!isSPI1read()){
 10499  07E6  318D  253A  3187   	fcall	_isSPI1read
 10500  07E9  1803               	btfsc	3,0
 10501  07EA  2FE6               	goto	l3361
 10502                           
 10503                           ;main.c: 175: initTrain();
 10504  07EB  3187  2780  3187   	fcall	_initTrain
 10505                           
 10506                           ;main.c: 176: if(isreadTrain){
 10507  07EE  1E70               	btfss	_isreadTrain/(0+8),_isreadTrain& (0+7)
 10508  07EF  2FF6               	goto	l3369
 10509                           
 10510                           ;main.c: 177: setComunicateMode(st_type);
 10511  07F0  0020               	movlb	0	; select bank0
 10512  07F1  086C               	movf	_st_type,w
 10513  07F2  318F  2781  3187   	fcall	_setComunicateMode
 10514                           
 10515                           ;main.c: 178: }else{
 10516  07F5  2FF9               	goto	l3371
 10517  07F6                     l3369:	
 10518                           
 10519                           ;main.c: 179: read_train();
 10520  07F6  318F  2746  3187   	fcall	_read_train
 10521  07F9                     l3371:	
 10522                           
 10523                           ;main.c: 180: }
 10524                           ;main.c: 181: setSPI2sendData();
 10525  07F9  3187  2735  3187   	fcall	_setSPI2sendData
 10526  07FC  2FE6               	goto	l3361
 10527  07FD                     __end_of_main:	
 10528                           ;main.c: 182: }
 10529                           ;main.c: 183: };
 10530                           ;main.c: 184: return;
 10531                           
 10532                           
 10533                           	psect	text1
 10534  0CFF                     __ptext1:	
 10535 ;; *************** function _spi_init *****************
 10536 ;; Defined at:
 10537 ;;		line 21 in file "D:/programdata/16F18346_Hand_IC.X/spiControl.c"
 10538 ;; Parameters:    Size  Location     Type
 10539 ;;		None
 10540 ;; Auto vars:     Size  Location     Type
 10541 ;;		None
 10542 ;; Return value:  Size  Location     Type
 10543 ;;                  1    wreg      void 
 10544 ;; Registers used:
 10545 ;;		wreg, status,2, status,0, pclath, cstack
 10546 ;; Tracked objects:
 10547 ;;		On entry : 0/0
 10548 ;;		On exit  : 0/0
 10549 ;;		Unchanged: 0/0
 10550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10551 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10554 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10555 ;;Total ram usage:        0 bytes
 10556 ;; Hardware stack levels used:    1
 10557 ;; Hardware stack levels required when called:    4
 10558 ;; This function calls:
 10559 ;;		_spi1_init
 10560 ;;		_spi2_init
 10561 ;; This function is called by:
 10562 ;;		_main
 10563 ;; This function uses a non-reentrant model
 10564 ;;
 10565                           
 10566                           
 10567                           ;psect for function _spi_init
 10568  0CFF                     _spi_init:	
 10569                           
 10570                           ;spiControl.c: 22: INTCONbits.PEIE = 0;
 10571                           
 10572                           ;incstack = 0
 10573                           ; Regs used in _spi_init: [wreg+status,2+status,0+pclath+cstack]
 10574  0CFF  130B               	bcf	11,6	;volatile
 10575                           
 10576                           ;spiControl.c: 23: INTCONbits.GIE = 0;
 10577  0D00  138B               	bcf	11,7	;volatile
 10578                           
 10579                           ;spiControl.c: 24: spi1_init();
 10580  0D01  318D  25B6  318C   	fcall	_spi1_init
 10581                           
 10582                           ;spiControl.c: 25: spi2_init();
 10583  0D04  318D  25F8         	fcall	_spi2_init
 10584                           
 10585                           ;spiControl.c: 26: INTCONbits.PEIE = 1;
 10586  0D06  170B               	bsf	11,6	;volatile
 10587                           
 10588                           ;spiControl.c: 27: INTCONbits.GIE = 1;
 10589  0D07  178B               	bsf	11,7	;volatile
 10590  0D08  0008               	return
 10591  0D09                     __end_of_spi_init:	
 10592                           
 10593                           	psect	text2
 10594  0DF8                     __ptext2:	
 10595 ;; *************** function _spi2_init *****************
 10596 ;; Defined at:
 10597 ;;		line 48 in file "D:/programdata/16F18346_Hand_IC.X/spiControl.c"
 10598 ;; Parameters:    Size  Location     Type
 10599 ;;		None
 10600 ;; Auto vars:     Size  Location     Type
 10601 ;;  dummy           1    1[BANK0 ] unsigned char 
 10602 ;; Return value:  Size  Location     Type
 10603 ;;                  1    wreg      void 
 10604 ;; Registers used:
 10605 ;;		wreg, status,2, status,0
 10606 ;; Tracked objects:
 10607 ;;		On entry : 0/0
 10608 ;;		On exit  : 0/0
 10609 ;;		Unchanged: 0/0
 10610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10612 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10613 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10614 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10615 ;;Total ram usage:        2 bytes
 10616 ;; Hardware stack levels used:    1
 10617 ;; Hardware stack levels required when called:    3
 10618 ;; This function calls:
 10619 ;;		Nothing
 10620 ;; This function is called by:
 10621 ;;		_spi_init
 10622 ;; This function uses a non-reentrant model
 10623 ;;
 10624                           
 10625                           
 10626                           ;psect for function _spi2_init
 10627  0DF8                     _spi2_init:	
 10628                           
 10629                           ;spiControl.c: 49: unsigned char dummy;
 10630                           ;spiControl.c: 50: SSP2CON3bits.PCIE = 0;
 10631                           
 10632                           ;incstack = 0
 10633                           ; Regs used in _spi2_init: [wreg+status,2+status,0]
 10634  0DF8  0024               	movlb	4	; select bank4
 10635  0DF9  131F               	bcf	31,6	;volatile
 10636                           
 10637                           ;spiControl.c: 51: RA2PPS = 0b11011;
 10638  0DFA  301B               	movlw	27
 10639  0DFB  003D               	movlb	29	; select bank29
 10640  0DFC  0092               	movwf	18	;volatile
 10641                           
 10642                           ;spiControl.c: 52: RB7PPS = 0b11010;
 10643  0DFD  301A               	movlw	26
 10644  0DFE  009F               	movwf	31	;volatile
 10645                           
 10646                           ;spiControl.c: 53: SSP2SSPPSbits.SSP2SSPPS = 0b01111;
 10647  0DFF  003C               	movlb	28	; select bank28
 10648  0E00  081F               	movf	31,w	;volatile
 10649  0E01  39E0               	andlw	-32
 10650  0E02  380F               	iorlw	15
 10651  0E03  009F               	movwf	31	;volatile
 10652                           
 10653                           ;spiControl.c: 54: SSP2CON1bits.SSPOV = 0;
 10654  0E04  0024               	movlb	4	; select bank4
 10655  0E05  131D               	bcf	29,6	;volatile
 10656                           
 10657                           ;spiControl.c: 55: SSP2CON1bits.SSPEN = 1;
 10658  0E06  169D               	bsf	29,5	;volatile
 10659                           
 10660                           ;spiControl.c: 56: SSP2CON1bits.SSPM = 0b0001;
 10661  0E07  081D               	movf	29,w	;volatile
 10662  0E08  39F0               	andlw	-16
 10663  0E09  3801               	iorlw	1
 10664  0E0A  009D               	movwf	29	;volatile
 10665                           
 10666                           ;spiControl.c: 57: SSP2CON3bits.BOEN = 1;
 10667  0E0B  161F               	bsf	31,4	;volatile
 10668                           
 10669                           ;spiControl.c: 58: SSP2STATbits.SMP = 0;
 10670  0E0C  139C               	bcf	28,7	;volatile
 10671                           
 10672                           ;spiControl.c: 59: SSP2STATbits.CKE = 0;
 10673  0E0D  131C               	bcf	28,6	;volatile
 10674                           
 10675                           ;spiControl.c: 60: SSP2CON1bits.CKP = 0;
 10676  0E0E  121D               	bcf	29,4	;volatile
 10677                           
 10678                           ;spiControl.c: 61: PIE2bits.SSP2IE = 1;
 10679  0E0F  0021               	movlb	1	; select bank1
 10680  0E10  1592               	bsf	18,3	;volatile
 10681                           
 10682                           ;spiControl.c: 62: PIR2bits.SSP2IF = 0;
 10683  0E11  0020               	movlb	0	; select bank0
 10684  0E12  1192               	bcf	18,3	;volatile
 10685                           
 10686                           ;spiControl.c: 63: dummy = SSP2BUF;
 10687  0E13  0024               	movlb	4	; select bank4
 10688  0E14  0819               	movf	25,w	;volatile
 10689  0E15  0020               	movlb	0	; select bank0
 10690  0E16  00A0               	movwf	??_spi2_init
 10691  0E17  0820               	movf	??_spi2_init,w
 10692  0E18  00A1               	movwf	spi2_init@dummy
 10693  0E19  0008               	return
 10694  0E1A                     __end_of_spi2_init:	
 10695                           
 10696                           	psect	text3
 10697  0DB6                     __ptext3:	
 10698 ;; *************** function _spi1_init *****************
 10699 ;; Defined at:
 10700 ;;		line 32 in file "D:/programdata/16F18346_Hand_IC.X/spiControl.c"
 10701 ;; Parameters:    Size  Location     Type
 10702 ;;		None
 10703 ;; Auto vars:     Size  Location     Type
 10704 ;;  dummy           1    1[BANK0 ] unsigned char 
 10705 ;; Return value:  Size  Location     Type
 10706 ;;                  1    wreg      void 
 10707 ;; Registers used:
 10708 ;;		wreg, status,2, status,0
 10709 ;; Tracked objects:
 10710 ;;		On entry : 0/0
 10711 ;;		On exit  : 0/0
 10712 ;;		Unchanged: 0/0
 10713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10715 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10716 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10717 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10718 ;;Total ram usage:        2 bytes
 10719 ;; Hardware stack levels used:    1
 10720 ;; Hardware stack levels required when called:    3
 10721 ;; This function calls:
 10722 ;;		Nothing
 10723 ;; This function is called by:
 10724 ;;		_spi_init
 10725 ;; This function uses a non-reentrant model
 10726 ;;
 10727                           
 10728                           
 10729                           ;psect for function _spi1_init
 10730  0DB6                     _spi1_init:	
 10731                           
 10732                           ;spiControl.c: 33: unsigned char dummy;
 10733                           ;spiControl.c: 34: SSP1CON3bits.PCIE = 0;
 10734                           
 10735                           ;incstack = 0
 10736                           ; Regs used in _spi1_init: [wreg+status,2+status,0]
 10737  0DB6  0024               	movlb	4	; select bank4
 10738  0DB7  1317               	bcf	23,6	;volatile
 10739                           
 10740                           ;spiControl.c: 35: RC2PPS = 0b11001;
 10741  0DB8  3019               	movlw	25
 10742  0DB9  003D               	movlb	29	; select bank29
 10743  0DBA  00A2               	movwf	34	;volatile
 10744                           
 10745                           ;spiControl.c: 36: SSP1SSPPSbits.SSP1SSPPS = 0b10110;
 10746  0DBB  003C               	movlb	28	; select bank28
 10747  0DBC  0822               	movf	34,w	;volatile
 10748  0DBD  39E0               	andlw	-32
 10749  0DBE  3816               	iorlw	22
 10750  0DBF  00A2               	movwf	34	;volatile
 10751                           
 10752                           ;spiControl.c: 37: SSP1CON1bits.SSPOV = 1;
 10753  0DC0  0024               	movlb	4	; select bank4
 10754  0DC1  1715               	bsf	21,6	;volatile
 10755                           
 10756                           ;spiControl.c: 38: SSP1CON1bits.SSPEN = 1;
 10757  0DC2  1695               	bsf	21,5	;volatile
 10758                           
 10759                           ;spiControl.c: 39: SSP1CON1bits.SSPM = 0b0100;
 10760  0DC3  0815               	movf	21,w	;volatile
 10761  0DC4  39F0               	andlw	-16
 10762  0DC5  3804               	iorlw	4
 10763  0DC6  0095               	movwf	21	;volatile
 10764                           
 10765                           ;spiControl.c: 40: SSP1CON3bits.BOEN = 1;
 10766  0DC7  1617               	bsf	23,4	;volatile
 10767                           
 10768                           ;spiControl.c: 41: SSP1STATbits.SMP = 0;
 10769  0DC8  1394               	bcf	20,7	;volatile
 10770                           
 10771                           ;spiControl.c: 42: SSP1STATbits.CKE = 0;
 10772  0DC9  1314               	bcf	20,6	;volatile
 10773                           
 10774                           ;spiControl.c: 43: SSP1CON1bits.CKP = 0;
 10775  0DCA  1215               	bcf	21,4	;volatile
 10776                           
 10777                           ;spiControl.c: 44: PIE1bits.SSP1IE = 1;
 10778  0DCB  0021               	movlb	1	; select bank1
 10779  0DCC  1591               	bsf	17,3	;volatile
 10780                           
 10781                           ;spiControl.c: 45: PIR1bits.SSP1IF = 0;
 10782  0DCD  0020               	movlb	0	; select bank0
 10783  0DCE  1191               	bcf	17,3	;volatile
 10784                           
 10785                           ;spiControl.c: 46: dummy = SSP1BUF;
 10786  0DCF  0024               	movlb	4	; select bank4
 10787  0DD0  0811               	movf	17,w	;volatile
 10788  0DD1  0020               	movlb	0	; select bank0
 10789  0DD2  00A0               	movwf	??_spi1_init
 10790  0DD3  0820               	movf	??_spi1_init,w
 10791  0DD4  00A1               	movwf	spi1_init@dummy
 10792  0DD5  0008               	return
 10793  0DD6                     __end_of_spi1_init:	
 10794                           
 10795                           	psect	text4
 10796  0735                     __ptext4:	
 10797 ;; *************** function _setSPI2sendData *****************
 10798 ;; Defined at:
 10799 ;;		line 105 in file "D:/programdata/16F18346_Hand_IC.X/spiControl.c"
 10800 ;; Parameters:    Size  Location     Type
 10801 ;;		None
 10802 ;; Auto vars:     Size  Location     Type
 10803 ;;		None
 10804 ;; Return value:  Size  Location     Type
 10805 ;;                  1    wreg      void 
 10806 ;; Registers used:
 10807 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10808 ;; Tracked objects:
 10809 ;;		On entry : 0/0
 10810 ;;		On exit  : 0/0
 10811 ;;		Unchanged: 0/0
 10812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10813 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10814 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10815 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10816 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10817 ;;Total ram usage:        4 bytes
 10818 ;; Hardware stack levels used:    1
 10819 ;; Hardware stack levels required when called:    3
 10820 ;; This function calls:
 10821 ;;		Nothing
 10822 ;; This function is called by:
 10823 ;;		_main
 10824 ;; This function uses a non-reentrant model
 10825 ;;
 10826                           
 10827                           
 10828                           ;psect for function _setSPI2sendData
 10829  0735                     _setSPI2sendData:	
 10830                           
 10831                           ;spiControl.c: 106: spi2_Send_data = spi2_Send_data + SPI_OFFSET_BYTE;
 10832                           
 10833                           ;incstack = 0
 10834                           ; Regs used in _setSPI2sendData: [wreg+fsr1l+fsr1h+status,2+status,0]
 10835  0735  0020               	movlb	0	; select bank0
 10836  0736  086B               	movf	_spi2_Send_data,w
 10837  0737  077D               	addwf	_SPI_OFFSET_BYTE,w
 10838  0738  00A0               	movwf	??_setSPI2sendData
 10839  0739  0820               	movf	??_setSPI2sendData,w
 10840  073A  00EB               	movwf	_spi2_Send_data
 10841                           
 10842                           ;spiControl.c: 107: if(linkInfo.endpoint == 0){
 10843  073B  0021               	movlb	1	; select bank1
 10844  073C  0850               	movf	(_linkInfo^(0+128)+5),w
 10845  073D  1D03               	btfss	3,2
 10846  073E  2F64               	goto	l3215
 10847                           
 10848                           ;spiControl.c: 108: SSP2BUF = spi2_Send_data;
 10849  073F  0020               	movlb	0	; select bank0
 10850  0740  086B               	movf	_spi2_Send_data,w
 10851  0741  0024               	movlb	4	; select bank4
 10852  0742  0099               	movwf	25	;volatile
 10853                           
 10854                           ;spiControl.c: 110: isSendSPI2 = 1;
 10855  0743  15F0               	bsf	_isSendSPI2/(0+8),_isSendSPI2& (0+7)
 10856  0744                     l687:	
 10857                           ;spiControl.c: 111: while(isSendSPI2);
 10858                           
 10859  0744  19F0               	btfsc	_isSendSPI2/(0+8),_isSendSPI2& (0+7)
 10860  0745  2F44               	goto	l687
 10861                           
 10862                           ;spiControl.c: 112: spi2_buffer_data[count2] = SSP2BUF;
 10863  0746  30F0               	movlw	240
 10864  0747  0020               	movlb	0	; select bank0
 10865  0748  00A0               	movwf	??_setSPI2sendData
 10866  0749  3025               	movlw	37
 10867  074A  00A1               	movwf	??_setSPI2sendData+1
 10868  074B  085E               	movf	_count2,w
 10869  074C  0720               	addwf	??_setSPI2sendData,w
 10870  074D  00A2               	movwf	??_setSPI2sendData+2
 10871  074E  085F               	movf	_count2+1,w
 10872  074F  3D21               	addwfc	??_setSPI2sendData+1,w
 10873  0750  00A3               	movwf	??_setSPI2sendData+3
 10874  0751  0822               	movf	??_setSPI2sendData+2,w
 10875  0752  0086               	movwf	6
 10876  0753  0823               	movf	??_setSPI2sendData+3,w
 10877  0754  0087               	movwf	7
 10878  0755  0024               	movlb	4	; select bank4
 10879  0756  0819               	movf	25,w	;volatile
 10880  0757  0081               	movwf	1
 10881                           
 10882                           ;spiControl.c: 113: count2++;
 10883  0758  3001               	movlw	1
 10884  0759  0020               	movlb	0	; select bank0
 10885  075A  07DE               	addwf	_count2,f
 10886  075B  3000               	movlw	0
 10887  075C  3DDF               	addwfc	_count2+1,f
 10888                           
 10889                           ;spiControl.c: 114: if(count2 == 256){
 10890  075D  035F               	decf	_count2+1,w
 10891  075E  045E               	iorwf	_count2,w
 10892  075F  1D03               	btfss	3,2
 10893  0760  0008               	return
 10894                           
 10895                           ;spiControl.c: 115: count2 = 0;
 10896  0761  01DE               	clrf	_count2
 10897  0762  01DF               	clrf	_count2+1
 10898                           
 10899                           ;spiControl.c: 116: }
 10900                           ;spiControl.c: 117: }else{
 10901  0763  0008               	return
 10902  0764                     l3215:	
 10903                           
 10904                           ;spiControl.c: 118: spi2_buffer_data[count2] = spi2_Send_data;
 10905  0764  30F0               	movlw	240
 10906  0765  0020               	movlb	0	; select bank0
 10907  0766  00A0               	movwf	??_setSPI2sendData
 10908  0767  3025               	movlw	37
 10909  0768  00A1               	movwf	??_setSPI2sendData+1
 10910  0769  085E               	movf	_count2,w
 10911  076A  0720               	addwf	??_setSPI2sendData,w
 10912  076B  00A2               	movwf	??_setSPI2sendData+2
 10913  076C  085F               	movf	_count2+1,w
 10914  076D  3D21               	addwfc	??_setSPI2sendData+1,w
 10915  076E  00A3               	movwf	??_setSPI2sendData+3
 10916  076F  0822               	movf	??_setSPI2sendData+2,w
 10917  0770  0086               	movwf	6
 10918  0771  0823               	movf	??_setSPI2sendData+3,w
 10919  0772  0087               	movwf	7
 10920  0773  086B               	movf	_spi2_Send_data,w
 10921  0774  0081               	movwf	1
 10922                           
 10923                           ;spiControl.c: 119: count2++;
 10924  0775  3001               	movlw	1
 10925  0776  07DE               	addwf	_count2,f
 10926  0777  3000               	movlw	0
 10927  0778  3DDF               	addwfc	_count2+1,f
 10928                           
 10929                           ;spiControl.c: 120: if(count2 == 256){
 10930  0779  035F               	decf	_count2+1,w
 10931  077A  045E               	iorwf	_count2,w
 10932  077B  1D03               	btfss	3,2
 10933  077C  0008               	return
 10934                           
 10935                           ;spiControl.c: 121: count2 = 0;
 10936  077D  01DE               	clrf	_count2
 10937  077E  01DF               	clrf	_count2+1
 10938  077F  0008               	return
 10939  0780                     __end_of_setSPI2sendData:	
 10940                           
 10941                           	psect	text5
 10942  0F81                     __ptext5:	
 10943 ;; *************** function _setComunicateMode *****************
 10944 ;; Defined at:
 10945 ;;		line 40 in file "D:/programdata/16F18346_Hand_IC.X/comu_type.c"
 10946 ;; Parameters:    Size  Location     Type
 10947 ;;  m_type          1    wreg     unsigned char 
 10948 ;; Auto vars:     Size  Location     Type
 10949 ;;  m_type          1   57[BANK0 ] unsigned char 
 10950 ;;  i               2   58[BANK0 ] int 
 10951 ;; Return value:  Size  Location     Type
 10952 ;;		None               void
 10953 ;; Registers used:
 10954 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10955 ;; Tracked objects:
 10956 ;;		On entry : 0/0
 10957 ;;		On exit  : 0/0
 10958 ;;		Unchanged: 0/0
 10959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10960 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10961 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10962 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10963 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10964 ;;Total ram usage:        4 bytes
 10965 ;; Hardware stack levels used:    1
 10966 ;; Hardware stack levels required when called:    6
 10967 ;; This function calls:
 10968 ;;		_Calibrate_download
 10969 ;;		_EEPROM_download
 10970 ;;		_readCargo
 10971 ;; This function is called by:
 10972 ;;		_main
 10973 ;; This function uses a non-reentrant model
 10974 ;;
 10975                           
 10976                           
 10977                           ;psect for function _setComunicateMode
 10978  0F81                     _setComunicateMode:	
 10979                           
 10980                           ;incstack = 0
 10981                           ; Regs used in _setComunicateMode: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10982                           ;setComunicateMode@m_type stored from wreg
 10983  0F81  0020               	movlb	0	; select bank0
 10984  0F82  00D9               	movwf	setComunicateMode@m_type
 10985                           
 10986                           ;comu_type.c: 41: for(int i = 0; i < 18; i++){
 10987  0F83  01DA               	clrf	setComunicateMode@i
 10988  0F84  01DB               	clrf	setComunicateMode@i+1
 10989  0F85                     L1:	
 10990  0F85  085B               	movf	setComunicateMode@i+1,w
 10991  0F86  3A80               	xorlw	128
 10992  0F87  00D8               	movwf	??_setComunicateMode
 10993  0F88  3080               	movlw	128
 10994  0F89  0258               	subwf	??_setComunicateMode,w
 10995  0F8A  1D03               	skipz
 10996  0F8B  2F8E               	goto	u1755
 10997  0F8C  3012               	movlw	18
 10998  0F8D  025A               	subwf	setComunicateMode@i,w
 10999  0F8E                     u1755:	
 11000  0F8E  1803               	btfsc	3,0
 11001  0F8F  0008               	return
 11002                           
 11003                           ;comu_type.c: 42: if(comu_types[i] == m_type){
 11004  0F90  0020               	movlb	0	; select bank0
 11005  0F91  085A               	movf	setComunicateMode@i,w
 11006  0F92  3E46               	addlw	(low (_comu_types| (0+256)))& (0+255)
 11007  0F93  0086               	movwf	6
 11008  0F94  3001               	movlw	1	; select bank2/3
 11009  0F95  0087               	movwf	7
 11010  0F96  0801               	movf	1,w
 11011  0F97  0659               	xorwf	setComunicateMode@m_type,w
 11012  0F98  1903               	btfsc	3,2
 11013  0F99  2FA9               	goto	l3049
 11014  0F9A  2FB9               	goto	l3051
 11015  0F9B                     l3035:	
 11016                           ;comu_type.c: 44: case 0:
 11017                           
 11018                           ;comu_type.c: 43: switch(i){
 11019                           
 11020                           
 11021                           ;comu_type.c: 45: Calibrate_download(spi1_Read_data);
 11022  0F9B  0869               	movf	_spi1_Read_data,w
 11023  0F9C  3181  21DE         	fcall	_Calibrate_download
 11024                           
 11025                           ;comu_type.c: 46: return 1;
 11026                           ;	Return value of _setComunicateMode is never used
 11027  0F9E  0008               	return
 11028  0F9F                     l3039:	
 11029                           ;comu_type.c: 47: case 1:
 11030                           
 11031                           
 11032                           ;comu_type.c: 48: readCargo(spi1_Read_data);
 11033  0F9F  0020               	movlb	0	; select bank0
 11034  0FA0  0869               	movf	_spi1_Read_data,w
 11035  0FA1  3180  20A7         	fcall	_readCargo
 11036                           
 11037                           ;comu_type.c: 55: return 1;
 11038                           ;	Return value of _setComunicateMode is never used
 11039                           
 11040                           ;comu_type.c: 54: case 4:
 11041                           
 11042                           ;comu_type.c: 53: return 1;
 11043                           ;	Return value of _setComunicateMode is never used
 11044                           
 11045                           ;comu_type.c: 52: case 3:
 11046                           
 11047                           ;comu_type.c: 51: return 1;
 11048                           ;	Return value of _setComunicateMode is never used
 11049                           
 11050                           ;comu_type.c: 50: case 2:
 11051                           
 11052                           ;comu_type.c: 49: return 1;
 11053                           ;	Return value of _setComunicateMode is never used
 11054  0FA3  0008               	return
 11055  0FA4                     l3043:	
 11056                           ;comu_type.c: 56: case 5:
 11057                           
 11058                           
 11059                           ;comu_type.c: 57: EEPROM_download(spi1_Read_data);
 11060  0FA4  0020               	movlb	0	; select bank0
 11061  0FA5  0869               	movf	_spi1_Read_data,w
 11062  0FA6  3183  23E0         	fcall	_EEPROM_download
 11063                           
 11064                           ;comu_type.c: 58: return 1;
 11065                           ;	Return value of _setComunicateMode is never used
 11066  0FA8  0008               	return
 11067  0FA9                     l3049:	
 11068                           ;comu_type.c: 60: }
 11069                           
 11070                           
 11071                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11072                           ; Switch size 1, requested type "space"
 11073                           ; Number of cases is 1, Range of values is 0 to 0
 11074                           ; switch strategies available:
 11075                           ; Name         Instructions Cycles
 11076                           ; simple_byte            4     3 (average)
 11077                           ; direct_byte            8     6 (fixed)
 11078                           ; jumptable            260     6 (fixed)
 11079                           ;	Chosen strategy is simple_byte
 11080  0FA9  0020               	movlb	0	; select bank0
 11081  0FAA  085B               	movf	setComunicateMode@i+1,w
 11082  0FAB  3A00               	xorlw	0	; case 0
 11083  0FAC  1903               	skipnz
 11084  0FAD  2FAF               	goto	l3611
 11085  0FAE  2FB9               	goto	l3051
 11086  0FAF                     l3611:	
 11087                           
 11088                           ; Switch size 1, requested type "space"
 11089                           ; Number of cases is 6, Range of values is 0 to 5
 11090                           ; switch strategies available:
 11091                           ; Name         Instructions Cycles
 11092                           ; direct_byte           18     6 (fixed)
 11093                           ; simple_byte           19    10 (average)
 11094                           ; jumptable            260     6 (fixed)
 11095                           ;	Chosen strategy is direct_byte
 11096  0FAF  085A               	movf	setComunicateMode@i,w
 11097  0FB0  0084               	movwf	4
 11098  0FB1  3006               	movlw	6
 11099  0FB2  0204               	subwf	4,w
 11100  0FB3  1803               	skipnc
 11101  0FB4  2FB9               	goto	l3051
 11102  0FB5  3188               	movlp	high S3613
 11103  0FB6  3504               	lslf	4,w
 11104  0FB7  3E34               	addlw	low S3613
 11105  0FB8  0082               	movwf	2
 11106  0FB9                     l3051:	
 11107  0FB9  3001               	movlw	1
 11108  0FBA  0020               	movlb	0	; select bank0
 11109  0FBB  07DA               	addwf	setComunicateMode@i,f
 11110  0FBC  3000               	movlw	0
 11111  0FBD  3DDB               	addwfc	setComunicateMode@i+1,f
 11112  0FBE  2F85               	goto	L1
 11113  0FBF                     l199:	
 11114                           ;comu_type.c: 61: }
 11115                           ;comu_type.c: 62: }
 11116                           ;comu_type.c: 63: return 0;
 11117                           ;	Return value of _setComunicateMode is never used
 11118                           
 11119  0FBF  0008               	return
 11120  0FC0                     __end_of_setComunicateMode:	
 11121                           
 11122                           	psect	swtext1
 11123  0834                     __pswtext1:	
 11124  0834                     S3613:	
 11125  0834  318F  2F9B         	ljmp	l3035
 11126  0836  318F  2F9F         	ljmp	l3039
 11127  0838  318F  2FBF         	ljmp	l199
 11128  083A  318F  2FBF         	ljmp	l199
 11129  083C  318F  2FBF         	ljmp	l199
 11130  083E  318F  2FA4         	ljmp	l3043
 11131                           
 11132                           	psect	text6
 11133  00A7                     __ptext6:	
 11134 ;; *************** function _readCargo *****************
 11135 ;; Defined at:
 11136 ;;		line 15 in file "D:/programdata/16F18346_Hand_IC.X/normal_mode.c"
 11137 ;; Parameters:    Size  Location     Type
 11138 ;;  spi1_Read_da    1    wreg     unsigned char 
 11139 ;; Auto vars:     Size  Location     Type
 11140 ;;  spi1_Read_da    1   55[BANK0 ] unsigned char 
 11141 ;;  buflong         4   49[BANK0 ] unsigned long 
 11142 ;;  bufint          2   53[BANK0 ] unsigned int 
 11143 ;; Return value:  Size  Location     Type
 11144 ;;                  1    wreg      void 
 11145 ;; Registers used:
 11146 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11147 ;; Tracked objects:
 11148 ;;		On entry : 0/0
 11149 ;;		On exit  : 0/0
 11150 ;;		Unchanged: 0/0
 11151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11153 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11154 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11155 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11156 ;;Total ram usage:       13 bytes
 11157 ;; Hardware stack levels used:    1
 11158 ;; Hardware stack levels required when called:    5
 11159 ;; This function calls:
 11160 ;;		_TransLong256To255
 11161 ;;		_clutchaction
 11162 ;;		_getCargoData
 11163 ;;		_restartCargo
 11164 ;;		_setIndexMode
 11165 ;; This function is called by:
 11166 ;;		_setComunicateMode
 11167 ;; This function uses a non-reentrant model
 11168 ;;
 11169                           
 11170                           
 11171                           ;psect for function _readCargo
 11172  00A7                     _readCargo:	
 11173                           
 11174                           ;incstack = 0
 11175                           ; Regs used in _readCargo: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11176                           ;readCargo@spi1_Read_data stored from wreg
 11177  00A7  0020               	movlb	0	; select bank0
 11178  00A8  00D7               	movwf	readCargo@spi1_Read_data
 11179                           
 11180                           ;normal_mode.c: 16: unsigned int bufint = spi1_Read_data;
 11181  00A9  0857               	movf	readCargo@spi1_Read_data,w
 11182  00AA  00CB               	movwf	??_readCargo
 11183  00AB  01CC               	clrf	??_readCargo+1
 11184  00AC  084B               	movf	??_readCargo,w
 11185  00AD  00D5               	movwf	readCargo@bufint
 11186  00AE  084C               	movf	??_readCargo+1,w
 11187  00AF  00D6               	movwf	readCargo@bufint+1
 11188                           
 11189                           ;normal_mode.c: 17: unsigned long buflong = spi1_Read_data;
 11190  00B0  0857               	movf	readCargo@spi1_Read_data,w
 11191  00B1  00CB               	movwf	??_readCargo
 11192  00B2  01CC               	clrf	??_readCargo+1
 11193  00B3  01CD               	clrf	??_readCargo+2
 11194  00B4  01CE               	clrf	??_readCargo+3
 11195  00B5  084E               	movf	??_readCargo+3,w
 11196  00B6  00D4               	movwf	readCargo@buflong+3
 11197  00B7  084D               	movf	??_readCargo+2,w
 11198  00B8  00D3               	movwf	readCargo@buflong+2
 11199  00B9  084C               	movf	??_readCargo+1,w
 11200  00BA  00D2               	movwf	readCargo@buflong+1
 11201  00BB  084B               	movf	??_readCargo,w
 11202  00BC  00D1               	movwf	readCargo@buflong
 11203                           
 11204                           ;normal_mode.c: 18: cargoData = getCargoData();
 11205  00BD  318D  2556  3180   	fcall	_getCargoData
 11206  00C0  0020               	movlb	0	; select bank0
 11207  00C1  3020               	movlw	low ?_getCargoData
 11208  00C2  0086               	movwf	6
 11209  00C3  3000               	movlw	high ?_getCargoData
 11210  00C4  0087               	movwf	7
 11211  00C5  30B2               	movlw	low _cargoData
 11212  00C6  0084               	movwf	4
 11213  00C7  3000               	movlw	high _cargoData
 11214  00C8  0085               	movwf	5
 11215  00C9  3010               	movlw	16
 11216  00CA  00CB               	movwf	??_readCargo
 11217  00CB                     u1540:	
 11218  00CB  0016               	moviw fsr1++
 11219  00CC  001A               	movwi fsr0++
 11220  00CD  0BCB               	decfsz	??_readCargo,f
 11221  00CE  28CB               	goto	u1540
 11222                           
 11223                           ;normal_mode.c: 19: if(isMycargo){
 11224  00CF  1970               	btfsc	_isMycargo/(0+8),_isMycargo& (0+7)
 11225  00D0  29B4               	goto	l2829
 11226  00D1  29C3               	goto	l2831
 11227  00D2                     l2785:	
 11228                           ;normal_mode.c: 21: case 0:
 11229                           
 11230                           ;normal_mode.c: 20: switch(countabuf){
 11231                           
 11232                           
 11233                           ;normal_mode.c: 22: cargoData.cargoLength = (bufint << 8 | 0x00FF);
 11234  00D2  0855               	movf	readCargo@bufint,w
 11235  00D3  00CC               	movwf	??_readCargo+1
 11236  00D4  01CB               	clrf	??_readCargo
 11237  00D5  30FF               	movlw	255
 11238  00D6  044B               	iorwf	??_readCargo,w
 11239  00D7  0021               	movlb	1	; select bank1
 11240  00D8  00B2               	movwf	_cargoData^(0+128)
 11241  00D9  3000               	movlw	0
 11242  00DA  0020               	movlb	0	; select bank0
 11243  00DB  044C               	iorwf	??_readCargo+1,w
 11244  00DC  28ED               	goto	L2
 11245  00DD                     l2787:	
 11246                           ;normal_mode.c: 24: case 1:
 11247                           
 11248                           ;normal_mode.c: 23: break;
 11249                           
 11250                           
 11251                           ;normal_mode.c: 25: cargoData.cargoLength = cargoData.cargoLength & (bufint | 0xFF00);
 11252  00DD  3000               	movlw	0
 11253  00DE  0020               	movlb	0	; select bank0
 11254  00DF  0455               	iorwf	readCargo@bufint,w
 11255  00E0  00CB               	movwf	??_readCargo
 11256  00E1  30FF               	movlw	255
 11257  00E2  0456               	iorwf	readCargo@bufint+1,w
 11258  00E3  00CC               	movwf	??_readCargo+1
 11259  00E4  0021               	movlb	1	; select bank1
 11260  00E5  0832               	movf	_cargoData^(0+128),w
 11261  00E6  0020               	movlb	0	; select bank0
 11262  00E7  054B               	andwf	??_readCargo,w
 11263  00E8  0021               	movlb	1	; select bank1
 11264  00E9  00B2               	movwf	_cargoData^(0+128)
 11265  00EA  0833               	movf	(_cargoData+1)^(0+128),w
 11266  00EB  0020               	movlb	0	; select bank0
 11267  00EC  054C               	andwf	??_readCargo+1,w
 11268  00ED                     L2:	
 11269  00ED  0021               	movlb	1	; select bank1
 11270  00EE  00B3               	movwf	(_cargoData+1)^(0+128)
 11271                           
 11272                           ;normal_mode.c: 26: break;
 11273  00EF  29C3               	goto	l2831
 11274  00F0                     l2789:	
 11275                           ;normal_mode.c: 27: case 2:
 11276                           
 11277                           
 11278                           ;normal_mode.c: 28: cargoData.command = spi1_Read_data;
 11279  00F0  0020               	movlb	0	; select bank0
 11280  00F1  0857               	movf	readCargo@spi1_Read_data,w
 11281  00F2  00CB               	movwf	??_readCargo
 11282  00F3  084B               	movf	??_readCargo,w
 11283  00F4  0021               	movlb	1	; select bank1
 11284  00F5  00B4               	movwf	(_cargoData^(0+128)+2)
 11285                           
 11286                           ;normal_mode.c: 29: break;
 11287  00F6  29C3               	goto	l2831
 11288  00F7                     l2791:	
 11289                           ;normal_mode.c: 30: case 3:
 11290                           
 11291                           
 11292                           ;normal_mode.c: 31: cargoData.index = spi1_Read_data;
 11293  00F7  0020               	movlb	0	; select bank0
 11294  00F8  0857               	movf	readCargo@spi1_Read_data,w
 11295  00F9  00CB               	movwf	??_readCargo
 11296  00FA  084B               	movf	??_readCargo,w
 11297  00FB  0021               	movlb	1	; select bank1
 11298  00FC  00B5               	movwf	(_cargoData^(0+128)+3)
 11299                           
 11300                           ;normal_mode.c: 32: setIndexMode(spi1_Read_data);
 11301  00FD  0020               	movlb	0	; select bank0
 11302  00FE  0857               	movf	readCargo@spi1_Read_data,w
 11303  00FF  318F  27C0  3180   	fcall	_setIndexMode
 11304                           
 11305                           ;normal_mode.c: 33: break;
 11306  0102  29C3               	goto	l2831
 11307  0103                     l2795:	
 11308                           ;normal_mode.c: 34: case 4:
 11309                           
 11310                           
 11311                           ;normal_mode.c: 35: cargoData.address = spi1_Read_data;
 11312  0103  0020               	movlb	0	; select bank0
 11313  0104  0857               	movf	readCargo@spi1_Read_data,w
 11314  0105  00CB               	movwf	??_readCargo
 11315  0106  084B               	movf	??_readCargo,w
 11316  0107  0021               	movlb	1	; select bank1
 11317  0108  00B6               	movwf	(_cargoData^(0+128)+4)
 11318                           
 11319                           ;normal_mode.c: 36: if(cargoData.address != linkInfo.My_address){
 11320  0109  0836               	movf	(_cargoData^(0+128)+4),w
 11321  010A  064B               	xorwf	_linkInfo^(0+128),w
 11322  010B  1903               	skipnz
 11323  010C  29C3               	goto	l2831
 11324                           
 11325                           ;normal_mode.c: 37: restartCargo();
 11326  010D  318C  24D6  3180   	fcall	_restartCargo
 11327                           
 11328                           ;normal_mode.c: 38: isMycargo = 0;
 11329  0110  1170               	bcf	_isMycargo/(0+8),_isMycargo& (0+7)
 11330                           
 11331                           ;normal_mode.c: 40: }
 11332                           ;normal_mode.c: 41: break;
 11333                           
 11334                           ;normal_mode.c: 39: }else{
 11335  0111  29C3               	goto	l2831
 11336  0112                     l2801:	
 11337                           ;normal_mode.c: 42: case 5:
 11338                           
 11339                           
 11340                           ;normal_mode.c: 43: spi2_Send_data = (cargoData.linkAngleTo >> 8 & 0x00ff);
 11341  0112  0021               	movlb	1	; select bank1
 11342  0113  0838               	movf	((_cargoData+1)^(0+128)+5),w
 11343  0114  2923               	goto	L7
 11344  0115                     l2803:	
 11345                           ;normal_mode.c: 45: case 6:
 11346                           
 11347                           ;normal_mode.c: 44: break;
 11348                           
 11349                           
 11350                           ;normal_mode.c: 46: spi2_Send_data = (cargoData.linkAngleTo & 0x00ff);
 11351  0115  0021               	movlb	1	; select bank1
 11352  0116  0837               	movf	(_cargoData^(0+128)+5),w
 11353  0117  2923               	goto	L7
 11354  0118                     l2805:	
 11355                           ;normal_mode.c: 48: case 7:
 11356                           
 11357                           ;normal_mode.c: 47: break;
 11358                           
 11359                           
 11360                           ;normal_mode.c: 49: spi2_Send_data = (cargoData.linkAngleBack >> 8 & 0x00ff);
 11361  0118  0021               	movlb	1	; select bank1
 11362  0119  083A               	movf	((_cargoData+1)^(0+128)+7),w
 11363  011A  2923               	goto	L7
 11364  011B                     l2807:	
 11365                           ;normal_mode.c: 51: case 8:
 11366                           
 11367                           ;normal_mode.c: 50: break;
 11368                           
 11369                           
 11370                           ;normal_mode.c: 52: spi2_Send_data = (cargoData.linkAngleBack & 0x00ff);
 11371  011B  0021               	movlb	1	; select bank1
 11372  011C  0839               	movf	(_cargoData^(0+128)+7),w
 11373  011D  2923               	goto	L7
 11374  011E                     l2809:	
 11375                           ;normal_mode.c: 54: case 9:
 11376                           
 11377                           ;normal_mode.c: 53: break;
 11378                           
 11379                           
 11380                           ;normal_mode.c: 55: spi2_Send_data = (cargoData.passedTime >> 8 & 0x00ff);
 11381  011E  0021               	movlb	1	; select bank1
 11382  011F  083C               	movf	((_cargoData+1)^(0+128)+9),w
 11383  0120  2923               	goto	L7
 11384  0121                     l2811:	
 11385                           ;normal_mode.c: 57: case 10:
 11386                           
 11387                           ;normal_mode.c: 56: break;
 11388                           
 11389                           
 11390                           ;normal_mode.c: 58: spi2_Send_data = (cargoData.passedTime & 0x00ff);
 11391  0121  0021               	movlb	1	; select bank1
 11392  0122  083B               	movf	(_cargoData^(0+128)+9),w
 11393  0123                     L7:	
 11394  0123  0020               	movlb	0	; select bank0
 11395  0124  29B0               	goto	L12
 11396  0125                     l2813:	
 11397                           ;normal_mode.c: 60: case 11:
 11398                           
 11399                           ;normal_mode.c: 59: break;
 11400                           
 11401                           
 11402                           ;normal_mode.c: 61: cargoData.clutchMode = spi1_Read_data;
 11403  0125  0857               	movf	readCargo@spi1_Read_data,w
 11404  0126  00CB               	movwf	??_readCargo
 11405  0127  084B               	movf	??_readCargo,w
 11406  0128  0021               	movlb	1	; select bank1
 11407  0129  00BD               	movwf	(_cargoData^(0+128)+11)
 11408                           
 11409                           ;normal_mode.c: 62: clutchaction(cargoData.clutchMode);
 11410  012A  083D               	movf	(_cargoData^(0+128)+11),w
 11411  012B  318D  2509  3180   	fcall	_clutchaction
 11412                           
 11413                           ;normal_mode.c: 63: break;
 11414  012E  29C3               	goto	l2831
 11415  012F                     l2817:	
 11416                           ;normal_mode.c: 64: case 12:
 11417                           
 11418                           
 11419                           ;normal_mode.c: 65: cargoData.WorkingCount++;
 11420  012F  3001               	movlw	1
 11421  0130  0021               	movlb	1	; select bank1
 11422  0131  07BE               	addwf	(_cargoData^(0+128)+12),f
 11423  0132  3000               	movlw	0
 11424  0133  3DBF               	addwfc	((_cargoData+1)^(0+128)+12),f
 11425  0134  3000               	movlw	0
 11426  0135  3DC0               	addwfc	((_cargoData+2)^(0+128)+12),f
 11427  0136  3000               	movlw	0
 11428  0137  3DC1               	addwfc	((_cargoData+3)^(0+128)+12),f
 11429                           
 11430                           ;normal_mode.c: 66: spi2_Send_data = (TransLong256To255(cargoData.WorkingCount) >> 24 & 
      +                          0x000000ff);
 11431  0138  300C               	movlw	12
 11432  0139  3EB2               	addlw	(low (_cargoData| 0))& (0+255)
 11433  013A  0086               	movwf	6
 11434  013B  0187               	clrf	7
 11435  013C  3F40               	moviw [0]fsr1
 11436  013D  0020               	movlb	0	; select bank0
 11437  013E  00AF               	movwf	TransLong256To255@data
 11438  013F  3F41               	moviw [1]fsr1
 11439  0140  00B0               	movwf	TransLong256To255@data+1
 11440  0141  3F42               	moviw [2]fsr1
 11441  0142  00B1               	movwf	TransLong256To255@data+2
 11442  0143  3F43               	moviw [3]fsr1
 11443  0144  00B2               	movwf	TransLong256To255@data+3
 11444  0145  3182  22FA  3180   	fcall	_TransLong256To255
 11445  0148  0020               	movlb	0	; select bank0
 11446  0149  082F               	movf	?_TransLong256To255,w
 11447  014A  00CB               	movwf	??_readCargo
 11448  014B  0830               	movf	?_TransLong256To255+1,w
 11449  014C  00CC               	movwf	??_readCargo+1
 11450  014D  0831               	movf	?_TransLong256To255+2,w
 11451  014E  00CD               	movwf	??_readCargo+2
 11452  014F  0832               	movf	?_TransLong256To255+3,w
 11453  0150  00CE               	movwf	??_readCargo+3
 11454  0151  3018               	movlw	24
 11455  0152  00CF               	movwf	??_readCargo+4
 11456  0153                     u1575:	
 11457  0153  37CE               	asrf	??_readCargo+3,f
 11458  0154  0CCD               	rrf	??_readCargo+2,f
 11459  0155  0CCC               	rrf	??_readCargo+1,f
 11460  0156  0CCB               	rrf	??_readCargo,f
 11461  0157  0BCF               	decfsz	??_readCargo+4,f
 11462  0158  2953               	goto	u1575
 11463  0159  299B               	goto	L14
 11464  015A                     l2821:	
 11465                           ;normal_mode.c: 68: case 13:
 11466                           
 11467                           ;normal_mode.c: 67: break;
 11468                           
 11469                           
 11470                           ;normal_mode.c: 69: spi2_Send_data = (TransLong256To255(cargoData.WorkingCount) >> 16 & 
      +                          0x000000ff);
 11471  015A  300C               	movlw	12
 11472  015B  3EB2               	addlw	(low (_cargoData| 0))& (0+255)
 11473  015C  0086               	movwf	6
 11474  015D  0187               	clrf	7
 11475  015E  3F40               	moviw [0]fsr1
 11476  015F  00AF               	movwf	TransLong256To255@data
 11477  0160  3F41               	moviw [1]fsr1
 11478  0161  00B0               	movwf	TransLong256To255@data+1
 11479  0162  3F42               	moviw [2]fsr1
 11480  0163  00B1               	movwf	TransLong256To255@data+2
 11481  0164  3F43               	moviw [3]fsr1
 11482  0165  00B2               	movwf	TransLong256To255@data+3
 11483  0166  3182  22FA  3180   	fcall	_TransLong256To255
 11484  0169  0020               	movlb	0	; select bank0
 11485  016A  082F               	movf	?_TransLong256To255,w
 11486  016B  00CB               	movwf	??_readCargo
 11487  016C  0830               	movf	?_TransLong256To255+1,w
 11488  016D  00CC               	movwf	??_readCargo+1
 11489  016E  0831               	movf	?_TransLong256To255+2,w
 11490  016F  00CD               	movwf	??_readCargo+2
 11491  0170  0832               	movf	?_TransLong256To255+3,w
 11492  0171  00CE               	movwf	??_readCargo+3
 11493  0172  3010               	movlw	16
 11494  0173  00CF               	movwf	??_readCargo+4
 11495  0174                     u1585:	
 11496  0174  37CE               	asrf	??_readCargo+3,f
 11497  0175  0CCD               	rrf	??_readCargo+2,f
 11498  0176  0CCC               	rrf	??_readCargo+1,f
 11499  0177  0CCB               	rrf	??_readCargo,f
 11500  0178  0BCF               	decfsz	??_readCargo+4,f
 11501  0179  2974               	goto	u1585
 11502  017A  299B               	goto	L14
 11503  017B                     l2823:	
 11504                           ;normal_mode.c: 71: case 14:
 11505                           
 11506                           ;normal_mode.c: 70: break;
 11507                           
 11508                           
 11509                           ;normal_mode.c: 72: spi2_Send_data = (TransLong256To255(cargoData.WorkingCount) >> 8 & 0
      +                          x000000ff);
 11510  017B  300C               	movlw	12
 11511  017C  3EB2               	addlw	(low (_cargoData| 0))& (0+255)
 11512  017D  0086               	movwf	6
 11513  017E  0187               	clrf	7
 11514  017F  3F40               	moviw [0]fsr1
 11515  0180  00AF               	movwf	TransLong256To255@data
 11516  0181  3F41               	moviw [1]fsr1
 11517  0182  00B0               	movwf	TransLong256To255@data+1
 11518  0183  3F42               	moviw [2]fsr1
 11519  0184  00B1               	movwf	TransLong256To255@data+2
 11520  0185  3F43               	moviw [3]fsr1
 11521  0186  00B2               	movwf	TransLong256To255@data+3
 11522  0187  3182  22FA  3180   	fcall	_TransLong256To255
 11523  018A  0020               	movlb	0	; select bank0
 11524  018B  082F               	movf	?_TransLong256To255,w
 11525  018C  00CB               	movwf	??_readCargo
 11526  018D  0830               	movf	?_TransLong256To255+1,w
 11527  018E  00CC               	movwf	??_readCargo+1
 11528  018F  0831               	movf	?_TransLong256To255+2,w
 11529  0190  00CD               	movwf	??_readCargo+2
 11530  0191  0832               	movf	?_TransLong256To255+3,w
 11531  0192  00CE               	movwf	??_readCargo+3
 11532  0193  3008               	movlw	8
 11533  0194  00CF               	movwf	??_readCargo+4
 11534  0195                     u1595:	
 11535  0195  37CE               	asrf	??_readCargo+3,f
 11536  0196  0CCD               	rrf	??_readCargo+2,f
 11537  0197  0CCC               	rrf	??_readCargo+1,f
 11538  0198  0CCB               	rrf	??_readCargo,f
 11539  0199  0BCF               	decfsz	??_readCargo+4,f
 11540  019A  2995               	goto	u1595
 11541  019B                     L14:	
 11542  019B  084B               	movf	??_readCargo,w
 11543  019C  00D0               	movwf	??_readCargo+5
 11544  019D  0850               	movf	??_readCargo+5,w
 11545  019E  29B2               	goto	L11
 11546  019F                     l2825:	
 11547                           ;normal_mode.c: 74: case 15:
 11548                           
 11549                           ;normal_mode.c: 73: break;
 11550                           
 11551                           
 11552                           ;normal_mode.c: 75: spi2_Send_data = (TransLong256To255(cargoData.WorkingCount) & 0x0000
      +                          00ff);
 11553  019F  300C               	movlw	12
 11554  01A0  3EB2               	addlw	(low (_cargoData| 0))& (0+255)
 11555  01A1  0086               	movwf	6
 11556  01A2  0187               	clrf	7
 11557  01A3  3F40               	moviw [0]fsr1
 11558  01A4  00AF               	movwf	TransLong256To255@data
 11559  01A5  3F41               	moviw [1]fsr1
 11560  01A6  00B0               	movwf	TransLong256To255@data+1
 11561  01A7  3F42               	moviw [2]fsr1
 11562  01A8  00B1               	movwf	TransLong256To255@data+2
 11563  01A9  3F43               	moviw [3]fsr1
 11564  01AA  00B2               	movwf	TransLong256To255@data+3
 11565  01AB  3182  22FA  3180   	fcall	_TransLong256To255
 11566  01AE  0020               	movlb	0	; select bank0
 11567  01AF  082F               	movf	?_TransLong256To255,w
 11568  01B0                     L12:	
 11569  01B0  00CB               	movwf	??_readCargo
 11570  01B1  084B               	movf	??_readCargo,w
 11571  01B2                     L11:	
 11572  01B2  00EB               	movwf	_spi2_Send_data
 11573                           
 11574                           ;normal_mode.c: 77: }
 11575                           
 11576                           ;normal_mode.c: 76: break;
 11577  01B3  29C3               	goto	l2831
 11578  01B4                     l2829:	
 11579                           
 11580                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11581                           ; Switch size 1, requested type "space"
 11582                           ; Number of cases is 1, Range of values is 0 to 0
 11583                           ; switch strategies available:
 11584                           ; Name         Instructions Cycles
 11585                           ; simple_byte            4     3 (average)
 11586                           ; direct_byte            8     6 (fixed)
 11587                           ; jumptable            260     6 (fixed)
 11588                           ;	Chosen strategy is simple_byte
 11589  01B4  0861               	movf	_countabuf+1,w
 11590  01B5  3A00               	xorlw	0	; case 0
 11591  01B6  1903               	skipnz
 11592  01B7  29B9               	goto	l3615
 11593  01B8  29C3               	goto	l2831
 11594  01B9                     l3615:	
 11595                           
 11596                           ; Switch size 1, requested type "space"
 11597                           ; Number of cases is 16, Range of values is 0 to 15
 11598                           ; switch strategies available:
 11599                           ; Name         Instructions Cycles
 11600                           ; direct_byte           38     6 (fixed)
 11601                           ; simple_byte           49    25 (average)
 11602                           ; jumptable            260     6 (fixed)
 11603                           ;	Chosen strategy is direct_byte
 11604  01B9  0860               	movf	_countabuf,w
 11605  01BA  0084               	movwf	4
 11606  01BB  3010               	movlw	16
 11607  01BC  0204               	subwf	4,w
 11608  01BD  1803               	skipnc
 11609  01BE  29C3               	goto	l2831
 11610  01BF  3188               	movlp	high S3617
 11611  01C0  3504               	lslf	4,w
 11612  01C1  3E00               	addlw	low S3617
 11613  01C2  0082               	movwf	2
 11614  01C3                     l2831:	
 11615                           
 11616                           ;normal_mode.c: 78: }
 11617                           ;normal_mode.c: 80: countabuf++;
 11618  01C3  3001               	movlw	1
 11619  01C4  0020               	movlb	0	; select bank0
 11620  01C5  07E0               	addwf	_countabuf,f
 11621  01C6  3000               	movlw	0
 11622  01C7  3DE1               	addwfc	_countabuf+1,f
 11623                           
 11624                           ;normal_mode.c: 81: if(cargoData.cargoLength <= countabuf){
 11625  01C8  0021               	movlb	1	; select bank1
 11626  01C9  0833               	movf	(_cargoData+1)^(0+128),w
 11627  01CA  0020               	movlb	0	; select bank0
 11628  01CB  0261               	subwf	_countabuf+1,w
 11629  01CC  1D03               	skipz
 11630  01CD  29D2               	goto	u1605
 11631  01CE  0021               	movlb	1	; select bank1
 11632  01CF  0832               	movf	_cargoData^(0+128),w
 11633  01D0  0020               	movlb	0	; select bank0
 11634  01D1  0260               	subwf	_countabuf,w
 11635  01D2                     u1605:	
 11636  01D2  1C03               	skipc
 11637  01D3  0008               	return
 11638                           
 11639                           ;normal_mode.c: 82: cargoData.cargoLength = 0xFFFF;
 11640  01D4  30FF               	movlw	255
 11641  01D5  0021               	movlb	1	; select bank1
 11642  01D6  00B2               	movwf	_cargoData^(0+128)
 11643  01D7  30FF               	movlw	255
 11644  01D8  00B3               	movwf	(_cargoData^(0+128)+1)
 11645                           
 11646                           ;normal_mode.c: 83: countabuf = 0;
 11647  01D9  0020               	movlb	0	; select bank0
 11648  01DA  01E0               	clrf	_countabuf
 11649  01DB  01E1               	clrf	_countabuf+1
 11650                           
 11651                           ;normal_mode.c: 84: isMycargo = 1;
 11652  01DC  1570               	bsf	_isMycargo/(0+8),_isMycargo& (0+7)
 11653  01DD  0008               	return
 11654  01DE                     __end_of_readCargo:	
 11655                           
 11656                           	psect	swtext2
 11657  0800                     __pswtext2:	
 11658  0800                     S3617:	
 11659  0800  3180  28D2         	ljmp	l2785
 11660  0802  3180  28DD         	ljmp	l2787
 11661  0804  3180  28F0         	ljmp	l2789
 11662  0806  3180  28F7         	ljmp	l2791
 11663  0808  3181  2903         	ljmp	l2795
 11664  080A  3181  2912         	ljmp	l2801
 11665  080C  3181  2915         	ljmp	l2803
 11666  080E  3181  2918         	ljmp	l2805
 11667  0810  3181  291B         	ljmp	l2807
 11668  0812  3181  291E         	ljmp	l2809
 11669  0814  3181  2921         	ljmp	l2811
 11670  0816  3181  2925         	ljmp	l2813
 11671  0818  3181  292F         	ljmp	l2817
 11672  081A  3181  295A         	ljmp	l2821
 11673  081C  3181  297B         	ljmp	l2823
 11674  081E  3181  299F         	ljmp	l2825
 11675                           
 11676                           	psect	text7
 11677  0FC0                     __ptext7:	
 11678 ;; *************** function _setIndexMode *****************
 11679 ;; Defined at:
 11680 ;;		line 31 in file "D:/programdata/16F18346_Hand_IC.X/index.c"
 11681 ;; Parameters:    Size  Location     Type
 11682 ;;  m_index         1    wreg     unsigned char 
 11683 ;; Auto vars:     Size  Location     Type
 11684 ;;  m_index         1    2[BANK0 ] unsigned char 
 11685 ;;  i               2    3[BANK0 ] int 
 11686 ;; Return value:  Size  Location     Type
 11687 ;;		None               void
 11688 ;; Registers used:
 11689 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11690 ;; Tracked objects:
 11691 ;;		On entry : 0/0
 11692 ;;		On exit  : 0/0
 11693 ;;		Unchanged: 0/0
 11694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11696 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11697 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11698 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11699 ;;Total ram usage:        4 bytes
 11700 ;; Hardware stack levels used:    1
 11701 ;; Hardware stack levels required when called:    4
 11702 ;; This function calls:
 11703 ;;		_setMoter_lotate
 11704 ;; This function is called by:
 11705 ;;		_readCargo
 11706 ;; This function uses a non-reentrant model
 11707 ;;
 11708                           
 11709                           
 11710                           ;psect for function _setIndexMode
 11711  0FC0                     _setIndexMode:	
 11712                           
 11713                           ;incstack = 0
 11714                           ; Regs used in _setIndexMode: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11715                           ;setIndexMode@m_index stored from wreg
 11716  0FC0  0020               	movlb	0	; select bank0
 11717  0FC1  00A2               	movwf	setIndexMode@m_index
 11718                           
 11719                           ;index.c: 32: for(int i = 0; i < 18; i++){
 11720  0FC2  01A3               	clrf	setIndexMode@i
 11721  0FC3  01A4               	clrf	setIndexMode@i+1
 11722  0FC4                     L15:	
 11723  0FC4  0824               	movf	setIndexMode@i+1,w
 11724  0FC5  3A80               	xorlw	128
 11725  0FC6  00A1               	movwf	??_setIndexMode
 11726  0FC7  3080               	movlw	128
 11727  0FC8  0221               	subwf	??_setIndexMode,w
 11728  0FC9  1D03               	skipz
 11729  0FCA  2FCD               	goto	u1455
 11730  0FCB  3012               	movlw	18
 11731  0FCC  0223               	subwf	setIndexMode@i,w
 11732  0FCD                     u1455:	
 11733  0FCD  1803               	btfsc	3,0
 11734  0FCE  0008               	return
 11735                           
 11736                           ;index.c: 33: if(index[i] == m_index){
 11737  0FCF  0020               	movlb	0	; select bank0
 11738  0FD0  0823               	movf	setIndexMode@i,w
 11739  0FD1  3E58               	addlw	(low (_index| (0+256)))& (0+255)
 11740  0FD2  0086               	movwf	6
 11741  0FD3  3001               	movlw	1	; select bank2/3
 11742  0FD4  0087               	movwf	7
 11743  0FD5  0801               	movf	1,w
 11744  0FD6  0622               	xorwf	setIndexMode@m_index,w
 11745  0FD7  1903               	btfsc	3,2
 11746  0FD8  2FE2               	goto	l2705
 11747  0FD9  2FF9               	goto	l2707
 11748  0FDA                     l2695:	
 11749                           ;index.c: 38: case 1:
 11750                           
 11751                           ;index.c: 37: return 1;
 11752                           ;	Return value of _setIndexMode is never used
 11753                           
 11754                           ;index.c: 35: case 0:
 11755                           
 11756                           ;index.c: 34: switch(i){
 11757                           
 11758                           
 11759                           ;index.c: 39: setMoter_lotate(0x01);
 11760  0FDA  3001               	movlw	1
 11761  0FDB  318D  2597         	fcall	_setMoter_lotate
 11762                           
 11763                           ;index.c: 40: return 1;
 11764                           ;	Return value of _setIndexMode is never used
 11765  0FDD  0008               	return
 11766  0FDE                     l2699:	
 11767                           ;index.c: 41: case 2:
 11768                           
 11769                           
 11770                           ;index.c: 42: setMoter_lotate(0x02);
 11771  0FDE  3002               	movlw	2
 11772  0FDF  318D  2597         	fcall	_setMoter_lotate
 11773                           
 11774                           ;index.c: 47: return 1;
 11775                           ;	Return value of _setIndexMode is never used
 11776                           
 11777                           ;index.c: 46: case 6:
 11778                           
 11779                           ;index.c: 45: return 1;
 11780                           ;	Return value of _setIndexMode is never used
 11781                           
 11782                           ;index.c: 44: case 3:
 11783                           
 11784                           ;index.c: 43: return 1;
 11785                           ;	Return value of _setIndexMode is never used
 11786  0FE1  0008               	return
 11787  0FE2                     l2705:	
 11788                           ;index.c: 48: }
 11789                           
 11790                           
 11791                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11792                           ; Switch size 1, requested type "space"
 11793                           ; Number of cases is 1, Range of values is 0 to 0
 11794                           ; switch strategies available:
 11795                           ; Name         Instructions Cycles
 11796                           ; simple_byte            4     3 (average)
 11797                           ; direct_byte            8     6 (fixed)
 11798                           ; jumptable            260     6 (fixed)
 11799                           ;	Chosen strategy is simple_byte
 11800  0FE2  0020               	movlb	0	; select bank0
 11801  0FE3  0824               	movf	setIndexMode@i+1,w
 11802  0FE4  3A00               	xorlw	0	; case 0
 11803  0FE5  1903               	skipnz
 11804  0FE6  2FE8               	goto	l3619
 11805  0FE7  2FF9               	goto	l2707
 11806  0FE8                     l3619:	
 11807                           
 11808                           ; Switch size 1, requested type "space"
 11809                           ; Number of cases is 5, Range of values is 0 to 6
 11810                           ; switch strategies available:
 11811                           ; Name         Instructions Cycles
 11812                           ; simple_byte           16     9 (average)
 11813                           ; direct_byte           20     6 (fixed)
 11814                           ; jumptable            260     6 (fixed)
 11815                           ;	Chosen strategy is simple_byte
 11816  0FE8  0823               	movf	setIndexMode@i,w
 11817  0FE9  3A00               	xorlw	0	; case 0
 11818  0FEA  1903               	skipnz
 11819  0FEB  2FFF               	goto	l510
 11820  0FEC  3A01               	xorlw	1	; case 1
 11821  0FED  1903               	skipnz
 11822  0FEE  2FDA               	goto	l2695
 11823  0FEF  3A03               	xorlw	3	; case 2
 11824  0FF0  1903               	skipnz
 11825  0FF1  2FDE               	goto	l2699
 11826  0FF2  3A01               	xorlw	1	; case 3
 11827  0FF3  1903               	skipnz
 11828  0FF4  2FFF               	goto	l510
 11829  0FF5  3A05               	xorlw	5	; case 6
 11830  0FF6  1903               	skipnz
 11831  0FF7  2FFF               	goto	l510
 11832  0FF8  2FF9               	goto	l2707
 11833  0FF9                     l2707:	
 11834  0FF9  3001               	movlw	1
 11835  0FFA  0020               	movlb	0	; select bank0
 11836  0FFB  07A3               	addwf	setIndexMode@i,f
 11837  0FFC  3000               	movlw	0
 11838  0FFD  3DA4               	addwfc	setIndexMode@i+1,f
 11839  0FFE  2FC4               	goto	L15
 11840  0FFF                     l510:	
 11841                           ;index.c: 49: }
 11842                           ;index.c: 50: }
 11843                           ;index.c: 51: return 0;
 11844                           ;	Return value of _setIndexMode is never used
 11845                           
 11846  0FFF  0008               	return
 11847  1000                     __end_of_setIndexMode:	
 11848                           
 11849                           	psect	text8
 11850  0D97                     __ptext8:	
 11851 ;; *************** function _setMoter_lotate *****************
 11852 ;; Defined at:
 11853 ;;		line 17 in file "D:/programdata/16F18346_Hand_IC.X/cal_position.c"
 11854 ;; Parameters:    Size  Location     Type
 11855 ;;  lotate          1    wreg     unsigned char 
 11856 ;; Auto vars:     Size  Location     Type
 11857 ;;  lotate          1    0[BANK0 ] unsigned char 
 11858 ;; Return value:  Size  Location     Type
 11859 ;;                  1    wreg      void 
 11860 ;; Registers used:
 11861 ;;		wreg, status,2, status,0
 11862 ;; Tracked objects:
 11863 ;;		On entry : 0/0
 11864 ;;		On exit  : 0/0
 11865 ;;		Unchanged: 0/0
 11866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11868 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11870 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11871 ;;Total ram usage:        1 bytes
 11872 ;; Hardware stack levels used:    1
 11873 ;; Hardware stack levels required when called:    3
 11874 ;; This function calls:
 11875 ;;		Nothing
 11876 ;; This function is called by:
 11877 ;;		_setIndexMode
 11878 ;;		_setCommandMode
 11879 ;; This function uses a non-reentrant model
 11880 ;;
 11881                           
 11882                           
 11883                           ;psect for function _setMoter_lotate
 11884  0D97                     _setMoter_lotate:	
 11885                           
 11886                           ;incstack = 0
 11887                           ; Regs used in _setMoter_lotate: [wreg+status,2+status,0]
 11888                           ;setMoter_lotate@lotate stored from wreg
 11889  0D97  0020               	movlb	0	; select bank0
 11890  0D98  00A0               	movwf	setMoter_lotate@lotate
 11891                           
 11892                           ;cal_position.c: 18: if(lotate == 0x01){
 11893  0D99  0320               	decf	setMoter_lotate@lotate,w
 11894  0D9A  1D03               	btfss	3,2
 11895  0D9B  2DA2               	goto	l2483
 11896                           
 11897                           ;cal_position.c: 20: position.moter_lotate = 1;
 11898  0D9C  3001               	movlw	1
 11899  0D9D  0022               	movlb	2	; select bank2
 11900  0D9E  00A0               	movwf	_position^(0+256)
 11901  0D9F  3000               	movlw	0
 11902  0DA0  00A1               	movwf	(_position^(0+256)+1)
 11903                           
 11904                           ;cal_position.c: 21: }else if(lotate == 0x02){
 11905  0DA1  0008               	return
 11906  0DA2                     l2483:	
 11907  0DA2  3002               	movlw	2
 11908  0DA3  0020               	movlb	0	; select bank0
 11909  0DA4  0620               	xorwf	setMoter_lotate@lotate,w
 11910  0DA5  1D03               	btfss	3,2
 11911  0DA6  2DAD               	goto	l2487
 11912                           
 11913                           ;cal_position.c: 23: position.moter_lotate = -1;
 11914  0DA7  30FF               	movlw	255
 11915  0DA8  0022               	movlb	2	; select bank2
 11916  0DA9  00A0               	movwf	_position^(0+256)
 11917  0DAA  30FF               	movlw	255
 11918  0DAB  00A1               	movwf	(_position^(0+256)+1)
 11919                           
 11920                           ;cal_position.c: 24: }else if(lotate == 0x03){
 11921  0DAC  0008               	return
 11922  0DAD                     l2487:	
 11923  0DAD  3003               	movlw	3
 11924  0DAE  0020               	movlb	0	; select bank0
 11925  0DAF  0620               	xorwf	setMoter_lotate@lotate,w
 11926  0DB0  1D03               	btfss	3,2
 11927  0DB1  0008               	return
 11928                           
 11929                           ;cal_position.c: 25: position.moter_lotate = 0;
 11930  0DB2  0022               	movlb	2	; select bank2
 11931  0DB3  01A0               	clrf	_position^(0+256)
 11932  0DB4  01A1               	clrf	(_position+1)^(0+256)
 11933  0DB5  0008               	return
 11934  0DB6                     __end_of_setMoter_lotate:	
 11935                           
 11936                           	psect	text9
 11937  0D09                     __ptext9:	
 11938 ;; *************** function _clutchaction *****************
 11939 ;; Defined at:
 11940 ;;		line 73 in file "D:/programdata/16F18346_Hand_IC.X/command.c"
 11941 ;; Parameters:    Size  Location     Type
 11942 ;;  comannd         1    wreg     unsigned char 
 11943 ;; Auto vars:     Size  Location     Type
 11944 ;;  comannd         1    0[BANK0 ] unsigned char 
 11945 ;; Return value:  Size  Location     Type
 11946 ;;		None               void
 11947 ;; Registers used:
 11948 ;;		wreg, status,2, status,0
 11949 ;; Tracked objects:
 11950 ;;		On entry : 0/0
 11951 ;;		On exit  : 0/0
 11952 ;;		Unchanged: 0/0
 11953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11954 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11955 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11957 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11958 ;;Total ram usage:        1 bytes
 11959 ;; Hardware stack levels used:    1
 11960 ;; Hardware stack levels required when called:    3
 11961 ;; This function calls:
 11962 ;;		Nothing
 11963 ;; This function is called by:
 11964 ;;		_readCargo
 11965 ;; This function uses a non-reentrant model
 11966 ;;
 11967                           
 11968                           
 11969                           ;psect for function _clutchaction
 11970  0D09                     _clutchaction:	
 11971                           
 11972                           ;incstack = 0
 11973                           ; Regs used in _clutchaction: [wreg+status,2+status,0]
 11974                           ;clutchaction@comannd stored from wreg
 11975  0D09  0020               	movlb	0	; select bank0
 11976  0D0A  00A0               	movwf	clutchaction@comannd
 11977                           
 11978                           ;command.c: 74: if(comannd == 1){
 11979  0D0B  0320               	decf	clutchaction@comannd,w
 11980  0D0C  1D03               	btfss	3,2
 11981  0D0D  2D11               	goto	l162
 11982                           
 11983                           ;command.c: 75: LATAbits.LATA0 = 1;
 11984  0D0E  0022               	movlb	2	; select bank2
 11985  0D0F  140C               	bsf	12,0	;volatile
 11986                           
 11987                           ;command.c: 76: }
 11988  0D10  0008               	return
 11989  0D11                     l162:	
 11990                           
 11991                           ;command.c: 77: else{
 11992                           ;command.c: 78: LATAbits.LATA0 = 0;
 11993  0D11  0022               	movlb	2	; select bank2
 11994  0D12  100C               	bcf	12,0	;volatile
 11995  0D13  0008               	return
 11996  0D14                     __end_of_clutchaction:	
 11997                           
 11998                           	psect	text10
 11999  03E0                     __ptext10:	
 12000 ;; *************** function _EEPROM_download *****************
 12001 ;; Defined at:
 12002 ;;		line 70 in file "D:/programdata/16F18346_Hand_IC.X/eeprom.c"
 12003 ;; Parameters:    Size  Location     Type
 12004 ;;  spi1_Read_da    1    wreg     unsigned char 
 12005 ;; Auto vars:     Size  Location     Type
 12006 ;;  spi1_Read_da    1   27[BANK0 ] unsigned char 
 12007 ;;  buflong         4   21[BANK0 ] unsigned long 
 12008 ;;  bufint          2   25[BANK0 ] unsigned int 
 12009 ;; Return value:  Size  Location     Type
 12010 ;;                  1    wreg      void 
 12011 ;; Registers used:
 12012 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12013 ;; Tracked objects:
 12014 ;;		On entry : 0/0
 12015 ;;		On exit  : 0/0
 12016 ;;		Unchanged: 0/0
 12017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12018 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12019 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12020 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12021 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12022 ;;Total ram usage:       11 bytes
 12023 ;; Hardware stack levels used:    1
 12024 ;; Hardware stack levels required when called:    4
 12025 ;; This function calls:
 12026 ;;		_ReadEEPROM
 12027 ;;		_getCargoData
 12028 ;;		_restartCargo
 12029 ;; This function is called by:
 12030 ;;		_setComunicateMode
 12031 ;; This function uses a non-reentrant model
 12032 ;;
 12033                           
 12034                           
 12035                           ;psect for function _EEPROM_download
 12036  03E0                     _EEPROM_download:	
 12037                           
 12038                           ;incstack = 0
 12039                           ; Regs used in _EEPROM_download: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12040                           ;EEPROM_download@spi1_Read_data stored from wreg
 12041  03E0  0020               	movlb	0	; select bank0
 12042  03E1  00BB               	movwf	EEPROM_download@spi1_Read_data
 12043                           
 12044                           ;eeprom.c: 71: unsigned int bufint = spi1_Read_data;
 12045  03E2  083B               	movf	EEPROM_download@spi1_Read_data,w
 12046  03E3  00B1               	movwf	??_EEPROM_download
 12047  03E4  01B2               	clrf	??_EEPROM_download+1
 12048  03E5  0831               	movf	??_EEPROM_download,w
 12049  03E6  00B9               	movwf	EEPROM_download@bufint
 12050  03E7  0832               	movf	??_EEPROM_download+1,w
 12051  03E8  00BA               	movwf	EEPROM_download@bufint+1
 12052                           
 12053                           ;eeprom.c: 72: unsigned long buflong = spi1_Read_data;
 12054  03E9  083B               	movf	EEPROM_download@spi1_Read_data,w
 12055  03EA  00B1               	movwf	??_EEPROM_download
 12056  03EB  01B2               	clrf	??_EEPROM_download+1
 12057  03EC  01B3               	clrf	??_EEPROM_download+2
 12058  03ED  01B4               	clrf	??_EEPROM_download+3
 12059  03EE  0834               	movf	??_EEPROM_download+3,w
 12060  03EF  00B8               	movwf	EEPROM_download@buflong+3
 12061  03F0  0833               	movf	??_EEPROM_download+2,w
 12062  03F1  00B7               	movwf	EEPROM_download@buflong+2
 12063  03F2  0832               	movf	??_EEPROM_download+1,w
 12064  03F3  00B6               	movwf	EEPROM_download@buflong+1
 12065  03F4  0831               	movf	??_EEPROM_download,w
 12066  03F5  00B5               	movwf	EEPROM_download@buflong
 12067                           
 12068                           ;eeprom.c: 73: cargoData = getCargoData();
 12069  03F6  318D  2556  3183   	fcall	_getCargoData
 12070  03F9  0020               	movlb	0	; select bank0
 12071  03FA  3020               	movlw	low ?_getCargoData
 12072  03FB  0086               	movwf	6
 12073  03FC  3000               	movlw	high ?_getCargoData
 12074  03FD  0087               	movwf	7
 12075  03FE  30B2               	movlw	low _cargoData
 12076  03FF  0084               	movwf	4
 12077  0400  3000               	movlw	high _cargoData
 12078  0401  0085               	movwf	5
 12079  0402  3010               	movlw	16
 12080  0403  00B1               	movwf	??_EEPROM_download
 12081  0404                     u1610:	
 12082  0404  0016               	moviw fsr1++
 12083  0405  001A               	movwi fsr0++
 12084  0406  0BB1               	decfsz	??_EEPROM_download,f
 12085  0407  2C04               	goto	u1610
 12086                           
 12087                           ;eeprom.c: 74: if(isMycargo){
 12088  0408  1970               	btfsc	_isMycargo/(0+8),_isMycargo& (0+7)
 12089  0409  2C58               	goto	l2877
 12090  040A  2C68               	goto	l259
 12091  040B                     l2855:	
 12092                           ;eeprom.c: 76: case 0:
 12093                           
 12094                           ;eeprom.c: 75: switch(countabuf){
 12095                           
 12096                           
 12097                           ;eeprom.c: 77: cargoData.cargoLength = (bufint << 8 | 0x00FF);
 12098  040B  0839               	movf	EEPROM_download@bufint,w
 12099  040C  00B2               	movwf	??_EEPROM_download+1
 12100  040D  01B1               	clrf	??_EEPROM_download
 12101  040E  30FF               	movlw	255
 12102  040F  0431               	iorwf	??_EEPROM_download,w
 12103  0410  0021               	movlb	1	; select bank1
 12104  0411  00B2               	movwf	_cargoData^(0+128)
 12105  0412  3000               	movlw	0
 12106  0413  0020               	movlb	0	; select bank0
 12107  0414  0432               	iorwf	??_EEPROM_download+1,w
 12108  0415  2C26               	goto	L16
 12109  0416                     l2857:	
 12110                           ;eeprom.c: 79: case 1:
 12111                           
 12112                           ;eeprom.c: 78: break;
 12113                           
 12114                           
 12115                           ;eeprom.c: 80: cargoData.cargoLength = cargoData.cargoLength & (bufint | 0xFF00);
 12116  0416  3000               	movlw	0
 12117  0417  0020               	movlb	0	; select bank0
 12118  0418  0439               	iorwf	EEPROM_download@bufint,w
 12119  0419  00B1               	movwf	??_EEPROM_download
 12120  041A  30FF               	movlw	255
 12121  041B  043A               	iorwf	EEPROM_download@bufint+1,w
 12122  041C  00B2               	movwf	??_EEPROM_download+1
 12123  041D  0021               	movlb	1	; select bank1
 12124  041E  0832               	movf	_cargoData^(0+128),w
 12125  041F  0020               	movlb	0	; select bank0
 12126  0420  0531               	andwf	??_EEPROM_download,w
 12127  0421  0021               	movlb	1	; select bank1
 12128  0422  00B2               	movwf	_cargoData^(0+128)
 12129  0423  0833               	movf	(_cargoData+1)^(0+128),w
 12130  0424  0020               	movlb	0	; select bank0
 12131  0425  0532               	andwf	??_EEPROM_download+1,w
 12132  0426                     L16:	
 12133  0426  0021               	movlb	1	; select bank1
 12134  0427  00B3               	movwf	(_cargoData+1)^(0+128)
 12135                           
 12136                           ;eeprom.c: 81: break;
 12137  0428  2C68               	goto	l259
 12138  0429                     l2859:	
 12139                           ;eeprom.c: 82: case 2:
 12140                           
 12141                           
 12142                           ;eeprom.c: 83: cargoData.command = spi1_Read_data;
 12143  0429  0020               	movlb	0	; select bank0
 12144  042A  083B               	movf	EEPROM_download@spi1_Read_data,w
 12145  042B  00B1               	movwf	??_EEPROM_download
 12146  042C  0831               	movf	??_EEPROM_download,w
 12147  042D  0021               	movlb	1	; select bank1
 12148  042E  00B4               	movwf	(_cargoData^(0+128)+2)
 12149                           
 12150                           ;eeprom.c: 84: break;
 12151  042F  2C68               	goto	l259
 12152  0430                     l2861:	
 12153                           ;eeprom.c: 85: case 3:
 12154                           
 12155                           
 12156                           ;eeprom.c: 86: cargoData.index = spi1_Read_data;
 12157  0430  0020               	movlb	0	; select bank0
 12158  0431  083B               	movf	EEPROM_download@spi1_Read_data,w
 12159  0432  00B1               	movwf	??_EEPROM_download
 12160  0433  0831               	movf	??_EEPROM_download,w
 12161  0434  0021               	movlb	1	; select bank1
 12162  0435  00B5               	movwf	(_cargoData^(0+128)+3)
 12163                           
 12164                           ;eeprom.c: 87: break;
 12165  0436  2C68               	goto	l259
 12166  0437                     l2863:	
 12167                           ;eeprom.c: 88: case 4:
 12168                           
 12169                           
 12170                           ;eeprom.c: 89: cargoData.address = spi1_Read_data;
 12171  0437  0020               	movlb	0	; select bank0
 12172  0438  083B               	movf	EEPROM_download@spi1_Read_data,w
 12173  0439  00B1               	movwf	??_EEPROM_download
 12174  043A  0831               	movf	??_EEPROM_download,w
 12175  043B  0021               	movlb	1	; select bank1
 12176  043C  00B6               	movwf	(_cargoData^(0+128)+4)
 12177                           
 12178                           ;eeprom.c: 90: if(cargoData.address != linkInfo.My_address){
 12179  043D  0836               	movf	(_cargoData^(0+128)+4),w
 12180  043E  064B               	xorwf	_linkInfo^(0+128),w
 12181  043F  1903               	skipnz
 12182  0440  2C46               	goto	l2869
 12183                           
 12184                           ;eeprom.c: 91: restartCargo();
 12185  0441  318C  24D6  3183   	fcall	_restartCargo
 12186                           
 12187                           ;eeprom.c: 92: isMycargo = 0;
 12188  0444  1170               	bcf	_isMycargo/(0+8),_isMycargo& (0+7)
 12189                           
 12190                           ;eeprom.c: 93: }else{
 12191  0445  2C68               	goto	l259
 12192  0446                     l2869:	
 12193                           
 12194                           ;eeprom.c: 94: LATAbits.LATA0 = ~LATAbits.LATA0;
 12195  0446  1003               	clrc
 12196  0447  0022               	movlb	2	; select bank2
 12197  0448  1C0C               	btfss	12,0	;volatile
 12198  0449  1403               	setc
 12199  044A  1C03               	btfss	3,0
 12200  044B  2C4F               	goto	u1640
 12201  044C  0022               	movlb	2	; select bank2
 12202  044D  140C               	bsf	12,0	;volatile
 12203  044E  2C51               	goto	l2871
 12204  044F                     u1640:	
 12205  044F  0022               	movlb	2	; select bank2
 12206  0450  100C               	bcf	12,0	;volatile
 12207  0451                     l2871:	
 12208                           
 12209                           ;eeprom.c: 95: isMyAddr = 1;
 12210  0451  14F0               	bsf	_isMyAddr/(0+8),_isMyAddr& (0+7)
 12211                           
 12212                           ;eeprom.c: 96: EEPROM_ADDR_buf = 0xF000;
 12213  0452  3000               	movlw	0
 12214  0453  0021               	movlb	1	; select bank1
 12215  0454  00D5               	movwf	_EEPROM_ADDR_buf^(0+128)
 12216  0455  30F0               	movlw	240
 12217  0456  00D6               	movwf	(_EEPROM_ADDR_buf^(0+128)+1)
 12218                           
 12219                           ;eeprom.c: 99: }
 12220                           
 12221                           ;eeprom.c: 97: }
 12222                           ;eeprom.c: 98: break;
 12223  0457  2C68               	goto	l259
 12224  0458                     l2877:	
 12225                           
 12226                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12227                           ; Switch size 1, requested type "space"
 12228                           ; Number of cases is 1, Range of values is 0 to 0
 12229                           ; switch strategies available:
 12230                           ; Name         Instructions Cycles
 12231                           ; simple_byte            4     3 (average)
 12232                           ; direct_byte            8     6 (fixed)
 12233                           ; jumptable            260     6 (fixed)
 12234                           ;	Chosen strategy is simple_byte
 12235  0458  0020               	movlb	0	; select bank0
 12236  0459  0861               	movf	_countabuf+1,w
 12237  045A  3A00               	xorlw	0	; case 0
 12238  045B  1903               	skipnz
 12239  045C  2C5E               	goto	l3621
 12240  045D  2C68               	goto	l259
 12241  045E                     l3621:	
 12242                           
 12243                           ; Switch size 1, requested type "space"
 12244                           ; Number of cases is 5, Range of values is 0 to 4
 12245                           ; switch strategies available:
 12246                           ; Name         Instructions Cycles
 12247                           ; direct_byte           16     6 (fixed)
 12248                           ; simple_byte           16     9 (average)
 12249                           ; jumptable            260     6 (fixed)
 12250                           ;	Chosen strategy is direct_byte
 12251  045E  0860               	movf	_countabuf,w
 12252  045F  0084               	movwf	4
 12253  0460  3005               	movlw	5
 12254  0461  0204               	subwf	4,w
 12255  0462  1803               	skipnc
 12256  0463  2C68               	goto	l259
 12257  0464  3188               	movlp	high S3623
 12258  0465  3504               	lslf	4,w
 12259  0466  3E40               	addlw	low S3623
 12260  0467  0082               	movwf	2
 12261  0468                     l259:	
 12262                           
 12263                           ;eeprom.c: 100: }
 12264                           ;eeprom.c: 101: if(isMyAddr && countabuf > 4){
 12265  0468  1CF0               	btfss	_isMyAddr/(0+8),_isMyAddr& (0+7)
 12266  0469  2C88               	goto	l2887
 12267  046A  3000               	movlw	0
 12268  046B  0020               	movlb	0	; select bank0
 12269  046C  0261               	subwf	_countabuf+1,w
 12270  046D  3005               	movlw	5
 12271  046E  1903               	skipnz
 12272  046F  0260               	subwf	_countabuf,w
 12273  0470  1C03               	skipc
 12274  0471  2C88               	goto	l2887
 12275                           
 12276                           ;eeprom.c: 103: ReadEEPROM (EEPROM_ADDR_buf);
 12277  0472  0021               	movlb	1	; select bank1
 12278  0473  0856               	movf	(_EEPROM_ADDR_buf+1)^(0+128),w
 12279  0474  0020               	movlb	0	; select bank0
 12280  0475  00A1               	movwf	ReadEEPROM@addr+1
 12281  0476  0021               	movlb	1	; select bank1
 12282  0477  0855               	movf	_EEPROM_ADDR_buf^(0+128),w
 12283  0478  0020               	movlb	0	; select bank0
 12284  0479  00A0               	movwf	ReadEEPROM@addr
 12285  047A  318E  261A  3183   	fcall	_ReadEEPROM
 12286                           
 12287                           ;eeprom.c: 104: spi2_Send_data = RaadData[0];
 12288  047D  0021               	movlb	1	; select bank1
 12289  047E  0857               	movf	_RaadData^(0+128),w
 12290  047F  0020               	movlb	0	; select bank0
 12291  0480  00B1               	movwf	??_EEPROM_download
 12292  0481  0831               	movf	??_EEPROM_download,w
 12293  0482  00EB               	movwf	_spi2_Send_data
 12294                           
 12295                           ;eeprom.c: 107: EEPROM_ADDR_buf += 1;
 12296  0483  3001               	movlw	1
 12297  0484  0021               	movlb	1	; select bank1
 12298  0485  07D5               	addwf	_EEPROM_ADDR_buf^(0+128),f
 12299  0486  3000               	movlw	0
 12300  0487  3DD6               	addwfc	(_EEPROM_ADDR_buf+1)^(0+128),f
 12301  0488                     l2887:	
 12302                           
 12303                           ;eeprom.c: 109: }
 12304                           ;eeprom.c: 110: countabuf++;
 12305  0488  3001               	movlw	1
 12306  0489  0020               	movlb	0	; select bank0
 12307  048A  07E0               	addwf	_countabuf,f
 12308  048B  3000               	movlw	0
 12309  048C  3DE1               	addwfc	_countabuf+1,f
 12310                           
 12311                           ;eeprom.c: 111: if(calibdata.cargoLength <= countabuf){
 12312  048D  0021               	movlb	1	; select bank1
 12313  048E  0843               	movf	(_calibdata+1)^(0+128),w
 12314  048F  0020               	movlb	0	; select bank0
 12315  0490  0261               	subwf	_countabuf+1,w
 12316  0491  1D03               	skipz
 12317  0492  2C97               	goto	u1685
 12318  0493  0021               	movlb	1	; select bank1
 12319  0494  0842               	movf	_calibdata^(0+128),w
 12320  0495  0020               	movlb	0	; select bank0
 12321  0496  0260               	subwf	_countabuf,w
 12322  0497                     u1685:	
 12323  0497  1C03               	skipc
 12324  0498  2CA3               	goto	l2899
 12325                           
 12326                           ;eeprom.c: 112: calibdata.cargoLength = 0xFFFF;
 12327  0499  30FF               	movlw	255
 12328  049A  0021               	movlb	1	; select bank1
 12329  049B  00C2               	movwf	_calibdata^(0+128)
 12330  049C  30FF               	movlw	255
 12331  049D  00C3               	movwf	(_calibdata^(0+128)+1)
 12332                           
 12333                           ;eeprom.c: 113: countabuf = 0;
 12334  049E  0020               	movlb	0	; select bank0
 12335  049F  01E0               	clrf	_countabuf
 12336  04A0  01E1               	clrf	_countabuf+1
 12337                           
 12338                           ;eeprom.c: 114: isMycargo = 1;
 12339  04A1  1570               	bsf	_isMycargo/(0+8),_isMycargo& (0+7)
 12340                           
 12341                           ;eeprom.c: 115: isMyAddr = 0;
 12342  04A2  10F0               	bcf	_isMyAddr/(0+8),_isMyAddr& (0+7)
 12343  04A3                     l2899:	
 12344                           
 12345                           ;eeprom.c: 116: }
 12346                           ;eeprom.c: 118: if(0xF0FF <= EEPROM_ADDR_buf){
 12347  04A3  30F0               	movlw	240
 12348  04A4  0021               	movlb	1	; select bank1
 12349  04A5  0256               	subwf	(_EEPROM_ADDR_buf+1)^(0+128),w
 12350  04A6  30FF               	movlw	255
 12351  04A7  1903               	skipnz
 12352  04A8  0255               	subwf	_EEPROM_ADDR_buf^(0+128),w
 12353  04A9  1C03               	skipc
 12354  04AA  0008               	return
 12355                           
 12356                           ;eeprom.c: 119: countabuf = 0;
 12357  04AB  0020               	movlb	0	; select bank0
 12358  04AC  01E0               	clrf	_countabuf
 12359  04AD  01E1               	clrf	_countabuf+1
 12360                           
 12361                           ;eeprom.c: 120: isMycargo = 1;
 12362  04AE  1570               	bsf	_isMycargo/(0+8),_isMycargo& (0+7)
 12363  04AF  0008               	return
 12364  04B0                     __end_of_EEPROM_download:	
 12365                           
 12366                           	psect	swtext3
 12367  0840                     __pswtext3:	
 12368  0840                     S3623:	
 12369  0840  3184  2C0B         	ljmp	l2855
 12370  0842  3184  2C16         	ljmp	l2857
 12371  0844  3184  2C29         	ljmp	l2859
 12372  0846  3184  2C30         	ljmp	l2861
 12373  0848  3184  2C37         	ljmp	l2863
 12374                           
 12375                           	psect	text11
 12376  0E1A                     __ptext11:	
 12377 ;; *************** function _ReadEEPROM *****************
 12378 ;; Defined at:
 12379 ;;		line 54 in file "D:/programdata/16F18346_Hand_IC.X/eeprom.c"
 12380 ;; Parameters:    Size  Location     Type
 12381 ;;  addr            2    0[BANK0 ] int 
 12382 ;; Auto vars:     Size  Location     Type
 12383 ;;  Loadr           1    4[BANK0 ] unsigned char 
 12384 ;;  Hiadr           1    3[BANK0 ] unsigned char 
 12385 ;; Return value:  Size  Location     Type
 12386 ;;                  1    wreg      void 
 12387 ;; Registers used:
 12388 ;;		wreg, status,2
 12389 ;; Tracked objects:
 12390 ;;		On entry : 0/0
 12391 ;;		On exit  : 0/0
 12392 ;;		Unchanged: 0/0
 12393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12394 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12395 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12396 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12397 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12398 ;;Total ram usage:        5 bytes
 12399 ;; Hardware stack levels used:    1
 12400 ;; Hardware stack levels required when called:    3
 12401 ;; This function calls:
 12402 ;;		Nothing
 12403 ;; This function is called by:
 12404 ;;		_EEPROM_download
 12405 ;; This function uses a non-reentrant model
 12406 ;;
 12407                           
 12408                           
 12409                           ;psect for function _ReadEEPROM
 12410  0E1A                     _ReadEEPROM:	
 12411                           
 12412                           ;eeprom.c: 56: unsigned char Hiadr = addr >> 8 & 0xFF;
 12413                           
 12414                           ;incstack = 0
 12415                           ; Regs used in _ReadEEPROM: [wreg+status,2]
 12416  0E1A  0020               	movlb	0	; select bank0
 12417  0E1B  0821               	movf	ReadEEPROM@addr+1,w
 12418  0E1C  00A2               	movwf	??_ReadEEPROM
 12419  0E1D  0822               	movf	??_ReadEEPROM,w
 12420  0E1E  00A3               	movwf	ReadEEPROM@Hiadr
 12421                           
 12422                           ;eeprom.c: 57: unsigned char Loadr = addr & 0xFF;
 12423  0E1F  0820               	movf	ReadEEPROM@addr,w
 12424  0E20  00A2               	movwf	??_ReadEEPROM
 12425  0E21  0822               	movf	??_ReadEEPROM,w
 12426  0E22  00A4               	movwf	ReadEEPROM@Loadr
 12427                           
 12428                           ;eeprom.c: 58: NVMCON1bits.NVMREGS = 1;
 12429  0E23  0031               	movlb	17	; select bank17
 12430  0E24  1715               	bsf	21,6	;volsfr
 12431                           
 12432                           ;eeprom.c: 59: NVMADRL = Loadr;
 12433  0E25  0020               	movlb	0	; select bank0
 12434  0E26  0824               	movf	ReadEEPROM@Loadr,w
 12435  0E27  0031               	movlb	17	; select bank17
 12436  0E28  0091               	movwf	17	;volatile
 12437                           
 12438                           ;eeprom.c: 60: NVMADRH = Hiadr;
 12439  0E29  0020               	movlb	0	; select bank0
 12440  0E2A  0823               	movf	ReadEEPROM@Hiadr,w
 12441  0E2B  0031               	movlb	17	; select bank17
 12442  0E2C  0092               	movwf	18	;volatile
 12443                           
 12444                           ;eeprom.c: 61: NVMCON1bits.RD = 1;
 12445  0E2D  1415               	bsf	21,0	;volsfr
 12446                           
 12447                           ;eeprom.c: 62: RD = 1;
 12448  0E2E  1415               	bsf	21,0	;volsfr
 12449                           
 12450                           ;eeprom.c: 64: RaadData[0] = NVMDATL;
 12451  0E2F  0813               	movf	19,w	;volatile
 12452  0E30  0020               	movlb	0	; select bank0
 12453  0E31  00A2               	movwf	??_ReadEEPROM
 12454  0E32  0822               	movf	??_ReadEEPROM,w
 12455  0E33  0021               	movlb	1	; select bank1
 12456  0E34  00D7               	movwf	_RaadData^(0+128)
 12457                           
 12458                           ;eeprom.c: 65: RaadData[1] = NVMDATH;
 12459  0E35  0031               	movlb	17	; select bank17
 12460  0E36  0814               	movf	20,w	;volatile
 12461  0E37  0020               	movlb	0	; select bank0
 12462  0E38  00A2               	movwf	??_ReadEEPROM
 12463  0E39  0822               	movf	??_ReadEEPROM,w
 12464  0E3A  0021               	movlb	1	; select bank1
 12465  0E3B  00D8               	movwf	(_RaadData^(0+128)+1)
 12466  0E3C  0008               	return
 12467  0E3D                     __end_of_ReadEEPROM:	
 12468                           
 12469                           	psect	text12
 12470  01DE                     __ptext12:	
 12471 ;; *************** function _Calibrate_download *****************
 12472 ;; Defined at:
 12473 ;;		line 65 in file "D:/programdata/16F18346_Hand_IC.X/calibrate_mode.c"
 12474 ;; Parameters:    Size  Location     Type
 12475 ;;  spi_Read_dat    1    wreg     unsigned char 
 12476 ;; Auto vars:     Size  Location     Type
 12477 ;;  spi_Read_dat    1   55[BANK0 ] unsigned char 
 12478 ;;  buflong         4   49[BANK0 ] unsigned long 
 12479 ;;  bufint          2   53[BANK0 ] unsigned int 
 12480 ;; Return value:  Size  Location     Type
 12481 ;;                  1    wreg      void 
 12482 ;; Registers used:
 12483 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12484 ;; Tracked objects:
 12485 ;;		On entry : 0/0
 12486 ;;		On exit  : 0/0
 12487 ;;		Unchanged: 0/0
 12488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12489 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12490 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12491 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12492 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12493 ;;Total ram usage:       13 bytes
 12494 ;; Hardware stack levels used:    1
 12495 ;; Hardware stack levels required when called:    5
 12496 ;; This function calls:
 12497 ;;		_InitCalibrate
 12498 ;;		_TransLong256To255
 12499 ;;		_isEndpoint
 12500 ;;		_resetCargo
 12501 ;; This function is called by:
 12502 ;;		_setComunicateMode
 12503 ;; This function uses a non-reentrant model
 12504 ;;
 12505                           
 12506                           
 12507                           ;psect for function _Calibrate_download
 12508  01DE                     _Calibrate_download:	
 12509                           
 12510                           ;incstack = 0
 12511                           ; Regs used in _Calibrate_download: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12512                           ;Calibrate_download@spi_Read_data stored from wreg
 12513  01DE  0020               	movlb	0	; select bank0
 12514  01DF  00D7               	movwf	Calibrate_download@spi_Read_data
 12515                           
 12516                           ;calibrate_mode.c: 67: unsigned int bufint = spi_Read_data;
 12517  01E0  0857               	movf	Calibrate_download@spi_Read_data,w
 12518  01E1  00CB               	movwf	??_Calibrate_download
 12519  01E2  01CC               	clrf	??_Calibrate_download+1
 12520  01E3  084B               	movf	??_Calibrate_download,w
 12521  01E4  00D5               	movwf	Calibrate_download@bufint
 12522  01E5  084C               	movf	??_Calibrate_download+1,w
 12523  01E6  00D6               	movwf	Calibrate_download@bufint+1
 12524                           
 12525                           ;calibrate_mode.c: 68: unsigned long buflong = spi_Read_data;
 12526  01E7  0857               	movf	Calibrate_download@spi_Read_data,w
 12527  01E8  00CB               	movwf	??_Calibrate_download
 12528  01E9  01CC               	clrf	??_Calibrate_download+1
 12529  01EA  01CD               	clrf	??_Calibrate_download+2
 12530  01EB  01CE               	clrf	??_Calibrate_download+3
 12531  01EC  084E               	movf	??_Calibrate_download+3,w
 12532  01ED  00D4               	movwf	Calibrate_download@buflong+3
 12533  01EE  084D               	movf	??_Calibrate_download+2,w
 12534  01EF  00D3               	movwf	Calibrate_download@buflong+2
 12535  01F0  084C               	movf	??_Calibrate_download+1,w
 12536  01F1  00D2               	movwf	Calibrate_download@buflong+1
 12537  01F2  084B               	movf	??_Calibrate_download,w
 12538  01F3  00D1               	movwf	Calibrate_download@buflong
 12539                           
 12540                           ;calibrate_mode.c: 69: isEndpoint();
 12541  01F4  318F  2712  3181   	fcall	_isEndpoint
 12542                           
 12543                           ;calibrate_mode.c: 70: switch(countabuf){
 12544  01F7  2ACB               	goto	l2759
 12545  01F8                     l2721:	
 12546                           ;calibrate_mode.c: 71: case 0:
 12547                           
 12548                           
 12549                           ;calibrate_mode.c: 72: InitCalibrate();
 12550  01F8  318E  26B7  3181   	fcall	_InitCalibrate
 12551                           
 12552                           ;calibrate_mode.c: 73: calibdata.cargoLength = (bufint << 8 | 0x00FF);
 12553  01FB  0020               	movlb	0	; select bank0
 12554  01FC  0855               	movf	Calibrate_download@bufint,w
 12555  01FD  00CC               	movwf	??_Calibrate_download+1
 12556  01FE  01CB               	clrf	??_Calibrate_download
 12557  01FF  30FF               	movlw	255
 12558  0200  044B               	iorwf	??_Calibrate_download,w
 12559  0201  0021               	movlb	1	; select bank1
 12560  0202  00C2               	movwf	_calibdata^(0+128)
 12561  0203  3000               	movlw	0
 12562  0204  0020               	movlb	0	; select bank0
 12563  0205  044C               	iorwf	??_Calibrate_download+1,w
 12564  0206  2A16               	goto	L17
 12565  0207                     l2727:	
 12566                           ;calibrate_mode.c: 76: case 1:
 12567                           
 12568                           ;calibrate_mode.c: 75: break;
 12569                           
 12570                           ;calibrate_mode.c: 74: spi2_Send_data = spi_Read_data;
 12571                           
 12572                           
 12573                           ;calibrate_mode.c: 77: calibdata.cargoLength = calibdata.cargoLength & (bufint | 0xFF00)
      +                          ;
 12574  0207  3000               	movlw	0
 12575  0208  0455               	iorwf	Calibrate_download@bufint,w
 12576  0209  00CB               	movwf	??_Calibrate_download
 12577  020A  30FF               	movlw	255
 12578  020B  0456               	iorwf	Calibrate_download@bufint+1,w
 12579  020C  00CC               	movwf	??_Calibrate_download+1
 12580  020D  0021               	movlb	1	; select bank1
 12581  020E  0842               	movf	_calibdata^(0+128),w
 12582  020F  0020               	movlb	0	; select bank0
 12583  0210  054B               	andwf	??_Calibrate_download,w
 12584  0211  0021               	movlb	1	; select bank1
 12585  0212  00C2               	movwf	_calibdata^(0+128)
 12586  0213  0843               	movf	(_calibdata+1)^(0+128),w
 12587  0214  0020               	movlb	0	; select bank0
 12588  0215  054C               	andwf	??_Calibrate_download+1,w
 12589  0216                     L17:	
 12590  0216  0021               	movlb	1	; select bank1
 12591  0217  00C3               	movwf	(_calibdata+1)^(0+128)
 12592  0218  2A24               	goto	L19
 12593  0219                     l2729:	
 12594                           ;calibrate_mode.c: 80: case 2:
 12595                           
 12596                           ;calibrate_mode.c: 79: break;
 12597                           
 12598                           ;calibrate_mode.c: 78: spi2_Send_data = spi_Read_data;
 12599                           
 12600                           
 12601                           ;calibrate_mode.c: 81: calibdata.command = spi_Read_data;
 12602  0219  0857               	movf	Calibrate_download@spi_Read_data,w
 12603  021A  00CB               	movwf	??_Calibrate_download
 12604  021B  084B               	movf	??_Calibrate_download,w
 12605  021C  0021               	movlb	1	; select bank1
 12606  021D  00C4               	movwf	(_calibdata^(0+128)+2)
 12607  021E  2A24               	goto	L19
 12608  021F                     l2731:	
 12609                           ;calibrate_mode.c: 84: case 3:
 12610                           
 12611                           ;calibrate_mode.c: 83: break;
 12612                           
 12613                           ;calibrate_mode.c: 82: spi2_Send_data = spi_Read_data;
 12614                           
 12615                           
 12616                           ;calibrate_mode.c: 85: calibdata.index = spi_Read_data;
 12617  021F  0857               	movf	Calibrate_download@spi_Read_data,w
 12618  0220  00CB               	movwf	??_Calibrate_download
 12619  0221  084B               	movf	??_Calibrate_download,w
 12620  0222  0021               	movlb	1	; select bank1
 12621  0223  00C5               	movwf	(_calibdata^(0+128)+3)
 12622  0224                     L19:	
 12623                           
 12624                           ;calibrate_mode.c: 86: spi2_Send_data = spi_Read_data;
 12625  0224  0020               	movlb	0	; select bank0
 12626  0225  0857               	movf	Calibrate_download@spi_Read_data,w
 12627  0226  2AB1               	goto	L25
 12628  0227                     l2733:	
 12629                           ;calibrate_mode.c: 88: case 4:
 12630                           
 12631                           ;calibrate_mode.c: 87: break;
 12632                           
 12633                           
 12634                           ;calibrate_mode.c: 89: linkInfo.My_address = spi_Read_data +1;
 12635  0227  0857               	movf	Calibrate_download@spi_Read_data,w
 12636  0228  3E01               	addlw	1
 12637  0229  00CB               	movwf	??_Calibrate_download
 12638  022A  084B               	movf	??_Calibrate_download,w
 12639  022B  0021               	movlb	1	; select bank1
 12640  022C  00CB               	movwf	_linkInfo^(0+128)
 12641                           
 12642                           ;calibrate_mode.c: 90: spi2_Send_data = linkInfo.My_address;
 12643  022D  084B               	movf	_linkInfo^(0+128),w
 12644  022E  0020               	movlb	0	; select bank0
 12645  022F  2AB1               	goto	L25
 12646  0230                     l2737:	
 12647                           ;calibrate_mode.c: 92: case 5:
 12648                           
 12649                           ;calibrate_mode.c: 91: break;
 12650                           
 12651                           
 12652                           ;calibrate_mode.c: 93: calibdata.WorkingCount++;
 12653  0230  3001               	movlw	1
 12654  0231  0021               	movlb	1	; select bank1
 12655  0232  07C6               	addwf	(_calibdata^(0+128)+4),f
 12656  0233  3000               	movlw	0
 12657  0234  3DC7               	addwfc	((_calibdata+1)^(0+128)+4),f
 12658  0235  3000               	movlw	0
 12659  0236  3DC8               	addwfc	((_calibdata+2)^(0+128)+4),f
 12660  0237  3000               	movlw	0
 12661  0238  3DC9               	addwfc	((_calibdata+3)^(0+128)+4),f
 12662                           
 12663                           ;calibrate_mode.c: 94: spi2_Send_data = (TransLong256To255(calibdata.WorkingCount) >> 24
      +                           & 0x000000ff);
 12664  0239  3004               	movlw	4
 12665  023A  3EC2               	addlw	(low (_calibdata| 0))& (0+255)
 12666  023B  0086               	movwf	6
 12667  023C  0187               	clrf	7
 12668  023D  3F40               	moviw [0]fsr1
 12669  023E  0020               	movlb	0	; select bank0
 12670  023F  00AF               	movwf	TransLong256To255@data
 12671  0240  3F41               	moviw [1]fsr1
 12672  0241  00B0               	movwf	TransLong256To255@data+1
 12673  0242  3F42               	moviw [2]fsr1
 12674  0243  00B1               	movwf	TransLong256To255@data+2
 12675  0244  3F43               	moviw [3]fsr1
 12676  0245  00B2               	movwf	TransLong256To255@data+3
 12677  0246  3182  22FA  3181   	fcall	_TransLong256To255
 12678  0249  0020               	movlb	0	; select bank0
 12679  024A  082F               	movf	?_TransLong256To255,w
 12680  024B  00CB               	movwf	??_Calibrate_download
 12681  024C  0830               	movf	?_TransLong256To255+1,w
 12682  024D  00CC               	movwf	??_Calibrate_download+1
 12683  024E  0831               	movf	?_TransLong256To255+2,w
 12684  024F  00CD               	movwf	??_Calibrate_download+2
 12685  0250  0832               	movf	?_TransLong256To255+3,w
 12686  0251  00CE               	movwf	??_Calibrate_download+3
 12687  0252  3018               	movlw	24
 12688  0253  00CF               	movwf	??_Calibrate_download+4
 12689  0254                     u1485:	
 12690  0254  37CE               	asrf	??_Calibrate_download+3,f
 12691  0255  0CCD               	rrf	??_Calibrate_download+2,f
 12692  0256  0CCC               	rrf	??_Calibrate_download+1,f
 12693  0257  0CCB               	rrf	??_Calibrate_download,f
 12694  0258  0BCF               	decfsz	??_Calibrate_download+4,f
 12695  0259  2A54               	goto	u1485
 12696  025A  2A9C               	goto	L27
 12697  025B                     l2741:	
 12698                           ;calibrate_mode.c: 96: case 6:
 12699                           
 12700                           ;calibrate_mode.c: 95: break;
 12701                           
 12702                           
 12703                           ;calibrate_mode.c: 97: spi2_Send_data = (TransLong256To255(calibdata.WorkingCount) >> 16
      +                           & 0x000000ff);
 12704  025B  3004               	movlw	4
 12705  025C  3EC2               	addlw	(low (_calibdata| 0))& (0+255)
 12706  025D  0086               	movwf	6
 12707  025E  0187               	clrf	7
 12708  025F  3F40               	moviw [0]fsr1
 12709  0260  00AF               	movwf	TransLong256To255@data
 12710  0261  3F41               	moviw [1]fsr1
 12711  0262  00B0               	movwf	TransLong256To255@data+1
 12712  0263  3F42               	moviw [2]fsr1
 12713  0264  00B1               	movwf	TransLong256To255@data+2
 12714  0265  3F43               	moviw [3]fsr1
 12715  0266  00B2               	movwf	TransLong256To255@data+3
 12716  0267  3182  22FA  3181   	fcall	_TransLong256To255
 12717  026A  0020               	movlb	0	; select bank0
 12718  026B  082F               	movf	?_TransLong256To255,w
 12719  026C  00CB               	movwf	??_Calibrate_download
 12720  026D  0830               	movf	?_TransLong256To255+1,w
 12721  026E  00CC               	movwf	??_Calibrate_download+1
 12722  026F  0831               	movf	?_TransLong256To255+2,w
 12723  0270  00CD               	movwf	??_Calibrate_download+2
 12724  0271  0832               	movf	?_TransLong256To255+3,w
 12725  0272  00CE               	movwf	??_Calibrate_download+3
 12726  0273  3010               	movlw	16
 12727  0274  00CF               	movwf	??_Calibrate_download+4
 12728  0275                     u1495:	
 12729  0275  37CE               	asrf	??_Calibrate_download+3,f
 12730  0276  0CCD               	rrf	??_Calibrate_download+2,f
 12731  0277  0CCC               	rrf	??_Calibrate_download+1,f
 12732  0278  0CCB               	rrf	??_Calibrate_download,f
 12733  0279  0BCF               	decfsz	??_Calibrate_download+4,f
 12734  027A  2A75               	goto	u1495
 12735  027B  2A9C               	goto	L27
 12736  027C                     l2743:	
 12737                           ;calibrate_mode.c: 99: case 7:
 12738                           
 12739                           ;calibrate_mode.c: 98: break;
 12740                           
 12741                           
 12742                           ;calibrate_mode.c: 100: spi2_Send_data = (TransLong256To255(calibdata.WorkingCount) >> 8
      +                           & 0x000000ff);
 12743  027C  3004               	movlw	4
 12744  027D  3EC2               	addlw	(low (_calibdata| 0))& (0+255)
 12745  027E  0086               	movwf	6
 12746  027F  0187               	clrf	7
 12747  0280  3F40               	moviw [0]fsr1
 12748  0281  00AF               	movwf	TransLong256To255@data
 12749  0282  3F41               	moviw [1]fsr1
 12750  0283  00B0               	movwf	TransLong256To255@data+1
 12751  0284  3F42               	moviw [2]fsr1
 12752  0285  00B1               	movwf	TransLong256To255@data+2
 12753  0286  3F43               	moviw [3]fsr1
 12754  0287  00B2               	movwf	TransLong256To255@data+3
 12755  0288  3182  22FA  3181   	fcall	_TransLong256To255
 12756  028B  0020               	movlb	0	; select bank0
 12757  028C  082F               	movf	?_TransLong256To255,w
 12758  028D  00CB               	movwf	??_Calibrate_download
 12759  028E  0830               	movf	?_TransLong256To255+1,w
 12760  028F  00CC               	movwf	??_Calibrate_download+1
 12761  0290  0831               	movf	?_TransLong256To255+2,w
 12762  0291  00CD               	movwf	??_Calibrate_download+2
 12763  0292  0832               	movf	?_TransLong256To255+3,w
 12764  0293  00CE               	movwf	??_Calibrate_download+3
 12765  0294  3008               	movlw	8
 12766  0295  00CF               	movwf	??_Calibrate_download+4
 12767  0296                     u1505:	
 12768  0296  37CE               	asrf	??_Calibrate_download+3,f
 12769  0297  0CCD               	rrf	??_Calibrate_download+2,f
 12770  0298  0CCC               	rrf	??_Calibrate_download+1,f
 12771  0299  0CCB               	rrf	??_Calibrate_download,f
 12772  029A  0BCF               	decfsz	??_Calibrate_download+4,f
 12773  029B  2A96               	goto	u1505
 12774  029C                     L27:	
 12775  029C  084B               	movf	??_Calibrate_download,w
 12776  029D  00D0               	movwf	??_Calibrate_download+5
 12777  029E  0850               	movf	??_Calibrate_download+5,w
 12778  029F  2AB3               	goto	L24
 12779  02A0                     l2745:	
 12780                           ;calibrate_mode.c: 102: case 8:
 12781                           
 12782                           ;calibrate_mode.c: 101: break;
 12783                           
 12784                           
 12785                           ;calibrate_mode.c: 103: spi2_Send_data = (TransLong256To255(calibdata.WorkingCount) & 0x
      +                          000000ff);
 12786  02A0  3004               	movlw	4
 12787  02A1  3EC2               	addlw	(low (_calibdata| 0))& (0+255)
 12788  02A2  0086               	movwf	6
 12789  02A3  0187               	clrf	7
 12790  02A4  3F40               	moviw [0]fsr1
 12791  02A5  00AF               	movwf	TransLong256To255@data
 12792  02A6  3F41               	moviw [1]fsr1
 12793  02A7  00B0               	movwf	TransLong256To255@data+1
 12794  02A8  3F42               	moviw [2]fsr1
 12795  02A9  00B1               	movwf	TransLong256To255@data+2
 12796  02AA  3F43               	moviw [3]fsr1
 12797  02AB  00B2               	movwf	TransLong256To255@data+3
 12798  02AC  3182  22FA  3181   	fcall	_TransLong256To255
 12799  02AF  0020               	movlb	0	; select bank0
 12800  02B0  082F               	movf	?_TransLong256To255,w
 12801  02B1                     L25:	
 12802  02B1  00CB               	movwf	??_Calibrate_download
 12803  02B2  084B               	movf	??_Calibrate_download,w
 12804  02B3                     L24:	
 12805  02B3  00EB               	movwf	_spi2_Send_data
 12806                           
 12807                           ;calibrate_mode.c: 104: break;
 12808  02B4  2ADB               	goto	l75
 12809  02B5                     l84:	
 12810                           ;calibrate_mode.c: 105: case 9:
 12811                           
 12812                           
 12813                           ;calibrate_mode.c: 107: if(isEndPointTrig == 1){
 12814  02B5  1C7B               	btfss	_isEndPointTrig/(0+8),_isEndPointTrig& (0+7)
 12815  02B6  2ABD               	goto	l85
 12816                           
 12817                           ;calibrate_mode.c: 108: LATAbits.LATA0 = 1;
 12818  02B7  0022               	movlb	2	; select bank2
 12819  02B8  140C               	bsf	12,0	;volatile
 12820                           
 12821                           ;calibrate_mode.c: 109: linkInfo.endpoint = 1;
 12822  02B9  0021               	movlb	1	; select bank1
 12823  02BA  01D0               	clrf	(_linkInfo^(0+128)+5)
 12824  02BB  0AD0               	incf	(_linkInfo^(0+128)+5),f
 12825                           
 12826                           ;calibrate_mode.c: 110: }else{
 12827  02BC  2AC1               	goto	l2751
 12828  02BD                     l85:	
 12829                           
 12830                           ;calibrate_mode.c: 111: LATAbits.LATA0 = 0;
 12831  02BD  0022               	movlb	2	; select bank2
 12832  02BE  100C               	bcf	12,0	;volatile
 12833                           
 12834                           ;calibrate_mode.c: 112: linkInfo.endpoint = 0;
 12835  02BF  0021               	movlb	1	; select bank1
 12836  02C0  01D0               	clrf	(_linkInfo^(0+128)+5)
 12837  02C1                     l2751:	
 12838                           
 12839                           ;calibrate_mode.c: 113: }
 12840                           ;calibrate_mode.c: 114: spi2_Send_data = linkInfo.My_address;
 12841  02C1  084B               	movf	_linkInfo^(0+128),w
 12842  02C2  0020               	movlb	0	; select bank0
 12843  02C3  00CB               	movwf	??_Calibrate_download
 12844  02C4  084B               	movf	??_Calibrate_download,w
 12845  02C5  00EB               	movwf	_spi2_Send_data
 12846                           
 12847                           ;calibrate_mode.c: 115: isEndPointTrig = 0;
 12848  02C6  107B               	bcf	_isEndPointTrig/(0+8),_isEndPointTrig& (0+7)
 12849                           
 12850                           ;calibrate_mode.c: 116: resetCargo();
 12851  02C7  318D  2566  3181   	fcall	_resetCargo
 12852                           
 12853                           ;calibrate_mode.c: 118: }
 12854                           
 12855                           ;calibrate_mode.c: 117: break;
 12856  02CA  2ADB               	goto	l75
 12857  02CB                     l2759:	
 12858                           
 12859                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12860                           ; Switch size 1, requested type "space"
 12861                           ; Number of cases is 1, Range of values is 0 to 0
 12862                           ; switch strategies available:
 12863                           ; Name         Instructions Cycles
 12864                           ; simple_byte            4     3 (average)
 12865                           ; direct_byte            8     6 (fixed)
 12866                           ; jumptable            260     6 (fixed)
 12867                           ;	Chosen strategy is simple_byte
 12868  02CB  0020               	movlb	0	; select bank0
 12869  02CC  0861               	movf	_countabuf+1,w
 12870  02CD  3A00               	xorlw	0	; case 0
 12871  02CE  1903               	skipnz
 12872  02CF  2AD1               	goto	l3625
 12873  02D0  2ADB               	goto	l75
 12874  02D1                     l3625:	
 12875                           
 12876                           ; Switch size 1, requested type "space"
 12877                           ; Number of cases is 10, Range of values is 0 to 9
 12878                           ; switch strategies available:
 12879                           ; Name         Instructions Cycles
 12880                           ; direct_byte           26     6 (fixed)
 12881                           ; simple_byte           31    16 (average)
 12882                           ; jumptable            260     6 (fixed)
 12883                           ;	Chosen strategy is direct_byte
 12884  02D1  0860               	movf	_countabuf,w
 12885  02D2  0084               	movwf	4
 12886  02D3  300A               	movlw	10
 12887  02D4  0204               	subwf	4,w
 12888  02D5  1803               	skipnc
 12889  02D6  2ADB               	goto	l75
 12890  02D7  3188               	movlp	high S3627
 12891  02D8  3504               	lslf	4,w
 12892  02D9  3E20               	addlw	low S3627
 12893  02DA  0082               	movwf	2
 12894  02DB                     l75:	
 12895                           
 12896                           ;calibrate_mode.c: 119: if(isEndPointTrig){
 12897  02DB  1C7B               	btfss	_isEndPointTrig/(0+8),_isEndPointTrig& (0+7)
 12898  02DC  2AE0               	goto	l2763
 12899                           
 12900                           ;calibrate_mode.c: 120: spi2_Send_data = 0x01;
 12901  02DD  0020               	movlb	0	; select bank0
 12902  02DE  01EB               	clrf	_spi2_Send_data
 12903  02DF  0AEB               	incf	_spi2_Send_data,f
 12904  02E0                     l2763:	
 12905                           
 12906                           ;calibrate_mode.c: 121: }
 12907                           ;calibrate_mode.c: 125: countabuf++;
 12908  02E0  3001               	movlw	1
 12909  02E1  0020               	movlb	0	; select bank0
 12910  02E2  07E0               	addwf	_countabuf,f
 12911  02E3  3000               	movlw	0
 12912  02E4  3DE1               	addwfc	_countabuf+1,f
 12913                           
 12914                           ;calibrate_mode.c: 126: if(calibdata.cargoLength <= countabuf){
 12915  02E5  0021               	movlb	1	; select bank1
 12916  02E6  0843               	movf	(_calibdata+1)^(0+128),w
 12917  02E7  0020               	movlb	0	; select bank0
 12918  02E8  0261               	subwf	_countabuf+1,w
 12919  02E9  1D03               	skipz
 12920  02EA  2AEF               	goto	u1535
 12921  02EB  0021               	movlb	1	; select bank1
 12922  02EC  0842               	movf	_calibdata^(0+128),w
 12923  02ED  0020               	movlb	0	; select bank0
 12924  02EE  0260               	subwf	_countabuf,w
 12925  02EF                     u1535:	
 12926  02EF  1C03               	skipc
 12927  02F0  0008               	return
 12928                           
 12929                           ;calibrate_mode.c: 127: calibdata.cargoLength = 0xFFFF;
 12930  02F1  30FF               	movlw	255
 12931  02F2  0021               	movlb	1	; select bank1
 12932  02F3  00C2               	movwf	_calibdata^(0+128)
 12933  02F4  30FF               	movlw	255
 12934  02F5  00C3               	movwf	(_calibdata^(0+128)+1)
 12935                           
 12936                           ;calibrate_mode.c: 128: countabuf = 0;
 12937  02F6  0020               	movlb	0	; select bank0
 12938  02F7  01E0               	clrf	_countabuf
 12939  02F8  01E1               	clrf	_countabuf+1
 12940  02F9  0008               	return
 12941  02FA                     __end_of_Calibrate_download:	
 12942                           
 12943                           	psect	swtext4
 12944  0820                     __pswtext4:	
 12945  0820                     S3627:	
 12946  0820  3181  29F8         	ljmp	l2721
 12947  0822  3182  2A07         	ljmp	l2727
 12948  0824  3182  2A19         	ljmp	l2729
 12949  0826  3182  2A1F         	ljmp	l2731
 12950  0828  3182  2A27         	ljmp	l2733
 12951  082A  3182  2A30         	ljmp	l2737
 12952  082C  3182  2A5B         	ljmp	l2741
 12953  082E  3182  2A7C         	ljmp	l2743
 12954  0830  3182  2AA0         	ljmp	l2745
 12955  0832  3182  2AB5         	ljmp	l84
 12956                           
 12957                           	psect	text13
 12958  0D66                     __ptext13:	
 12959 ;; *************** function _resetCargo *****************
 12960 ;; Defined at:
 12961 ;;		line 25 in file "D:/programdata/16F18346_Hand_IC.X/struct.c"
 12962 ;; Parameters:    Size  Location     Type
 12963 ;;		None
 12964 ;; Auto vars:     Size  Location     Type
 12965 ;;		None
 12966 ;; Return value:  Size  Location     Type
 12967 ;;                  1    wreg      void 
 12968 ;; Registers used:
 12969 ;;		wreg, status,2
 12970 ;; Tracked objects:
 12971 ;;		On entry : 0/0
 12972 ;;		On exit  : 0/0
 12973 ;;		Unchanged: 0/0
 12974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12976 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12978 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12979 ;;Total ram usage:        0 bytes
 12980 ;; Hardware stack levels used:    1
 12981 ;; Hardware stack levels required when called:    3
 12982 ;; This function calls:
 12983 ;;		Nothing
 12984 ;; This function is called by:
 12985 ;;		_Calibrate_download
 12986 ;; This function uses a non-reentrant model
 12987 ;;
 12988                           
 12989                           
 12990                           ;psect for function _resetCargo
 12991  0D66                     _resetCargo:	
 12992                           
 12993                           ;struct.c: 26: cargoData.WorkingCount = 0;
 12994                           
 12995                           ;incstack = 0
 12996                           ; Regs used in _resetCargo: [wreg+status,2]
 12997  0D66  3000               	movlw	0
 12998  0D67  0021               	movlb	1	; select bank1
 12999  0D68  00C1               	movwf	((_cargoData+3)^(0+128)+12)
 13000  0D69  3000               	movlw	0
 13001  0D6A  00C0               	movwf	((_cargoData+2)^(0+128)+12)
 13002  0D6B  3000               	movlw	0
 13003  0D6C  00BF               	movwf	((_cargoData+1)^(0+128)+12)
 13004  0D6D  3000               	movlw	0
 13005  0D6E  00BE               	movwf	(_cargoData^(0+128)+12)
 13006                           
 13007                           ;struct.c: 27: cargoData.address = 0;
 13008  0D6F  01B6               	clrf	(_cargoData^(0+128)+4)
 13009                           
 13010                           ;struct.c: 28: cargoData.cargoLength = 0xFFFF;
 13011  0D70  30FF               	movlw	255
 13012  0D71  00B2               	movwf	_cargoData^(0+128)
 13013  0D72  30FF               	movlw	255
 13014  0D73  00B3               	movwf	(_cargoData^(0+128)+1)
 13015                           
 13016                           ;struct.c: 29: cargoData.clutchMode = 0;
 13017  0D74  01BD               	clrf	(_cargoData^(0+128)+11)
 13018                           
 13019                           ;struct.c: 30: cargoData.command = 0;
 13020  0D75  01B4               	clrf	(_cargoData^(0+128)+2)
 13021                           
 13022                           ;struct.c: 31: cargoData.index = 0;
 13023  0D76  01B5               	clrf	(_cargoData^(0+128)+3)
 13024                           
 13025                           ;struct.c: 32: cargoData.linkAngleTo = 360;
 13026  0D77  3068               	movlw	104
 13027  0D78  00B7               	movwf	(_cargoData^(0+128)+5)
 13028  0D79  3001               	movlw	1
 13029  0D7A  00B8               	movwf	(_cargoData^(0+128)+6)
 13030                           
 13031                           ;struct.c: 33: cargoData.passedTime = 0;
 13032  0D7B  01BB               	clrf	(_cargoData^(0+128)+9)
 13033  0D7C  01BC               	clrf	((_cargoData+1)^(0+128)+9)
 13034  0D7D  0008               	return
 13035  0D7E                     __end_of_resetCargo:	
 13036                           
 13037                           	psect	text14
 13038  0F12                     __ptext14:	
 13039 ;; *************** function _isEndpoint *****************
 13040 ;; Defined at:
 13041 ;;		line 31 in file "D:/programdata/16F18346_Hand_IC.X/calibrate_mode.c"
 13042 ;; Parameters:    Size  Location     Type
 13043 ;;		None
 13044 ;; Auto vars:     Size  Location     Type
 13045 ;;  spi2data        1    6[BANK0 ] unsigned char 
 13046 ;; Return value:  Size  Location     Type
 13047 ;;		None               void
 13048 ;; Registers used:
 13049 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13050 ;; Tracked objects:
 13051 ;;		On entry : 0/0
 13052 ;;		On exit  : 0/0
 13053 ;;		Unchanged: 0/0
 13054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13056 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13057 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13058 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13059 ;;Total ram usage:        6 bytes
 13060 ;; Hardware stack levels used:    1
 13061 ;; Hardware stack levels required when called:    4
 13062 ;; This function calls:
 13063 ;;		_setSPI1sendDataManual
 13064 ;; This function is called by:
 13065 ;;		_Calibrate_download
 13066 ;; This function uses a non-reentrant model
 13067 ;;
 13068                           
 13069                           
 13070                           ;psect for function _isEndpoint
 13071  0F12                     _isEndpoint:	
 13072                           
 13073                           ;calibrate_mode.c: 32: unsigned char spi2data = 0;
 13074                           
 13075                           ;incstack = 0
 13076                           ; Regs used in _isEndpoint: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13077  0F12  0020               	movlb	0	; select bank0
 13078  0F13  01A6               	clrf	isEndpoint@spi2data
 13079                           
 13080                           ;calibrate_mode.c: 33: if(count2 > 1){
 13081  0F14  3000               	movlw	0
 13082  0F15  025F               	subwf	_count2+1,w
 13083  0F16  3002               	movlw	2
 13084  0F17  1903               	skipnz
 13085  0F18  025E               	subwf	_count2,w
 13086  0F19  1C03               	skipc
 13087  0F1A  2F2F               	goto	l2589
 13088                           
 13089                           ;calibrate_mode.c: 34: spi2data = spi2_buffer_data[count2 -1];
 13090  0F1B  085E               	movf	_count2,w
 13091  0F1C  3EFF               	addlw	255
 13092  0F1D  00A1               	movwf	??_isEndpoint
 13093  0F1E  30FF               	movlw	255
 13094  0F1F  3D5F               	addwfc	_count2+1,w
 13095  0F20  00A2               	movwf	??_isEndpoint+1
 13096  0F21  30F0               	movlw	240
 13097  0F22  00A3               	movwf	??_isEndpoint+2
 13098  0F23  3025               	movlw	37
 13099  0F24  00A4               	movwf	??_isEndpoint+3
 13100  0F25  0821               	movf	??_isEndpoint,w
 13101  0F26  0723               	addwf	??_isEndpoint+2,w
 13102  0F27  0086               	movwf	6
 13103  0F28  0822               	movf	??_isEndpoint+1,w
 13104  0F29  3D24               	addwfc	??_isEndpoint+3,w
 13105  0F2A  0087               	movwf	7
 13106  0F2B  0801               	movf	1,w
 13107  0F2C  00A5               	movwf	??_isEndpoint+4
 13108  0F2D  0825               	movf	??_isEndpoint+4,w
 13109  0F2E  2F3C               	goto	L28
 13110  0F2F                     l2589:	
 13111                           ;calibrate_mode.c: 35: }else{
 13112                           
 13113                           
 13114                           ;calibrate_mode.c: 36: spi2data = spi2_buffer_data[count2];
 13115  0F2F  30F0               	movlw	240
 13116  0F30  00A1               	movwf	??_isEndpoint
 13117  0F31  3025               	movlw	37
 13118  0F32  00A2               	movwf	??_isEndpoint+1
 13119  0F33  085E               	movf	_count2,w
 13120  0F34  0721               	addwf	??_isEndpoint,w
 13121  0F35  0086               	movwf	6
 13122  0F36  085F               	movf	_count2+1,w
 13123  0F37  3D22               	addwfc	??_isEndpoint+1,w
 13124  0F38  0087               	movwf	7
 13125  0F39  0801               	movf	1,w
 13126  0F3A  00A3               	movwf	??_isEndpoint+2
 13127  0F3B  0823               	movf	??_isEndpoint+2,w
 13128  0F3C                     L28:	
 13129  0F3C  00A6               	movwf	isEndpoint@spi2data
 13130                           
 13131                           ;calibrate_mode.c: 37: }
 13132                           ;calibrate_mode.c: 38: if(spi2data < 255){
 13133  0F3D  0A26               	incf	isEndpoint@spi2data,w
 13134  0F3E  1903               	btfsc	3,2
 13135  0F3F  2F42               	goto	l2595
 13136                           
 13137                           ;calibrate_mode.c: 39: isEndPointTrig = 0;
 13138  0F40  107B               	bcf	_isEndPointTrig/(0+8),_isEndPointTrig& (0+7)
 13139                           
 13140                           ;calibrate_mode.c: 40: }else{
 13141  0F41  0008               	return
 13142  0F42                     l2595:	
 13143                           
 13144                           ;calibrate_mode.c: 41: setSPI1sendDataManual(0x01);
 13145  0F42  3001               	movlw	1
 13146  0F43  318C  24E7         	fcall	_setSPI1sendDataManual
 13147  0F45  0008               	return
 13148  0F46                     __end_of_isEndpoint:	
 13149                           ;calibrate_mode.c: 42: }
 13150                           ;calibrate_mode.c: 44: return isEndPointTrig;
 13151                           ;	Return value of _isEndpoint is never used
 13152                           
 13153                           
 13154                           	psect	text15
 13155  0CE7                     __ptext15:	
 13156 ;; *************** function _setSPI1sendDataManual *****************
 13157 ;; Defined at:
 13158 ;;		line 102 in file "D:/programdata/16F18346_Hand_IC.X/spiControl.c"
 13159 ;; Parameters:    Size  Location     Type
 13160 ;;  data            1    wreg     unsigned char 
 13161 ;; Auto vars:     Size  Location     Type
 13162 ;;  data            1    0[BANK0 ] unsigned char 
 13163 ;; Return value:  Size  Location     Type
 13164 ;;                  1    wreg      void 
 13165 ;; Registers used:
 13166 ;;		wreg
 13167 ;; Tracked objects:
 13168 ;;		On entry : 0/0
 13169 ;;		On exit  : 0/0
 13170 ;;		Unchanged: 0/0
 13171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13173 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13175 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13176 ;;Total ram usage:        1 bytes
 13177 ;; Hardware stack levels used:    1
 13178 ;; Hardware stack levels required when called:    3
 13179 ;; This function calls:
 13180 ;;		Nothing
 13181 ;; This function is called by:
 13182 ;;		_isEndpoint
 13183 ;; This function uses a non-reentrant model
 13184 ;;
 13185                           
 13186                           
 13187                           ;psect for function _setSPI1sendDataManual
 13188  0CE7                     _setSPI1sendDataManual:	
 13189                           
 13190                           ;incstack = 0
 13191                           ; Regs used in _setSPI1sendDataManual: [wreg]
 13192                           ;setSPI1sendDataManual@data stored from wreg
 13193  0CE7  0020               	movlb	0	; select bank0
 13194  0CE8  00A0               	movwf	setSPI1sendDataManual@data
 13195                           
 13196                           ;spiControl.c: 103: SSP1BUF = data;
 13197  0CE9  0820               	movf	setSPI1sendDataManual@data,w
 13198  0CEA  0024               	movlb	4	; select bank4
 13199  0CEB  0091               	movwf	17	;volatile
 13200  0CEC  0008               	return
 13201  0CED                     __end_of_setSPI1sendDataManual:	
 13202                           
 13203                           	psect	text16
 13204  02FA                     __ptext16:	
 13205 ;; *************** function _TransLong256To255 *****************
 13206 ;; Defined at:
 13207 ;;		line 20 in file "D:/programdata/16F18346_Hand_IC.X/util.c"
 13208 ;; Parameters:    Size  Location     Type
 13209 ;;  data            4   15[BANK0 ] long 
 13210 ;; Auto vars:     Size  Location     Type
 13211 ;;  j               2   27[BANK0 ] int 
 13212 ;;  pow             4   33[BANK0 ] long 
 13213 ;;  buf             4   39[BANK0 ] long 
 13214 ;;  mod             4   29[BANK0 ] long 
 13215 ;;  TransData       4   23[BANK0 ] long 
 13216 ;;  i               2   37[BANK0 ] int 
 13217 ;; Return value:  Size  Location     Type
 13218 ;;                  4   15[BANK0 ] long 
 13219 ;; Registers used:
 13220 ;;		wreg, status,2, status,0, pclath, cstack
 13221 ;; Tracked objects:
 13222 ;;		On entry : 0/0
 13223 ;;		On exit  : 0/0
 13224 ;;		Unchanged: 0/0
 13225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13226 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13227 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13228 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13229 ;;      Totals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13230 ;;Total ram usage:       28 bytes
 13231 ;; Hardware stack levels used:    1
 13232 ;; Hardware stack levels required when called:    4
 13233 ;; This function calls:
 13234 ;;		___aldiv
 13235 ;;		___almod
 13236 ;;		___lmul
 13237 ;; This function is called by:
 13238 ;;		_Calibrate_download
 13239 ;;		_readCargo
 13240 ;; This function uses a non-reentrant model
 13241 ;;
 13242                           
 13243                           
 13244                           ;psect for function _TransLong256To255
 13245  02FA                     _TransLong256To255:	
 13246                           
 13247                           ;util.c: 22: long buf = 0;
 13248                           
 13249                           ;incstack = 0
 13250                           ; Regs used in _TransLong256To255: [wreg+status,2+status,0+pclath+cstack]
 13251  02FA  3000               	movlw	0
 13252  02FB  0020               	movlb	0	; select bank0
 13253  02FC  00CA               	movwf	TransLong256To255@buf+3
 13254  02FD  3000               	movlw	0
 13255  02FE  00C9               	movwf	TransLong256To255@buf+2
 13256  02FF  3000               	movlw	0
 13257  0300  00C8               	movwf	TransLong256To255@buf+1
 13258  0301  3000               	movlw	0
 13259  0302  00C7               	movwf	TransLong256To255@buf
 13260                           
 13261                           ;util.c: 23: buf = data;
 13262  0303  0832               	movf	TransLong256To255@data+3,w
 13263  0304  00CA               	movwf	TransLong256To255@buf+3
 13264  0305  0831               	movf	TransLong256To255@data+2,w
 13265  0306  00C9               	movwf	TransLong256To255@buf+2
 13266  0307  0830               	movf	TransLong256To255@data+1,w
 13267  0308  00C8               	movwf	TransLong256To255@buf+1
 13268  0309  082F               	movf	TransLong256To255@data,w
 13269  030A  00C7               	movwf	TransLong256To255@buf
 13270                           
 13271                           ;util.c: 24: long TransData = 0;
 13272  030B  3000               	movlw	0
 13273  030C  00BA               	movwf	TransLong256To255@TransData+3
 13274  030D  3000               	movlw	0
 13275  030E  00B9               	movwf	TransLong256To255@TransData+2
 13276  030F  3000               	movlw	0
 13277  0310  00B8               	movwf	TransLong256To255@TransData+1
 13278  0311  3000               	movlw	0
 13279  0312  00B7               	movwf	TransLong256To255@TransData
 13280                           
 13281                           ;util.c: 25: long mod = 0;
 13282  0313  3000               	movlw	0
 13283  0314  00C0               	movwf	TransLong256To255@mod+3
 13284  0315  3000               	movlw	0
 13285  0316  00BF               	movwf	TransLong256To255@mod+2
 13286  0317  3000               	movlw	0
 13287  0318  00BE               	movwf	TransLong256To255@mod+1
 13288  0319  3000               	movlw	0
 13289  031A  00BD               	movwf	TransLong256To255@mod
 13290                           
 13291                           ;util.c: 26: int i = 0;
 13292  031B  01C5               	clrf	TransLong256To255@i
 13293  031C  01C6               	clrf	TransLong256To255@i+1
 13294  031D                     l2621:	
 13295                           ;util.c: 27: while(1){
 13296                           
 13297                           
 13298                           ;util.c: 28: if(buf <= 255){
 13299  031D  1BCA               	btfsc	TransLong256To255@buf+3,7
 13300  031E  2B29               	goto	l2623
 13301  031F  084A               	movf	TransLong256To255@buf+3,w
 13302  0320  1D03               	btfss	3,2
 13303  0321  2B31               	goto	l2625
 13304  0322  0849               	movf	TransLong256To255@buf+2,w
 13305  0323  1D03               	btfss	3,2
 13306  0324  2B31               	goto	l2625
 13307  0325  3001               	movlw	1
 13308  0326  0248               	subwf	TransLong256To255@buf+1,w
 13309  0327  1803               	btfsc	3,0
 13310  0328  2B31               	goto	l2625
 13311  0329                     l2623:	
 13312                           
 13313                           ;util.c: 29: mod = buf;
 13314  0329  084A               	movf	TransLong256To255@buf+3,w
 13315  032A  00C0               	movwf	TransLong256To255@mod+3
 13316  032B  0849               	movf	TransLong256To255@buf+2,w
 13317  032C  00BF               	movwf	TransLong256To255@mod+2
 13318  032D  0848               	movf	TransLong256To255@buf+1,w
 13319  032E  00BE               	movwf	TransLong256To255@mod+1
 13320  032F  0847               	movf	TransLong256To255@buf,w
 13321  0330  2B4C               	goto	L29
 13322  0331                     l2625:	
 13323                           ;util.c: 30: }else{
 13324                           
 13325                           
 13326                           ;util.c: 31: mod = buf % 255;
 13327  0331  3000               	movlw	0
 13328  0332  00A3               	movwf	___almod@divisor+3
 13329  0333  3000               	movlw	0
 13330  0334  00A2               	movwf	___almod@divisor+2
 13331  0335  3000               	movlw	0
 13332  0336  00A1               	movwf	___almod@divisor+1
 13333  0337  30FF               	movlw	255
 13334  0338  00A0               	movwf	___almod@divisor
 13335  0339  084A               	movf	TransLong256To255@buf+3,w
 13336  033A  00A7               	movwf	___almod@dividend+3
 13337  033B  0849               	movf	TransLong256To255@buf+2,w
 13338  033C  00A6               	movwf	___almod@dividend+2
 13339  033D  0848               	movf	TransLong256To255@buf+1,w
 13340  033E  00A5               	movwf	___almod@dividend+1
 13341  033F  0847               	movf	TransLong256To255@buf,w
 13342  0340  00A4               	movwf	___almod@dividend
 13343  0341  3185  2532  3182   	fcall	___almod
 13344  0344  0020               	movlb	0	; select bank0
 13345  0345  0823               	movf	?___almod+3,w
 13346  0346  00C0               	movwf	TransLong256To255@mod+3
 13347  0347  0822               	movf	?___almod+2,w
 13348  0348  00BF               	movwf	TransLong256To255@mod+2
 13349  0349  0821               	movf	?___almod+1,w
 13350  034A  00BE               	movwf	TransLong256To255@mod+1
 13351  034B  0820               	movf	?___almod,w
 13352  034C                     L29:	
 13353  034C  00BD               	movwf	TransLong256To255@mod
 13354                           
 13355                           ;util.c: 32: }
 13356                           ;util.c: 33: buf = (int)(buf / 255);
 13357  034D  3000               	movlw	0
 13358  034E  00A3               	movwf	___aldiv@divisor+3
 13359  034F  3000               	movlw	0
 13360  0350  00A2               	movwf	___aldiv@divisor+2
 13361  0351  3000               	movlw	0
 13362  0352  00A1               	movwf	___aldiv@divisor+1
 13363  0353  30FF               	movlw	255
 13364  0354  00A0               	movwf	___aldiv@divisor
 13365  0355  084A               	movf	TransLong256To255@buf+3,w
 13366  0356  00A7               	movwf	___aldiv@dividend+3
 13367  0357  0849               	movf	TransLong256To255@buf+2,w
 13368  0358  00A6               	movwf	___aldiv@dividend+2
 13369  0359  0848               	movf	TransLong256To255@buf+1,w
 13370  035A  00A5               	movwf	___aldiv@dividend+1
 13371  035B  0847               	movf	TransLong256To255@buf,w
 13372  035C  00A4               	movwf	___aldiv@dividend
 13373  035D  3184  24B0  3182   	fcall	___aldiv
 13374  0360  0020               	movlb	0	; select bank0
 13375  0361  0820               	movf	?___aldiv,w
 13376  0362  00C7               	movwf	TransLong256To255@buf
 13377  0363  0821               	movf	?___aldiv+1,w
 13378  0364  00C8               	movwf	TransLong256To255@buf+1
 13379  0365  0D89               	rlf	9,f
 13380  0366  3B89               	subwfb	9,f
 13381  0367  0989               	comf	9,f
 13382  0368  00C9               	movwf	TransLong256To255@buf+2
 13383  0369  00CA               	movwf	TransLong256To255@buf+3
 13384                           
 13385                           ;util.c: 34: long pow = 1;
 13386  036A  3000               	movlw	0
 13387  036B  00C4               	movwf	TransLong256To255@pow+3
 13388  036C  3000               	movlw	0
 13389  036D  00C3               	movwf	TransLong256To255@pow+2
 13390  036E  3000               	movlw	0
 13391  036F  00C2               	movwf	TransLong256To255@pow+1
 13392  0370  3001               	movlw	1
 13393  0371  00C1               	movwf	TransLong256To255@pow
 13394                           
 13395                           ;util.c: 35: if(i > 0){
 13396  0372  0846               	movf	TransLong256To255@i+1,w
 13397  0373  3A80               	xorlw	128
 13398  0374  00B3               	movwf	??_TransLong256To255
 13399  0375  3080               	movlw	128
 13400  0376  0233               	subwf	??_TransLong256To255,w
 13401  0377  1D03               	skipz
 13402  0378  2B7B               	goto	u1405
 13403  0379  3001               	movlw	1
 13404  037A  0245               	subwf	TransLong256To255@i,w
 13405  037B                     u1405:	
 13406  037B  1C03               	skipc
 13407  037C  2BA9               	goto	l2639
 13408                           
 13409                           ;util.c: 36: for(int j = 0; j < i; j++){
 13410  037D  0020               	movlb	0	; select bank0
 13411  037E  01BB               	clrf	TransLong256To255@j
 13412  037F  01BC               	clrf	TransLong256To255@j+1
 13413  0380                     l2637:	
 13414  0380  083C               	movf	TransLong256To255@j+1,w
 13415  0381  3A80               	xorlw	128
 13416  0382  00B3               	movwf	??_TransLong256To255
 13417  0383  0846               	movf	TransLong256To255@i+1,w
 13418  0384  3A80               	xorlw	128
 13419  0385  0233               	subwf	??_TransLong256To255,w
 13420  0386  1D03               	skipz
 13421  0387  2B8A               	goto	u1425
 13422  0388  0845               	movf	TransLong256To255@i,w
 13423  0389  023B               	subwf	TransLong256To255@j,w
 13424  038A                     u1425:	
 13425  038A  1803               	btfsc	3,0
 13426  038B  2BA9               	goto	l2639
 13427                           
 13428                           ;util.c: 37: pow = pow * 256;
 13429  038C  0020               	movlb	0	; select bank0
 13430  038D  0841               	movf	TransLong256To255@pow,w
 13431  038E  00B3               	movwf	??_TransLong256To255
 13432  038F  0842               	movf	TransLong256To255@pow+1,w
 13433  0390  00B4               	movwf	??_TransLong256To255+1
 13434  0391  0843               	movf	TransLong256To255@pow+2,w
 13435  0392  00B5               	movwf	??_TransLong256To255+2
 13436  0393  0844               	movf	TransLong256To255@pow+3,w
 13437  0394  00B6               	movwf	??_TransLong256To255+3
 13438  0395  3008               	movlw	8
 13439  0396                     u1415:	
 13440  0396  35B3               	lslf	??_TransLong256To255,f
 13441  0397  0DB4               	rlf	??_TransLong256To255+1,f
 13442  0398  0DB5               	rlf	??_TransLong256To255+2,f
 13443  0399  0DB6               	rlf	??_TransLong256To255+3,f
 13444  039A  0B89               	decfsz	9,f
 13445  039B  2B96               	goto	u1415
 13446  039C  0836               	movf	??_TransLong256To255+3,w
 13447  039D  00C4               	movwf	TransLong256To255@pow+3
 13448  039E  0835               	movf	??_TransLong256To255+2,w
 13449  039F  00C3               	movwf	TransLong256To255@pow+2
 13450  03A0  0834               	movf	??_TransLong256To255+1,w
 13451  03A1  00C2               	movwf	TransLong256To255@pow+1
 13452  03A2  0833               	movf	??_TransLong256To255,w
 13453  03A3  00C1               	movwf	TransLong256To255@pow
 13454  03A4  3001               	movlw	1
 13455  03A5  07BB               	addwf	TransLong256To255@j,f
 13456  03A6  3000               	movlw	0
 13457  03A7  3DBC               	addwfc	TransLong256To255@j+1,f
 13458  03A8  2B80               	goto	l2637
 13459  03A9                     l2639:	
 13460                           
 13461                           ;util.c: 38: }
 13462                           ;util.c: 39: }
 13463                           ;util.c: 40: TransData += mod * pow;
 13464  03A9  0020               	movlb	0	; select bank0
 13465  03AA  0840               	movf	TransLong256To255@mod+3,w
 13466  03AB  00A3               	movwf	___lmul@multiplier+3
 13467  03AC  083F               	movf	TransLong256To255@mod+2,w
 13468  03AD  00A2               	movwf	___lmul@multiplier+2
 13469  03AE  083E               	movf	TransLong256To255@mod+1,w
 13470  03AF  00A1               	movwf	___lmul@multiplier+1
 13471  03B0  083D               	movf	TransLong256To255@mod,w
 13472  03B1  00A0               	movwf	___lmul@multiplier
 13473  03B2  0844               	movf	TransLong256To255@pow+3,w
 13474  03B3  00A7               	movwf	___lmul@multiplicand+3
 13475  03B4  0843               	movf	TransLong256To255@pow+2,w
 13476  03B5  00A6               	movwf	___lmul@multiplicand+2
 13477  03B6  0842               	movf	TransLong256To255@pow+1,w
 13478  03B7  00A5               	movwf	___lmul@multiplicand+1
 13479  03B8  0841               	movf	TransLong256To255@pow,w
 13480  03B9  00A4               	movwf	___lmul@multiplicand
 13481  03BA  318E  26E2  3182   	fcall	___lmul
 13482  03BD  0020               	movlb	0	; select bank0
 13483  03BE  0820               	movf	?___lmul,w
 13484  03BF  07B7               	addwf	TransLong256To255@TransData,f
 13485  03C0  0821               	movf	?___lmul+1,w
 13486  03C1  3DB8               	addwfc	TransLong256To255@TransData+1,f
 13487  03C2  0822               	movf	?___lmul+2,w
 13488  03C3  3DB9               	addwfc	TransLong256To255@TransData+2,f
 13489  03C4  0823               	movf	?___lmul+3,w
 13490  03C5  3DBA               	addwfc	TransLong256To255@TransData+3,f
 13491                           
 13492                           ;util.c: 41: if(buf <= 255){
 13493  03C6  1BCA               	btfsc	TransLong256To255@buf+3,7
 13494  03C7  2BD7               	goto	l2647
 13495  03C8  084A               	movf	TransLong256To255@buf+3,w
 13496  03C9  1D03               	btfss	3,2
 13497  03CA  2BD2               	goto	l2645
 13498  03CB  0849               	movf	TransLong256To255@buf+2,w
 13499  03CC  1D03               	btfss	3,2
 13500  03CD  2BD2               	goto	l2645
 13501  03CE  3001               	movlw	1
 13502  03CF  0248               	subwf	TransLong256To255@buf+1,w
 13503  03D0  1C03               	btfss	3,0
 13504  03D1  2BD7               	goto	l2647
 13505  03D2                     l2645:	
 13506                           ;util.c: 42: break;
 13507                           
 13508                           
 13509                           ;util.c: 43: }
 13510                           ;util.c: 44: i++;
 13511  03D2  3001               	movlw	1
 13512  03D3  07C5               	addwf	TransLong256To255@i,f
 13513  03D4  3000               	movlw	0
 13514  03D5  3DC6               	addwfc	TransLong256To255@i+1,f
 13515  03D6  2B1D               	goto	l2621
 13516  03D7                     l2647:	
 13517                           
 13518                           ;util.c: 45: }
 13519                           ;util.c: 46: return TransData;
 13520  03D7  083A               	movf	TransLong256To255@TransData+3,w
 13521  03D8  00B2               	movwf	?_TransLong256To255+3
 13522  03D9  0839               	movf	TransLong256To255@TransData+2,w
 13523  03DA  00B1               	movwf	?_TransLong256To255+2
 13524  03DB  0838               	movf	TransLong256To255@TransData+1,w
 13525  03DC  00B0               	movwf	?_TransLong256To255+1
 13526  03DD  0837               	movf	TransLong256To255@TransData,w
 13527  03DE  00AF               	movwf	?_TransLong256To255
 13528  03DF  0008               	return
 13529  03E0                     __end_of_TransLong256To255:	
 13530                           
 13531                           	psect	text17
 13532  0EE2                     __ptext17:	
 13533 ;; *************** function ___lmul *****************
 13534 ;; Defined at:
 13535 ;;		line 15 in file "E:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\Umul32.c"
 13536 ;; Parameters:    Size  Location     Type
 13537 ;;  multiplier      4    0[BANK0 ] unsigned long 
 13538 ;;  multiplicand    4    4[BANK0 ] unsigned long 
 13539 ;; Auto vars:     Size  Location     Type
 13540 ;;  product         4    8[BANK0 ] unsigned long 
 13541 ;; Return value:  Size  Location     Type
 13542 ;;                  4    0[BANK0 ] unsigned long 
 13543 ;; Registers used:
 13544 ;;		wreg, status,2, status,0
 13545 ;; Tracked objects:
 13546 ;;		On entry : 0/0
 13547 ;;		On exit  : 0/0
 13548 ;;		Unchanged: 0/0
 13549 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13550 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13551 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13553 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13554 ;;Total ram usage:       12 bytes
 13555 ;; Hardware stack levels used:    1
 13556 ;; Hardware stack levels required when called:    3
 13557 ;; This function calls:
 13558 ;;		Nothing
 13559 ;; This function is called by:
 13560 ;;		_TransLong256To255
 13561 ;; This function uses a non-reentrant model
 13562 ;;
 13563                           
 13564                           
 13565                           ;psect for function ___lmul
 13566  0EE2                     ___lmul:	
 13567                           
 13568                           ;incstack = 0
 13569                           ; Regs used in ___lmul: [wreg+status,2+status,0]
 13570  0EE2  3000               	movlw	0
 13571  0EE3  0020               	movlb	0	; select bank0
 13572  0EE4  00AB               	movwf	___lmul@product+3
 13573  0EE5  3000               	movlw	0
 13574  0EE6  00AA               	movwf	___lmul@product+2
 13575  0EE7  3000               	movlw	0
 13576  0EE8  00A9               	movwf	___lmul@product+1
 13577  0EE9  3000               	movlw	0
 13578  0EEA  00A8               	movwf	___lmul@product
 13579  0EEB                     l2499:	
 13580  0EEB  1C20               	btfss	___lmul@multiplier,0
 13581  0EEC  2EF5               	goto	l2503
 13582  0EED  0824               	movf	___lmul@multiplicand,w
 13583  0EEE  07A8               	addwf	___lmul@product,f
 13584  0EEF  0825               	movf	___lmul@multiplicand+1,w
 13585  0EF0  3DA9               	addwfc	___lmul@product+1,f
 13586  0EF1  0826               	movf	___lmul@multiplicand+2,w
 13587  0EF2  3DAA               	addwfc	___lmul@product+2,f
 13588  0EF3  0827               	movf	___lmul@multiplicand+3,w
 13589  0EF4  3DAB               	addwfc	___lmul@product+3,f
 13590  0EF5                     l2503:	
 13591  0EF5  3001               	movlw	1
 13592  0EF6                     u1145:	
 13593  0EF6  35A4               	lslf	___lmul@multiplicand,f
 13594  0EF7  0DA5               	rlf	___lmul@multiplicand+1,f
 13595  0EF8  0DA6               	rlf	___lmul@multiplicand+2,f
 13596  0EF9  0DA7               	rlf	___lmul@multiplicand+3,f
 13597  0EFA  0B89               	decfsz	9,f
 13598  0EFB  2EF6               	goto	u1145
 13599  0EFC  3001               	movlw	1
 13600  0EFD                     u1155:	
 13601  0EFD  36A3               	lsrf	___lmul@multiplier+3,f
 13602  0EFE  0CA2               	rrf	___lmul@multiplier+2,f
 13603  0EFF  0CA1               	rrf	___lmul@multiplier+1,f
 13604  0F00  0CA0               	rrf	___lmul@multiplier,f
 13605  0F01  0B89               	decfsz	9,f
 13606  0F02  2EFD               	goto	u1155
 13607  0F03  0823               	movf	___lmul@multiplier+3,w
 13608  0F04  0422               	iorwf	___lmul@multiplier+2,w
 13609  0F05  0421               	iorwf	___lmul@multiplier+1,w
 13610  0F06  0420               	iorwf	___lmul@multiplier,w
 13611  0F07  1D03               	skipz
 13612  0F08  2EEB               	goto	l2499
 13613  0F09  082B               	movf	___lmul@product+3,w
 13614  0F0A  00A3               	movwf	?___lmul+3
 13615  0F0B  082A               	movf	___lmul@product+2,w
 13616  0F0C  00A2               	movwf	?___lmul+2
 13617  0F0D  0829               	movf	___lmul@product+1,w
 13618  0F0E  00A1               	movwf	?___lmul+1
 13619  0F0F  0828               	movf	___lmul@product,w
 13620  0F10  00A0               	movwf	?___lmul
 13621  0F11  0008               	return
 13622  0F12                     __end_of___lmul:	
 13623                           
 13624                           	psect	text18
 13625  0532                     __ptext18:	
 13626 ;; *************** function ___almod *****************
 13627 ;; Defined at:
 13628 ;;		line 5 in file "E:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\almod.c"
 13629 ;; Parameters:    Size  Location     Type
 13630 ;;  divisor         4    0[BANK0 ] long 
 13631 ;;  dividend        4    4[BANK0 ] long 
 13632 ;; Auto vars:     Size  Location     Type
 13633 ;;  sign            1   10[BANK0 ] unsigned char 
 13634 ;;  counter         1    9[BANK0 ] unsigned char 
 13635 ;; Return value:  Size  Location     Type
 13636 ;;                  4    0[BANK0 ] long 
 13637 ;; Registers used:
 13638 ;;		wreg, status,2, status,0
 13639 ;; Tracked objects:
 13640 ;;		On entry : 0/0
 13641 ;;		On exit  : 0/0
 13642 ;;		Unchanged: 0/0
 13643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13644 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13645 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13646 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13647 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13648 ;;Total ram usage:       11 bytes
 13649 ;; Hardware stack levels used:    1
 13650 ;; Hardware stack levels required when called:    3
 13651 ;; This function calls:
 13652 ;;		Nothing
 13653 ;; This function is called by:
 13654 ;;		_TransLong256To255
 13655 ;; This function uses a non-reentrant model
 13656 ;;
 13657                           
 13658                           
 13659                           ;psect for function ___almod
 13660  0532                     ___almod:	
 13661                           
 13662                           ;incstack = 0
 13663                           ; Regs used in ___almod: [wreg+status,2+status,0]
 13664  0532  0020               	movlb	0	; select bank0
 13665  0533  01AA               	clrf	___almod@sign
 13666  0534  1FA7               	btfss	___almod@dividend+3,7
 13667  0535  2D43               	goto	l927
 13668  0536  09A4               	comf	___almod@dividend,f
 13669  0537  09A5               	comf	___almod@dividend+1,f
 13670  0538  09A6               	comf	___almod@dividend+2,f
 13671  0539  09A7               	comf	___almod@dividend+3,f
 13672  053A  0AA4               	incf	___almod@dividend,f
 13673  053B  1903               	skipnz
 13674  053C  0AA5               	incf	___almod@dividend+1,f
 13675  053D  1903               	skipnz
 13676  053E  0AA6               	incf	___almod@dividend+2,f
 13677  053F  1903               	skipnz
 13678  0540  0AA7               	incf	___almod@dividend+3,f
 13679  0541  01AA               	clrf	___almod@sign
 13680  0542  0AAA               	incf	___almod@sign,f
 13681  0543                     l927:	
 13682  0543  1FA3               	btfss	___almod@divisor+3,7
 13683  0544  2D50               	goto	l2559
 13684  0545  09A0               	comf	___almod@divisor,f
 13685  0546  09A1               	comf	___almod@divisor+1,f
 13686  0547  09A2               	comf	___almod@divisor+2,f
 13687  0548  09A3               	comf	___almod@divisor+3,f
 13688  0549  0AA0               	incf	___almod@divisor,f
 13689  054A  1903               	skipnz
 13690  054B  0AA1               	incf	___almod@divisor+1,f
 13691  054C  1903               	skipnz
 13692  054D  0AA2               	incf	___almod@divisor+2,f
 13693  054E  1903               	skipnz
 13694  054F  0AA3               	incf	___almod@divisor+3,f
 13695  0550                     l2559:	
 13696  0550  0823               	movf	___almod@divisor+3,w
 13697  0551  0422               	iorwf	___almod@divisor+2,w
 13698  0552  0421               	iorwf	___almod@divisor+1,w
 13699  0553  0420               	iorwf	___almod@divisor,w
 13700  0554  1903               	skipnz
 13701  0555  2D89               	goto	l2575
 13702  0556  01A9               	clrf	___almod@counter
 13703  0557  0AA9               	incf	___almod@counter,f
 13704  0558                     l2565:	
 13705  0558  1BA3               	btfsc	___almod@divisor+3,7
 13706  0559  2D66               	goto	l2567
 13707  055A  3001               	movlw	1
 13708  055B                     u1305:	
 13709  055B  35A0               	lslf	___almod@divisor,f
 13710  055C  0DA1               	rlf	___almod@divisor+1,f
 13711  055D  0DA2               	rlf	___almod@divisor+2,f
 13712  055E  0DA3               	rlf	___almod@divisor+3,f
 13713  055F  0B89               	decfsz	9,f
 13714  0560  2D5B               	goto	u1305
 13715  0561  3001               	movlw	1
 13716  0562  00A8               	movwf	??___almod
 13717  0563  0828               	movf	??___almod,w
 13718  0564  07A9               	addwf	___almod@counter,f
 13719  0565  2D58               	goto	l2565
 13720  0566                     l2567:	
 13721  0566  0823               	movf	___almod@divisor+3,w
 13722  0567  0227               	subwf	___almod@dividend+3,w
 13723  0568  1D03               	skipz
 13724  0569  2D74               	goto	u1325
 13725  056A  0822               	movf	___almod@divisor+2,w
 13726  056B  0226               	subwf	___almod@dividend+2,w
 13727  056C  1D03               	skipz
 13728  056D  2D74               	goto	u1325
 13729  056E  0821               	movf	___almod@divisor+1,w
 13730  056F  0225               	subwf	___almod@dividend+1,w
 13731  0570  1D03               	skipz
 13732  0571  2D74               	goto	u1325
 13733  0572  0820               	movf	___almod@divisor,w
 13734  0573  0224               	subwf	___almod@dividend,w
 13735  0574                     u1325:	
 13736  0574  1C03               	skipc
 13737  0575  2D7E               	goto	l2571
 13738  0576  0820               	movf	___almod@divisor,w
 13739  0577  02A4               	subwf	___almod@dividend,f
 13740  0578  0821               	movf	___almod@divisor+1,w
 13741  0579  3BA5               	subwfb	___almod@dividend+1,f
 13742  057A  0822               	movf	___almod@divisor+2,w
 13743  057B  3BA6               	subwfb	___almod@dividend+2,f
 13744  057C  0823               	movf	___almod@divisor+3,w
 13745  057D  3BA7               	subwfb	___almod@dividend+3,f
 13746  057E                     l2571:	
 13747  057E  3001               	movlw	1
 13748  057F                     u1335:	
 13749  057F  36A3               	lsrf	___almod@divisor+3,f
 13750  0580  0CA2               	rrf	___almod@divisor+2,f
 13751  0581  0CA1               	rrf	___almod@divisor+1,f
 13752  0582  0CA0               	rrf	___almod@divisor,f
 13753  0583  0B89               	decfsz	9,f
 13754  0584  2D7F               	goto	u1335
 13755  0585  3001               	movlw	1
 13756  0586  02A9               	subwf	___almod@counter,f
 13757  0587  1D03               	btfss	3,2
 13758  0588  2D66               	goto	l2567
 13759  0589                     l2575:	
 13760  0589  082A               	movf	___almod@sign,w
 13761  058A  1903               	btfsc	3,2
 13762  058B  2D97               	goto	l2579
 13763  058C  09A4               	comf	___almod@dividend,f
 13764  058D  09A5               	comf	___almod@dividend+1,f
 13765  058E  09A6               	comf	___almod@dividend+2,f
 13766  058F  09A7               	comf	___almod@dividend+3,f
 13767  0590  0AA4               	incf	___almod@dividend,f
 13768  0591  1903               	skipnz
 13769  0592  0AA5               	incf	___almod@dividend+1,f
 13770  0593  1903               	skipnz
 13771  0594  0AA6               	incf	___almod@dividend+2,f
 13772  0595  1903               	skipnz
 13773  0596  0AA7               	incf	___almod@dividend+3,f
 13774  0597                     l2579:	
 13775  0597  0827               	movf	___almod@dividend+3,w
 13776  0598  00A3               	movwf	?___almod+3
 13777  0599  0826               	movf	___almod@dividend+2,w
 13778  059A  00A2               	movwf	?___almod+2
 13779  059B  0825               	movf	___almod@dividend+1,w
 13780  059C  00A1               	movwf	?___almod+1
 13781  059D  0824               	movf	___almod@dividend,w
 13782  059E  00A0               	movwf	?___almod
 13783  059F  0008               	return
 13784  05A0                     __end_of___almod:	
 13785                           
 13786                           	psect	text19
 13787  04B0                     __ptext19:	
 13788 ;; *************** function ___aldiv *****************
 13789 ;; Defined at:
 13790 ;;		line 6 in file "E:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\aldiv.c"
 13791 ;; Parameters:    Size  Location     Type
 13792 ;;  divisor         4    0[BANK0 ] long 
 13793 ;;  dividend        4    4[BANK0 ] long 
 13794 ;; Auto vars:     Size  Location     Type
 13795 ;;  quotient        4   11[BANK0 ] long 
 13796 ;;  sign            1   10[BANK0 ] unsigned char 
 13797 ;;  counter         1    9[BANK0 ] unsigned char 
 13798 ;; Return value:  Size  Location     Type
 13799 ;;                  4    0[BANK0 ] long 
 13800 ;; Registers used:
 13801 ;;		wreg, status,2, status,0
 13802 ;; Tracked objects:
 13803 ;;		On entry : 0/0
 13804 ;;		On exit  : 0/0
 13805 ;;		Unchanged: 0/0
 13806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13807 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13808 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13809 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13810 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13811 ;;Total ram usage:       15 bytes
 13812 ;; Hardware stack levels used:    1
 13813 ;; Hardware stack levels required when called:    3
 13814 ;; This function calls:
 13815 ;;		Nothing
 13816 ;; This function is called by:
 13817 ;;		_TransLong256To255
 13818 ;; This function uses a non-reentrant model
 13819 ;;
 13820                           
 13821                           
 13822                           ;psect for function ___aldiv
 13823  04B0                     ___aldiv:	
 13824                           
 13825                           ;incstack = 0
 13826                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
 13827  04B0  0020               	movlb	0	; select bank0
 13828  04B1  01AA               	clrf	___aldiv@sign
 13829  04B2  1FA3               	btfss	___aldiv@divisor+3,7
 13830  04B3  2CC1               	goto	l914
 13831  04B4  09A0               	comf	___aldiv@divisor,f
 13832  04B5  09A1               	comf	___aldiv@divisor+1,f
 13833  04B6  09A2               	comf	___aldiv@divisor+2,f
 13834  04B7  09A3               	comf	___aldiv@divisor+3,f
 13835  04B8  0AA0               	incf	___aldiv@divisor,f
 13836  04B9  1903               	skipnz
 13837  04BA  0AA1               	incf	___aldiv@divisor+1,f
 13838  04BB  1903               	skipnz
 13839  04BC  0AA2               	incf	___aldiv@divisor+2,f
 13840  04BD  1903               	skipnz
 13841  04BE  0AA3               	incf	___aldiv@divisor+3,f
 13842  04BF  01AA               	clrf	___aldiv@sign
 13843  04C0  0AAA               	incf	___aldiv@sign,f
 13844  04C1                     l914:	
 13845  04C1  1FA7               	btfss	___aldiv@dividend+3,7
 13846  04C2  2CD2               	goto	l2521
 13847  04C3  09A4               	comf	___aldiv@dividend,f
 13848  04C4  09A5               	comf	___aldiv@dividend+1,f
 13849  04C5  09A6               	comf	___aldiv@dividend+2,f
 13850  04C6  09A7               	comf	___aldiv@dividend+3,f
 13851  04C7  0AA4               	incf	___aldiv@dividend,f
 13852  04C8  1903               	skipnz
 13853  04C9  0AA5               	incf	___aldiv@dividend+1,f
 13854  04CA  1903               	skipnz
 13855  04CB  0AA6               	incf	___aldiv@dividend+2,f
 13856  04CC  1903               	skipnz
 13857  04CD  0AA7               	incf	___aldiv@dividend+3,f
 13858  04CE  3001               	movlw	1
 13859  04CF  00A8               	movwf	??___aldiv
 13860  04D0  0828               	movf	??___aldiv,w
 13861  04D1  06AA               	xorwf	___aldiv@sign,f
 13862  04D2                     l2521:	
 13863  04D2  3000               	movlw	0
 13864  04D3  00AE               	movwf	___aldiv@quotient+3
 13865  04D4  3000               	movlw	0
 13866  04D5  00AD               	movwf	___aldiv@quotient+2
 13867  04D6  3000               	movlw	0
 13868  04D7  00AC               	movwf	___aldiv@quotient+1
 13869  04D8  3000               	movlw	0
 13870  04D9  00AB               	movwf	___aldiv@quotient
 13871  04DA  0823               	movf	___aldiv@divisor+3,w
 13872  04DB  0422               	iorwf	___aldiv@divisor+2,w
 13873  04DC  0421               	iorwf	___aldiv@divisor+1,w
 13874  04DD  0420               	iorwf	___aldiv@divisor,w
 13875  04DE  1903               	skipnz
 13876  04DF  2D1B               	goto	l2543
 13877  04E0  01A9               	clrf	___aldiv@counter
 13878  04E1  0AA9               	incf	___aldiv@counter,f
 13879  04E2                     l2529:	
 13880  04E2  1BA3               	btfsc	___aldiv@divisor+3,7
 13881  04E3  2CF0               	goto	l2531
 13882  04E4  3001               	movlw	1
 13883  04E5                     u1205:	
 13884  04E5  35A0               	lslf	___aldiv@divisor,f
 13885  04E6  0DA1               	rlf	___aldiv@divisor+1,f
 13886  04E7  0DA2               	rlf	___aldiv@divisor+2,f
 13887  04E8  0DA3               	rlf	___aldiv@divisor+3,f
 13888  04E9  0B89               	decfsz	9,f
 13889  04EA  2CE5               	goto	u1205
 13890  04EB  3001               	movlw	1
 13891  04EC  00A8               	movwf	??___aldiv
 13892  04ED  0828               	movf	??___aldiv,w
 13893  04EE  07A9               	addwf	___aldiv@counter,f
 13894  04EF  2CE2               	goto	l2529
 13895  04F0                     l2531:	
 13896  04F0  3001               	movlw	1
 13897  04F1                     u1225:	
 13898  04F1  35AB               	lslf	___aldiv@quotient,f
 13899  04F2  0DAC               	rlf	___aldiv@quotient+1,f
 13900  04F3  0DAD               	rlf	___aldiv@quotient+2,f
 13901  04F4  0DAE               	rlf	___aldiv@quotient+3,f
 13902  04F5  0B89               	decfsz	9,f
 13903  04F6  2CF1               	goto	u1225
 13904  04F7  0823               	movf	___aldiv@divisor+3,w
 13905  04F8  0227               	subwf	___aldiv@dividend+3,w
 13906  04F9  1D03               	skipz
 13907  04FA  2D05               	goto	u1235
 13908  04FB  0822               	movf	___aldiv@divisor+2,w
 13909  04FC  0226               	subwf	___aldiv@dividend+2,w
 13910  04FD  1D03               	skipz
 13911  04FE  2D05               	goto	u1235
 13912  04FF  0821               	movf	___aldiv@divisor+1,w
 13913  0500  0225               	subwf	___aldiv@dividend+1,w
 13914  0501  1D03               	skipz
 13915  0502  2D05               	goto	u1235
 13916  0503  0820               	movf	___aldiv@divisor,w
 13917  0504  0224               	subwf	___aldiv@dividend,w
 13918  0505                     u1235:	
 13919  0505  1C03               	skipc
 13920  0506  2D10               	goto	l2539
 13921  0507  0820               	movf	___aldiv@divisor,w
 13922  0508  02A4               	subwf	___aldiv@dividend,f
 13923  0509  0821               	movf	___aldiv@divisor+1,w
 13924  050A  3BA5               	subwfb	___aldiv@dividend+1,f
 13925  050B  0822               	movf	___aldiv@divisor+2,w
 13926  050C  3BA6               	subwfb	___aldiv@dividend+2,f
 13927  050D  0823               	movf	___aldiv@divisor+3,w
 13928  050E  3BA7               	subwfb	___aldiv@dividend+3,f
 13929  050F  142B               	bsf	___aldiv@quotient,0
 13930  0510                     l2539:	
 13931  0510  3001               	movlw	1
 13932  0511                     u1245:	
 13933  0511  36A3               	lsrf	___aldiv@divisor+3,f
 13934  0512  0CA2               	rrf	___aldiv@divisor+2,f
 13935  0513  0CA1               	rrf	___aldiv@divisor+1,f
 13936  0514  0CA0               	rrf	___aldiv@divisor,f
 13937  0515  0B89               	decfsz	9,f
 13938  0516  2D11               	goto	u1245
 13939  0517  3001               	movlw	1
 13940  0518  02A9               	subwf	___aldiv@counter,f
 13941  0519  1D03               	btfss	3,2
 13942  051A  2CF0               	goto	l2531
 13943  051B                     l2543:	
 13944  051B  082A               	movf	___aldiv@sign,w
 13945  051C  1903               	btfsc	3,2
 13946  051D  2D29               	goto	l2547
 13947  051E  09AB               	comf	___aldiv@quotient,f
 13948  051F  09AC               	comf	___aldiv@quotient+1,f
 13949  0520  09AD               	comf	___aldiv@quotient+2,f
 13950  0521  09AE               	comf	___aldiv@quotient+3,f
 13951  0522  0AAB               	incf	___aldiv@quotient,f
 13952  0523  1903               	skipnz
 13953  0524  0AAC               	incf	___aldiv@quotient+1,f
 13954  0525  1903               	skipnz
 13955  0526  0AAD               	incf	___aldiv@quotient+2,f
 13956  0527  1903               	skipnz
 13957  0528  0AAE               	incf	___aldiv@quotient+3,f
 13958  0529                     l2547:	
 13959  0529  082E               	movf	___aldiv@quotient+3,w
 13960  052A  00A3               	movwf	?___aldiv+3
 13961  052B  082D               	movf	___aldiv@quotient+2,w
 13962  052C  00A2               	movwf	?___aldiv+2
 13963  052D  082C               	movf	___aldiv@quotient+1,w
 13964  052E  00A1               	movwf	?___aldiv+1
 13965  052F  082B               	movf	___aldiv@quotient,w
 13966  0530  00A0               	movwf	?___aldiv
 13967  0531  0008               	return
 13968  0532                     __end_of___aldiv:	
 13969                           
 13970                           	psect	text20
 13971  0EB7                     __ptext20:	
 13972 ;; *************** function _InitCalibrate *****************
 13973 ;; Defined at:
 13974 ;;		line 53 in file "D:/programdata/16F18346_Hand_IC.X/calibrate_mode.c"
 13975 ;; Parameters:    Size  Location     Type
 13976 ;;		None
 13977 ;; Auto vars:     Size  Location     Type
 13978 ;;  cargoData      16   18[BANK0 ] struct .
 13979 ;; Return value:  Size  Location     Type
 13980 ;;                  1    wreg      void 
 13981 ;; Registers used:
 13982 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13983 ;; Tracked objects:
 13984 ;;		On entry : 0/0
 13985 ;;		On exit  : 0/0
 13986 ;;		Unchanged: 0/0
 13987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13988 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13989 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13990 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13991 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13992 ;;Total ram usage:       17 bytes
 13993 ;; Hardware stack levels used:    1
 13994 ;; Hardware stack levels required when called:    4
 13995 ;; This function calls:
 13996 ;;		_getCargoData
 13997 ;; This function is called by:
 13998 ;;		_Calibrate_download
 13999 ;;		_main
 14000 ;; This function uses a non-reentrant model
 14001 ;;
 14002                           
 14003                           
 14004                           ;psect for function _InitCalibrate
 14005  0EB7                     _InitCalibrate:	
 14006                           
 14007                           ;calibrate_mode.c: 54: isEndPointTrig = 1;
 14008                           
 14009                           ;incstack = 0
 14010                           ; Regs used in _InitCalibrate: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14011  0EB7  147B               	bsf	_isEndPointTrig/(0+8),_isEndPointTrig& (0+7)
 14012                           
 14013                           ;calibrate_mode.c: 55: calibdata.cargoLength = 0xFFFF;
 14014  0EB8  30FF               	movlw	255
 14015  0EB9  0021               	movlb	1	; select bank1
 14016  0EBA  00C2               	movwf	_calibdata^(0+128)
 14017  0EBB  30FF               	movlw	255
 14018  0EBC  00C3               	movwf	(_calibdata^(0+128)+1)
 14019                           
 14020                           ;calibrate_mode.c: 56: calibdata.index = 0x00;
 14021  0EBD  01C5               	clrf	(_calibdata^(0+128)+3)
 14022                           
 14023                           ;calibrate_mode.c: 57: calibdata.command =0x00;
 14024  0EBE  01C4               	clrf	(_calibdata^(0+128)+2)
 14025                           
 14026                           ;calibrate_mode.c: 58: calibdata.WorkingCount = 0;
 14027  0EBF  3000               	movlw	0
 14028  0EC0  00C9               	movwf	((_calibdata+3)^(0+128)+4)
 14029  0EC1  3000               	movlw	0
 14030  0EC2  00C8               	movwf	((_calibdata+2)^(0+128)+4)
 14031  0EC3  3000               	movlw	0
 14032  0EC4  00C7               	movwf	((_calibdata+1)^(0+128)+4)
 14033  0EC5  3000               	movlw	0
 14034  0EC6  00C6               	movwf	(_calibdata^(0+128)+4)
 14035                           
 14036                           ;calibrate_mode.c: 59: CargoData cargoData = getCargoData();
 14037  0EC7  318D  2556  318E   	fcall	_getCargoData
 14038  0ECA  0020               	movlb	0	; select bank0
 14039  0ECB  3020               	movlw	low ?_getCargoData
 14040  0ECC  0086               	movwf	6
 14041  0ECD  3000               	movlw	high ?_getCargoData
 14042  0ECE  0087               	movwf	7
 14043  0ECF  3032               	movlw	low InitCalibrate@cargoData
 14044  0ED0  0084               	movwf	4
 14045  0ED1  3000               	movlw	high InitCalibrate@cargoData
 14046  0ED2  0085               	movwf	5
 14047  0ED3  3010               	movlw	16
 14048  0ED4  00B1               	movwf	??_InitCalibrate
 14049  0ED5                     u1380:	
 14050  0ED5  0016               	moviw fsr1++
 14051  0ED6  001A               	movwi fsr0++
 14052  0ED7  0BB1               	decfsz	??_InitCalibrate,f
 14053  0ED8  2ED5               	goto	u1380
 14054                           
 14055                           ;calibrate_mode.c: 60: cargoData.linkAngleTo = 0;
 14056  0ED9  01B7               	clrf	InitCalibrate@cargoData+5
 14057  0EDA  01B8               	clrf	InitCalibrate@cargoData+6
 14058                           
 14059                           ;calibrate_mode.c: 61: linkInfo.endpoint = 0;
 14060  0EDB  0021               	movlb	1	; select bank1
 14061  0EDC  01D0               	clrf	(_linkInfo^(0+128)+5)
 14062                           
 14063                           ;calibrate_mode.c: 62: linkInfo.My_address = 0;
 14064  0EDD  01CB               	clrf	_linkInfo^(0+128)
 14065                           
 14066                           ;calibrate_mode.c: 63: countabuf = 0;
 14067  0EDE  0020               	movlb	0	; select bank0
 14068  0EDF  01E0               	clrf	_countabuf
 14069  0EE0  01E1               	clrf	_countabuf+1
 14070  0EE1  0008               	return
 14071  0EE2                     __end_of_InitCalibrate:	
 14072                           
 14073                           	psect	text21
 14074  0D56                     __ptext21:	
 14075 ;; *************** function _getCargoData *****************
 14076 ;; Defined at:
 14077 ;;		line 8 in file "D:/programdata/16F18346_Hand_IC.X/struct.c"
 14078 ;; Parameters:    Size  Location     Type
 14079 ;;		None
 14080 ;; Auto vars:     Size  Location     Type
 14081 ;;		None
 14082 ;; Return value:  Size  Location     Type
 14083 ;;                  16    0[BANK0 ] struct .
 14084 ;; Registers used:
 14085 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 14086 ;; Tracked objects:
 14087 ;;		On entry : 0/0
 14088 ;;		On exit  : 0/0
 14089 ;;		Unchanged: 0/0
 14090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14091 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14092 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14093 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14094 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14095 ;;Total ram usage:       17 bytes
 14096 ;; Hardware stack levels used:    1
 14097 ;; Hardware stack levels required when called:    3
 14098 ;; This function calls:
 14099 ;;		Nothing
 14100 ;; This function is called by:
 14101 ;;		_InitCalibrate
 14102 ;;		_EEPROM_download
 14103 ;;		_readCargo
 14104 ;;		_setCargo_Angle
 14105 ;; This function uses a non-reentrant model
 14106 ;;
 14107                           
 14108                           
 14109                           ;psect for function _getCargoData
 14110  0D56                     _getCargoData:	
 14111                           
 14112                           ;struct.c: 9: return cargoData;
 14113                           
 14114                           ;incstack = 0
 14115                           ; Regs used in _getCargoData: [wreg-fsr1h+status,2+status,0]
 14116  0D56  30B2               	movlw	low _cargoData
 14117  0D57  0086               	movwf	6
 14118  0D58  3000               	movlw	high _cargoData
 14119  0D59  0087               	movwf	7
 14120  0D5A  3020               	movlw	low ?_getCargoData
 14121  0D5B  0084               	movwf	4
 14122  0D5C  3000               	movlw	high ?_getCargoData
 14123  0D5D  0085               	movwf	5
 14124  0D5E  3010               	movlw	16
 14125  0D5F  0020               	movlb	0	; select bank0
 14126  0D60  00B0               	movwf	??_getCargoData
 14127  0D61                     u1120:	
 14128  0D61  0016               	moviw fsr1++
 14129  0D62  001A               	movwi fsr0++
 14130  0D63  0BB0               	decfsz	??_getCargoData,f
 14131  0D64  2D61               	goto	u1120
 14132  0D65  0008               	return
 14133  0D66                     __end_of_getCargoData:	
 14134                           
 14135                           	psect	text22
 14136  0F46                     __ptext22:	
 14137 ;; *************** function _read_train *****************
 14138 ;; Defined at:
 14139 ;;		line 204 in file "D:/programdata/16F18346_Hand_IC.X/main.c"
 14140 ;; Parameters:    Size  Location     Type
 14141 ;;		None
 14142 ;; Auto vars:     Size  Location     Type
 14143 ;;  bufint          2    2[BANK0 ] unsigned int 
 14144 ;; Return value:  Size  Location     Type
 14145 ;;                  1    wreg      void 
 14146 ;; Registers used:
 14147 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 14148 ;; Tracked objects:
 14149 ;;		On entry : 0/0
 14150 ;;		On exit  : 0/0
 14151 ;;		Unchanged: 0/0
 14152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14153 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14154 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14155 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14156 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14157 ;;Total ram usage:        4 bytes
 14158 ;; Hardware stack levels used:    1
 14159 ;; Hardware stack levels required when called:    3
 14160 ;; This function calls:
 14161 ;;		Nothing
 14162 ;; This function is called by:
 14163 ;;		_main
 14164 ;; This function uses a non-reentrant model
 14165 ;;
 14166                           
 14167                           
 14168                           ;psect for function _read_train
 14169  0F46                     _read_train:	
 14170                           
 14171                           ;main.c: 205: unsigned int bufint = spi1_Read_data;
 14172                           
 14173                           ;incstack = 0
 14174                           ; Regs used in _read_train: [wreg-fsr0h+status,2+status,0]
 14175  0F46  0020               	movlb	0	; select bank0
 14176  0F47  0869               	movf	_spi1_Read_data,w
 14177  0F48  00A0               	movwf	??_read_train
 14178  0F49  01A1               	clrf	??_read_train+1
 14179  0F4A  0820               	movf	??_read_train,w
 14180  0F4B  00A2               	movwf	read_train@bufint
 14181  0F4C  0821               	movf	??_read_train+1,w
 14182  0F4D  00A3               	movwf	read_train@bufint+1
 14183                           
 14184                           ;main.c: 206: switch(trainPos){
 14185  0F4E  2F6F               	goto	l3195
 14186  0F4F                     l3185:	
 14187                           ;main.c: 207: case 1:
 14188                           
 14189                           
 14190                           ;main.c: 208: st_dataLength = (bufint << 8 | 0x00FF);
 14191  0F4F  0020               	movlb	0	; select bank0
 14192  0F50  0822               	movf	read_train@bufint,w
 14193  0F51  00A1               	movwf	??_read_train+1
 14194  0F52  01A0               	clrf	??_read_train
 14195  0F53  30FF               	movlw	255
 14196  0F54  0420               	iorwf	??_read_train,w
 14197  0F55  00ED               	movwf	_st_dataLength
 14198  0F56  3000               	movlw	0
 14199  0F57  0421               	iorwf	??_read_train+1,w
 14200  0F58  00EE               	movwf	_st_dataLength+1
 14201                           
 14202                           ;main.c: 209: break;
 14203  0F59  0008               	return
 14204  0F5A                     l3187:	
 14205                           ;main.c: 210: case 2:
 14206                           
 14207                           
 14208                           ;main.c: 211: st_dataLength = st_dataLength & (bufint | 0xFF00);
 14209  0F5A  3000               	movlw	0
 14210  0F5B  0020               	movlb	0	; select bank0
 14211  0F5C  0422               	iorwf	read_train@bufint,w
 14212  0F5D  00A0               	movwf	??_read_train
 14213  0F5E  30FF               	movlw	255
 14214  0F5F  0423               	iorwf	read_train@bufint+1,w
 14215  0F60  00A1               	movwf	??_read_train+1
 14216  0F61  086D               	movf	_st_dataLength,w
 14217  0F62  0520               	andwf	??_read_train,w
 14218  0F63  00ED               	movwf	_st_dataLength
 14219  0F64  086E               	movf	_st_dataLength+1,w
 14220  0F65  0521               	andwf	??_read_train+1,w
 14221  0F66  00EE               	movwf	_st_dataLength+1
 14222                           
 14223                           ;main.c: 212: break;
 14224  0F67  0008               	return
 14225  0F68                     l3189:	
 14226                           ;main.c: 213: case 3:
 14227                           
 14228                           
 14229                           ;main.c: 214: st_type = spi1_Read_data;
 14230  0F68  0020               	movlb	0	; select bank0
 14231  0F69  0869               	movf	_spi1_Read_data,w
 14232  0F6A  00A0               	movwf	??_read_train
 14233  0F6B  0820               	movf	??_read_train,w
 14234  0F6C  00EC               	movwf	_st_type
 14235                           
 14236                           ;main.c: 215: isreadTrain = 1;
 14237  0F6D  1670               	bsf	_isreadTrain/(0+8),_isreadTrain& (0+7)
 14238                           
 14239                           ;main.c: 219: }
 14240                           
 14241                           ;main.c: 218: break;
 14242                           
 14243                           ;main.c: 217: default :
 14244                           
 14245                           ;main.c: 216: break;
 14246  0F6E  0008               	return
 14247  0F6F                     l3195:	
 14248                           
 14249                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14250                           ; Switch size 1, requested type "space"
 14251                           ; Number of cases is 1, Range of values is 0 to 0
 14252                           ; switch strategies available:
 14253                           ; Name         Instructions Cycles
 14254                           ; simple_byte            4     3 (average)
 14255                           ; direct_byte            8     6 (fixed)
 14256                           ; jumptable            260     6 (fixed)
 14257                           ;	Chosen strategy is simple_byte
 14258  0F6F  0021               	movlb	1	; select bank1
 14259  0F70  0862               	movf	(_trainPos+1)^(0+128),w
 14260  0F71  3A00               	xorlw	0	; case 0
 14261  0F72  1903               	skipnz
 14262  0F73  2F75               	goto	l3629
 14263  0F74  2F80               	goto	l440
 14264  0F75                     l3629:	
 14265                           
 14266                           ; Switch size 1, requested type "space"
 14267                           ; Number of cases is 3, Range of values is 1 to 3
 14268                           ; switch strategies available:
 14269                           ; Name         Instructions Cycles
 14270                           ; simple_byte           10     6 (average)
 14271                           ; direct_byte           15     9 (fixed)
 14272                           ; jumptable            263     9 (fixed)
 14273                           ;	Chosen strategy is simple_byte
 14274  0F75  0861               	movf	_trainPos^(0+128),w
 14275  0F76  3A01               	xorlw	1	; case 1
 14276  0F77  1903               	skipnz
 14277  0F78  2F4F               	goto	l3185
 14278  0F79  3A03               	xorlw	3	; case 2
 14279  0F7A  1903               	skipnz
 14280  0F7B  2F5A               	goto	l3187
 14281  0F7C  3A01               	xorlw	1	; case 3
 14282  0F7D  1903               	skipnz
 14283  0F7E  2F68               	goto	l3189
 14284  0F7F  2F80               	goto	l440
 14285  0F80                     l440:	
 14286  0F80  0008               	return
 14287  0F81                     __end_of_read_train:	
 14288                           
 14289                           	psect	text23
 14290  0D3A                     __ptext23:	
 14291 ;; *************** function _isSPI1read *****************
 14292 ;; Defined at:
 14293 ;;		line 66 in file "D:/programdata/16F18346_Hand_IC.X/spiControl.c"
 14294 ;; Parameters:    Size  Location     Type
 14295 ;;		None
 14296 ;; Auto vars:     Size  Location     Type
 14297 ;;		None
 14298 ;; Return value:  Size  Location     Type
 14299 ;;		None               void
 14300 ;; Registers used:
 14301 ;;		wreg, status,2, status,0
 14302 ;; Tracked objects:
 14303 ;;		On entry : 0/0
 14304 ;;		On exit  : 0/0
 14305 ;;		Unchanged: 0/0
 14306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14308 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14310 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14311 ;;Total ram usage:        0 bytes
 14312 ;; Hardware stack levels used:    1
 14313 ;; Hardware stack levels required when called:    3
 14314 ;; This function calls:
 14315 ;;		Nothing
 14316 ;; This function is called by:
 14317 ;;		_main
 14318 ;; This function uses a non-reentrant model
 14319 ;;
 14320                           
 14321                           
 14322                           ;psect for function _isSPI1read
 14323  0D3A                     _isSPI1read:	
 14324                           
 14325                           ;spiControl.c: 67: if(read_count1 == count1){
 14326                           
 14327                           ;incstack = 0
 14328                           ; Regs used in _isSPI1read: [wreg+status,2+status,0]
 14329  0D3A  0020               	movlb	0	; select bank0
 14330  0D3B  085D               	movf	_count1+1,w
 14331  0D3C  0663               	xorwf	_read_count1+1,w
 14332  0D3D  1D03               	skipz
 14333  0D3E  2D41               	goto	u1835
 14334  0D3F  085C               	movf	_count1,w
 14335  0D40  0662               	xorwf	_read_count1,w
 14336  0D41                     u1835:	
 14337  0D41  1D03               	skipz
 14338  0D42  2D45               	goto	l3179
 14339                           
 14340                           ;spiControl.c: 68: return 1;
 14341  0D43  1403               	setc
 14342                           
 14343                           ;spiControl.c: 69: }else{
 14344  0D44  0008               	return
 14345  0D45                     l3179:	
 14346                           
 14347                           ;spiControl.c: 70: return 0;
 14348  0D45  1003               	clrc
 14349  0D46  0008               	return
 14350  0D47                     __end_of_isSPI1read:	
 14351                           
 14352                           	psect	text24
 14353  0CF6                     __ptext24:	
 14354 ;; *************** function _io_init *****************
 14355 ;; Defined at:
 14356 ;;		line 132 in file "D:/programdata/16F18346_Hand_IC.X/main.c"
 14357 ;; Parameters:    Size  Location     Type
 14358 ;;		None
 14359 ;; Auto vars:     Size  Location     Type
 14360 ;;		None
 14361 ;; Return value:  Size  Location     Type
 14362 ;;                  1    wreg      void 
 14363 ;; Registers used:
 14364 ;;		None
 14365 ;; Tracked objects:
 14366 ;;		On entry : 0/0
 14367 ;;		On exit  : 0/0
 14368 ;;		Unchanged: 0/0
 14369 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14370 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14373 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14374 ;;Total ram usage:        0 bytes
 14375 ;; Hardware stack levels used:    1
 14376 ;; Hardware stack levels required when called:    3
 14377 ;; This function calls:
 14378 ;;		Nothing
 14379 ;; This function is called by:
 14380 ;;		_main
 14381 ;; This function uses a non-reentrant model
 14382 ;;
 14383                           
 14384                           
 14385                           ;psect for function _io_init
 14386  0CF6                     _io_init:	
 14387                           
 14388                           ;main.c: 133: PIE0bits.IOCIE = 1;
 14389                           
 14390                           ;incstack = 0
 14391                           ; Regs used in _io_init: []
 14392  0CF6  0021               	movlb	1	; select bank1
 14393  0CF7  1610               	bsf	16,4	;volatile
 14394                           
 14395                           ;main.c: 134: IOCAPbits.IOCAP3 = 1;
 14396  0CF8  0027               	movlb	7	; select bank7
 14397  0CF9  1591               	bsf	17,3	;volatile
 14398                           
 14399                           ;main.c: 135: IOCANbits.IOCAN3 = 1;
 14400  0CFA  1592               	bsf	18,3	;volatile
 14401                           
 14402                           ;main.c: 136: PIE0bits.INTE = 1;
 14403  0CFB  0021               	movlb	1	; select bank1
 14404  0CFC  1410               	bsf	16,0	;volatile
 14405                           
 14406                           ;main.c: 137: INTCONbits.INTEDG = 1;
 14407  0CFD  140B               	bsf	11,0	;volatile
 14408  0CFE  0008               	return
 14409  0CFF                     __end_of_io_init:	
 14410                           
 14411                           	psect	text25
 14412  0780                     __ptext25:	
 14413 ;; *************** function _initTrain *****************
 14414 ;; Defined at:
 14415 ;;		line 140 in file "D:/programdata/16F18346_Hand_IC.X/main.c"
 14416 ;; Parameters:    Size  Location     Type
 14417 ;;		None
 14418 ;; Auto vars:     Size  Location     Type
 14419 ;;		None
 14420 ;; Return value:  Size  Location     Type
 14421 ;;                  1    wreg      void 
 14422 ;; Registers used:
 14423 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14424 ;; Tracked objects:
 14425 ;;		On entry : 0/0
 14426 ;;		On exit  : 0/0
 14427 ;;		Unchanged: 0/0
 14428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14429 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14430 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14431 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14432 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14433 ;;Total ram usage:        3 bytes
 14434 ;; Hardware stack levels used:    1
 14435 ;; Hardware stack levels required when called:    5
 14436 ;; This function calls:
 14437 ;;		_isTrainSt
 14438 ;;		_resetTrainData
 14439 ;; This function is called by:
 14440 ;;		_main
 14441 ;; This function uses a non-reentrant model
 14442 ;;
 14443                           
 14444                           
 14445                           ;psect for function _initTrain
 14446  0780                     _initTrain:	
 14447                           
 14448                           ;main.c: 141: spi1_Read_data = spi1_buffer_data[read_count1];
 14449                           
 14450                           ;incstack = 0
 14451                           ; Regs used in _initTrain: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14452  0780  30F0               	movlw	240
 14453  0781  0020               	movlb	0	; select bank0
 14454  0782  00AB               	movwf	??_initTrain
 14455  0783  3024               	movlw	36
 14456  0784  00AC               	movwf	??_initTrain+1
 14457  0785  0862               	movf	_read_count1,w
 14458  0786  072B               	addwf	??_initTrain,w
 14459  0787  0086               	movwf	6
 14460  0788  0863               	movf	_read_count1+1,w
 14461  0789  3D2C               	addwfc	??_initTrain+1,w
 14462  078A  0087               	movwf	7
 14463  078B  0801               	movf	1,w
 14464  078C  00AD               	movwf	??_initTrain+2
 14465  078D  082D               	movf	??_initTrain+2,w
 14466  078E  00E9               	movwf	_spi1_Read_data
 14467                           
 14468                           ;main.c: 142: spi2_Send_data = spi1_Read_data;
 14469  078F  0869               	movf	_spi1_Read_data,w
 14470  0790  00AB               	movwf	??_initTrain
 14471  0791  082B               	movf	??_initTrain,w
 14472  0792  00EB               	movwf	_spi2_Send_data
 14473                           
 14474                           ;main.c: 143: read_count1++;
 14475  0793  3001               	movlw	1
 14476  0794  07E2               	addwf	_read_count1,f
 14477  0795  3000               	movlw	0
 14478  0796  3DE3               	addwfc	_read_count1+1,f
 14479                           
 14480                           ;main.c: 144: if(read_count1 == 256){
 14481  0797  0363               	decf	_read_count1+1,w
 14482  0798  0462               	iorwf	_read_count1,w
 14483  0799  1D03               	btfss	3,2
 14484  079A  2F9D               	goto	l3129
 14485                           
 14486                           ;main.c: 145: read_count1 = 0;
 14487  079B  01E2               	clrf	_read_count1
 14488  079C  01E3               	clrf	_read_count1+1
 14489  079D                     l3129:	
 14490                           
 14491                           ;main.c: 146: }
 14492                           ;main.c: 147: if(isTrainSt(spi1_Read_data)){
 14493  079D  0869               	movf	_spi1_Read_data,w
 14494  079E  3186  26E7  3187   	fcall	_isTrainSt
 14495  07A1  1C03               	btfss	3,0
 14496  07A2  2FAE               	goto	l3139
 14497                           
 14498                           ;main.c: 148: trainPos = 0;
 14499  07A3  0021               	movlb	1	; select bank1
 14500  07A4  01E1               	clrf	_trainPos^(0+128)
 14501  07A5  01E2               	clrf	(_trainPos+1)^(0+128)
 14502                           
 14503                           ;main.c: 149: resetTrainData();
 14504  07A6  318C  24ED  3187   	fcall	_resetTrainData
 14505                           
 14506                           ;main.c: 150: isreadTrain = 0;
 14507  07A9  1270               	bcf	_isreadTrain/(0+8),_isreadTrain& (0+7)
 14508                           
 14509                           ;main.c: 151: countabuf = 0;
 14510  07AA  0020               	movlb	0	; select bank0
 14511  07AB  01E0               	clrf	_countabuf
 14512  07AC  01E1               	clrf	_countabuf+1
 14513                           
 14514                           ;main.c: 152: }else{
 14515  07AD  2FB3               	goto	l408
 14516  07AE                     l3139:	
 14517                           
 14518                           ;main.c: 153: trainPos++;
 14519  07AE  3001               	movlw	1
 14520  07AF  0021               	movlb	1	; select bank1
 14521  07B0  07E1               	addwf	_trainPos^(0+128),f
 14522  07B1  3000               	movlw	0
 14523  07B2  3DE2               	addwfc	(_trainPos+1)^(0+128),f
 14524  07B3                     l408:	
 14525                           
 14526                           ;main.c: 154: }
 14527                           ;main.c: 155: if(st_dataLength < trainPos){
 14528  07B3  0021               	movlb	1	; select bank1
 14529  07B4  0862               	movf	(_trainPos+1)^(0+128),w
 14530  07B5  0020               	movlb	0	; select bank0
 14531  07B6  026E               	subwf	_st_dataLength+1,w
 14532  07B7  1D03               	skipz
 14533  07B8  2FBD               	goto	u1825
 14534  07B9  0021               	movlb	1	; select bank1
 14535  07BA  0861               	movf	_trainPos^(0+128),w
 14536  07BB  0020               	movlb	0	; select bank0
 14537  07BC  026D               	subwf	_st_dataLength,w
 14538  07BD                     u1825:	
 14539  07BD  1803               	skipnc
 14540  07BE  0008               	return
 14541                           
 14542                           ;main.c: 156: trainPos = 0;
 14543  07BF  0021               	movlb	1	; select bank1
 14544  07C0  01E1               	clrf	_trainPos^(0+128)
 14545  07C1  01E2               	clrf	(_trainPos+1)^(0+128)
 14546                           
 14547                           ;main.c: 157: resetTrainData();
 14548  07C2  318C  24ED         	fcall	_resetTrainData
 14549                           
 14550                           ;main.c: 158: isreadTrain = 0;
 14551  07C4  1270               	bcf	_isreadTrain/(0+8),_isreadTrain& (0+7)
 14552                           
 14553                           ;main.c: 159: countabuf = 0;
 14554  07C5  0020               	movlb	0	; select bank0
 14555  07C6  01E0               	clrf	_countabuf
 14556  07C7  01E1               	clrf	_countabuf+1
 14557  07C8  0008               	return
 14558  07C9                     __end_of_initTrain:	
 14559                           
 14560                           	psect	text26
 14561  0CED                     __ptext26:	
 14562 ;; *************** function _resetTrainData *****************
 14563 ;; Defined at:
 14564 ;;		line 186 in file "D:/programdata/16F18346_Hand_IC.X/main.c"
 14565 ;; Parameters:    Size  Location     Type
 14566 ;;		None
 14567 ;; Auto vars:     Size  Location     Type
 14568 ;;		None
 14569 ;; Return value:  Size  Location     Type
 14570 ;;                  1    wreg      void 
 14571 ;; Registers used:
 14572 ;;		wreg, status,2, status,0, pclath, cstack
 14573 ;; Tracked objects:
 14574 ;;		On entry : 0/0
 14575 ;;		On exit  : 0/0
 14576 ;;		Unchanged: 0/0
 14577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14578 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14581 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14582 ;;Total ram usage:        0 bytes
 14583 ;; Hardware stack levels used:    1
 14584 ;; Hardware stack levels required when called:    4
 14585 ;; This function calls:
 14586 ;;		_restartCargo
 14587 ;; This function is called by:
 14588 ;;		_initTrain
 14589 ;; This function uses a non-reentrant model
 14590 ;;
 14591                           
 14592                           
 14593                           ;psect for function _resetTrainData
 14594  0CED                     _resetTrainData:	
 14595                           
 14596                           ;main.c: 187: st_dataLength = 0xFFFF;
 14597                           
 14598                           ;incstack = 0
 14599                           ; Regs used in _resetTrainData: [wreg+status,2+status,0+pclath+cstack]
 14600  0CED  30FF               	movlw	255
 14601  0CEE  0020               	movlb	0	; select bank0
 14602  0CEF  00ED               	movwf	_st_dataLength
 14603  0CF0  30FF               	movlw	255
 14604  0CF1  00EE               	movwf	_st_dataLength+1
 14605                           
 14606                           ;main.c: 188: st_type = 0;
 14607  0CF2  01EC               	clrf	_st_type
 14608                           
 14609                           ;main.c: 189: restartCargo();
 14610  0CF3  318C  24D6         	fcall	_restartCargo
 14611  0CF5  0008               	return
 14612  0CF6                     __end_of_resetTrainData:	
 14613                           
 14614                           	psect	text27
 14615  0CD6                     __ptext27:	
 14616 ;; *************** function _restartCargo *****************
 14617 ;; Defined at:
 14618 ;;		line 36 in file "D:/programdata/16F18346_Hand_IC.X/struct.c"
 14619 ;; Parameters:    Size  Location     Type
 14620 ;;		None
 14621 ;; Auto vars:     Size  Location     Type
 14622 ;;		None
 14623 ;; Return value:  Size  Location     Type
 14624 ;;                  1    wreg      void 
 14625 ;; Registers used:
 14626 ;;		status,2
 14627 ;; Tracked objects:
 14628 ;;		On entry : 0/0
 14629 ;;		On exit  : 0/0
 14630 ;;		Unchanged: 0/0
 14631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14633 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14635 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14636 ;;Total ram usage:        0 bytes
 14637 ;; Hardware stack levels used:    1
 14638 ;; Hardware stack levels required when called:    3
 14639 ;; This function calls:
 14640 ;;		Nothing
 14641 ;; This function is called by:
 14642 ;;		_EEPROM_download
 14643 ;;		_resetTrainData
 14644 ;;		_readCargo
 14645 ;; This function uses a non-reentrant model
 14646 ;;
 14647                           
 14648                           
 14649                           ;psect for function _restartCargo
 14650  0CD6                     _restartCargo:	
 14651                           
 14652                           ;struct.c: 37: cargoData.address = 0;
 14653                           
 14654                           ;incstack = 0
 14655                           ; Regs used in _restartCargo: [status,2]
 14656  0CD6  0021               	movlb	1	; select bank1
 14657  0CD7  01B6               	clrf	(_cargoData^(0+128)+4)
 14658                           
 14659                           ;struct.c: 38: cargoData.command = 0;
 14660  0CD8  01B4               	clrf	(_cargoData^(0+128)+2)
 14661                           
 14662                           ;struct.c: 39: cargoData.index = 0;
 14663  0CD9  01B5               	clrf	(_cargoData^(0+128)+3)
 14664  0CDA  0008               	return
 14665  0CDB                     __end_of_restartCargo:	
 14666                           
 14667                           	psect	text28
 14668  06E7                     __ptext28:	
 14669 ;; *************** function _isTrainSt *****************
 14670 ;; Defined at:
 14671 ;;		line 192 in file "D:/programdata/16F18346_Hand_IC.X/main.c"
 14672 ;; Parameters:    Size  Location     Type
 14673 ;;  buf             1    wreg     unsigned char 
 14674 ;; Auto vars:     Size  Location     Type
 14675 ;;  buf             1   10[BANK0 ] unsigned char 
 14676 ;; Return value:  Size  Location     Type
 14677 ;;		None               void
 14678 ;; Registers used:
 14679 ;;		wreg, status,2, status,0
 14680 ;; Tracked objects:
 14681 ;;		On entry : 0/0
 14682 ;;		On exit  : 0/0
 14683 ;;		Unchanged: 0/0
 14684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14685 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14686 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14687 ;;      Temps:          0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14688 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14689 ;;Total ram usage:       11 bytes
 14690 ;; Hardware stack levels used:    1
 14691 ;; Hardware stack levels required when called:    3
 14692 ;; This function calls:
 14693 ;;		Nothing
 14694 ;; This function is called by:
 14695 ;;		_initTrain
 14696 ;; This function uses a non-reentrant model
 14697 ;;
 14698                           
 14699                           
 14700                           ;psect for function _isTrainSt
 14701  06E7                     _isTrainSt:	
 14702                           
 14703                           ;incstack = 0
 14704                           ; Regs used in _isTrainSt: [wreg+status,2+status,0]
 14705                           ;isTrainSt@buf stored from wreg
 14706  06E7  0020               	movlb	0	; select bank0
 14707  06E8  00AA               	movwf	isTrainSt@buf
 14708                           
 14709                           ;main.c: 193: startTrainBytes = startTrainBytes << 8 | (buf +SPI_OFFSET_BYTE);
 14710  06E9  082A               	movf	isTrainSt@buf,w
 14711  06EA  077D               	addwf	_SPI_OFFSET_BYTE,w
 14712  06EB  00A0               	movwf	??_isTrainSt
 14713  06EC  01A1               	clrf	??_isTrainSt+1
 14714  06ED  0DA1               	rlf	??_isTrainSt+1,f
 14715  06EE  0820               	movf	??_isTrainSt,w
 14716  06EF  00A2               	movwf	??_isTrainSt+2
 14717  06F0  0821               	movf	??_isTrainSt+1,w
 14718  06F1  00A3               	movwf	??_isTrainSt+3
 14719  06F2  3000               	movlw	0
 14720  06F3  1BA3               	btfsc	??_isTrainSt+3,7
 14721  06F4  30FF               	movlw	255
 14722  06F5  00A4               	movwf	??_isTrainSt+4
 14723  06F6  00A5               	movwf	??_isTrainSt+5
 14724  06F7  0021               	movlb	1	; select bank1
 14725  06F8  0851               	movf	_startTrainBytes^(0+128),w
 14726  06F9  0020               	movlb	0	; select bank0
 14727  06FA  00A6               	movwf	??_isTrainSt+6
 14728  06FB  0021               	movlb	1	; select bank1
 14729  06FC  0852               	movf	(_startTrainBytes+1)^(0+128),w
 14730  06FD  0020               	movlb	0	; select bank0
 14731  06FE  00A7               	movwf	??_isTrainSt+7
 14732  06FF  0021               	movlb	1	; select bank1
 14733  0700  0853               	movf	(_startTrainBytes+2)^(0+128),w
 14734  0701  0020               	movlb	0	; select bank0
 14735  0702  00A8               	movwf	??_isTrainSt+8
 14736  0703  0021               	movlb	1	; select bank1
 14737  0704  0854               	movf	(_startTrainBytes+3)^(0+128),w
 14738  0705  0020               	movlb	0	; select bank0
 14739  0706  00A9               	movwf	??_isTrainSt+9
 14740  0707  3008               	movlw	8
 14741  0708                     u1725:	
 14742  0708  35A6               	lslf	??_isTrainSt+6,f
 14743  0709  0DA7               	rlf	??_isTrainSt+7,f
 14744  070A  0DA8               	rlf	??_isTrainSt+8,f
 14745  070B  0DA9               	rlf	??_isTrainSt+9,f
 14746  070C  0B89               	decfsz	9,f
 14747  070D  2F08               	goto	u1725
 14748  070E  0826               	movf	??_isTrainSt+6,w
 14749  070F  04A2               	iorwf	??_isTrainSt+2,f
 14750  0710  0827               	movf	??_isTrainSt+7,w
 14751  0711  04A3               	iorwf	??_isTrainSt+3,f
 14752  0712  0828               	movf	??_isTrainSt+8,w
 14753  0713  04A4               	iorwf	??_isTrainSt+4,f
 14754  0714  0829               	movf	??_isTrainSt+9,w
 14755  0715  04A5               	iorwf	??_isTrainSt+5,f
 14756  0716  0825               	movf	??_isTrainSt+5,w
 14757  0717  0021               	movlb	1	; select bank1
 14758  0718  00D4               	movwf	(_startTrainBytes+3)^(0+128)
 14759  0719  0020               	movlb	0	; select bank0
 14760  071A  0824               	movf	??_isTrainSt+4,w
 14761  071B  0021               	movlb	1	; select bank1
 14762  071C  00D3               	movwf	(_startTrainBytes+2)^(0+128)
 14763  071D  0020               	movlb	0	; select bank0
 14764  071E  0823               	movf	??_isTrainSt+3,w
 14765  071F  0021               	movlb	1	; select bank1
 14766  0720  00D2               	movwf	(_startTrainBytes+1)^(0+128)
 14767  0721  0020               	movlb	0	; select bank0
 14768  0722  0822               	movf	??_isTrainSt+2,w
 14769  0723  0021               	movlb	1	; select bank1
 14770  0724  00D1               	movwf	_startTrainBytes^(0+128)
 14771                           
 14772                           ;main.c: 194: if(startTrainBytes == 0xFFFFFFFF){
 14773  0725  0A51               	incf	_startTrainBytes^(0+128),w
 14774  0726  1D03               	skipz
 14775  0727  2F33               	goto	l2935
 14776  0728  0A52               	incf	(_startTrainBytes+1)^(0+128),w
 14777  0729  1D03               	skipz
 14778  072A  2F33               	goto	l2935
 14779  072B  0A53               	incf	(_startTrainBytes+2)^(0+128),w
 14780  072C  1D03               	skipz
 14781  072D  2F33               	goto	l2935
 14782  072E  0A54               	incf	(_startTrainBytes+3)^(0+128),w
 14783  072F  1D03               	btfss	3,2
 14784  0730  2F33               	goto	l2935
 14785                           
 14786                           ;main.c: 195: return 1;
 14787  0731  1403               	setc
 14788                           
 14789                           ;main.c: 196: }else{
 14790  0732  0008               	return
 14791  0733                     l2935:	
 14792                           
 14793                           ;main.c: 197: return 0;
 14794  0733  1003               	clrc
 14795  0734  0008               	return
 14796  0735                     __end_of_isTrainSt:	
 14797                           
 14798                           	psect	text29
 14799  0E65                     __ptext29:	
 14800 ;; *************** function _initPosition *****************
 14801 ;; Defined at:
 14802 ;;		line 8 in file "D:/programdata/16F18346_Hand_IC.X/cal_position.c"
 14803 ;; Parameters:    Size  Location     Type
 14804 ;;		None
 14805 ;; Auto vars:     Size  Location     Type
 14806 ;;		None
 14807 ;; Return value:  Size  Location     Type
 14808 ;;                  1    wreg      void 
 14809 ;; Registers used:
 14810 ;;		wreg, status,2
 14811 ;; Tracked objects:
 14812 ;;		On entry : 0/0
 14813 ;;		On exit  : 0/0
 14814 ;;		Unchanged: 0/0
 14815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14816 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14817 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14819 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14820 ;;Total ram usage:        0 bytes
 14821 ;; Hardware stack levels used:    1
 14822 ;; Hardware stack levels required when called:    3
 14823 ;; This function calls:
 14824 ;;		Nothing
 14825 ;; This function is called by:
 14826 ;;		_main
 14827 ;; This function uses a non-reentrant model
 14828 ;;
 14829                           
 14830                           
 14831                           ;psect for function _initPosition
 14832  0E65                     _initPosition:	
 14833                           
 14834                           ;cal_position.c: 9: position.moter_lotate = 0;
 14835                           
 14836                           ;incstack = 0
 14837                           ; Regs used in _initPosition: [wreg+status,2]
 14838  0E65  0022               	movlb	2	; select bank2
 14839  0E66  01A0               	clrf	_position^(0+256)
 14840  0E67  01A1               	clrf	(_position+1)^(0+256)
 14841                           
 14842                           ;cal_position.c: 10: position.pos_x = 0;
 14843  0E68  3000               	movlw	0
 14844  0E69  00A2               	movwf	(_position^(0+256)+2)
 14845  0E6A  3000               	movlw	0
 14846  0E6B  00A3               	movwf	((_position+1)^(0+256)+2)
 14847  0E6C  3000               	movlw	0
 14848  0E6D  00A4               	movwf	((_position+2)^(0+256)+2)
 14849                           
 14850                           ;cal_position.c: 11: position.pos_y = 0;
 14851  0E6E  3000               	movlw	0
 14852  0E6F  00A5               	movwf	(_position^(0+256)+5)
 14853  0E70  3000               	movlw	0
 14854  0E71  00A6               	movwf	((_position+1)^(0+256)+5)
 14855  0E72  3000               	movlw	0
 14856  0E73  00A7               	movwf	((_position+2)^(0+256)+5)
 14857                           
 14858                           ;cal_position.c: 12: position.pos_z = 0;
 14859  0E74  3000               	movlw	0
 14860  0E75  00A8               	movwf	(_position^(0+256)+8)
 14861  0E76  3000               	movlw	0
 14862  0E77  00A9               	movwf	((_position+1)^(0+256)+8)
 14863  0E78  3000               	movlw	0
 14864  0E79  00AA               	movwf	((_position+2)^(0+256)+8)
 14865                           
 14866                           ;cal_position.c: 13: position.rotate_x = 0;
 14867  0E7A  3000               	movlw	0
 14868  0E7B  00AB               	movwf	(_position^(0+256)+11)
 14869  0E7C  3000               	movlw	0
 14870  0E7D  00AC               	movwf	((_position+1)^(0+256)+11)
 14871  0E7E  3000               	movlw	0
 14872  0E7F  00AD               	movwf	((_position+2)^(0+256)+11)
 14873                           
 14874                           ;cal_position.c: 14: position.rotate_y = 0;
 14875  0E80  3000               	movlw	0
 14876  0E81  00AE               	movwf	(_position^(0+256)+14)
 14877  0E82  3000               	movlw	0
 14878  0E83  00AF               	movwf	((_position+1)^(0+256)+14)
 14879  0E84  3000               	movlw	0
 14880  0E85  00B0               	movwf	((_position+2)^(0+256)+14)
 14881                           
 14882                           ;cal_position.c: 15: position.rotate_z = 0;
 14883  0E86  3000               	movlw	0
 14884  0E87  00B1               	movwf	(_position^(0+256)+17)
 14885  0E88  3000               	movlw	0
 14886  0E89  00B2               	movwf	((_position+1)^(0+256)+17)
 14887  0E8A  3000               	movlw	0
 14888  0E8B  00B3               	movwf	((_position+2)^(0+256)+17)
 14889  0E8C  0008               	return
 14890  0E8D                     __end_of_initPosition:	
 14891                           
 14892                           	psect	text30
 14893  05A0                     __ptext30:	
 14894 ;; *************** function _initIndex *****************
 14895 ;; Defined at:
 14896 ;;		line 11 in file "D:/programdata/16F18346_Hand_IC.X/index.c"
 14897 ;; Parameters:    Size  Location     Type
 14898 ;;		None
 14899 ;; Auto vars:     Size  Location     Type
 14900 ;;		None
 14901 ;; Return value:  Size  Location     Type
 14902 ;;                  1    wreg      void 
 14903 ;; Registers used:
 14904 ;;		wreg
 14905 ;; Tracked objects:
 14906 ;;		On entry : 0/0
 14907 ;;		On exit  : 0/0
 14908 ;;		Unchanged: 0/0
 14909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14912 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14913 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14914 ;;Total ram usage:        1 bytes
 14915 ;; Hardware stack levels used:    1
 14916 ;; Hardware stack levels required when called:    3
 14917 ;; This function calls:
 14918 ;;		Nothing
 14919 ;; This function is called by:
 14920 ;;		_main
 14921 ;; This function uses a non-reentrant model
 14922 ;;
 14923                           
 14924                           
 14925                           ;psect for function _initIndex
 14926  05A0                     _initIndex:	
 14927                           
 14928                           ;index.c: 12: index[0] = 0b00111111;
 14929                           
 14930                           ;incstack = 0
 14931                           ; Regs used in _initIndex: [wreg]
 14932  05A0  303F               	movlw	63
 14933  05A1  0020               	movlb	0	; select bank0
 14934  05A2  00A0               	movwf	??_initIndex
 14935  05A3  0820               	movf	??_initIndex,w
 14936  05A4  0022               	movlb	2	; select bank2
 14937  05A5  00D8               	movwf	_index^(0+256)
 14938                           
 14939                           ;index.c: 13: index[1] = 0b01111111;
 14940  05A6  307F               	movlw	127
 14941  05A7  0020               	movlb	0	; select bank0
 14942  05A8  00A0               	movwf	??_initIndex
 14943  05A9  0820               	movf	??_initIndex,w
 14944  05AA  0022               	movlb	2	; select bank2
 14945  05AB  00D9               	movwf	(_index^(0+256)+1)
 14946                           
 14947                           ;index.c: 14: index[2] = 0b10011111;;
 14948  05AC  309F               	movlw	159
 14949  05AD  0020               	movlb	0	; select bank0
 14950  05AE  00A0               	movwf	??_initIndex
 14951  05AF  0820               	movf	??_initIndex,w
 14952  05B0  0022               	movlb	2	; select bank2
 14953  05B1  00DA               	movwf	(_index^(0+256)+2)
 14954                           
 14955                           ;index.c: 15: index[3] = 0b10101111;
 14956  05B2  30AF               	movlw	175
 14957  05B3  0020               	movlb	0	; select bank0
 14958  05B4  00A0               	movwf	??_initIndex
 14959  05B5  0820               	movf	??_initIndex,w
 14960  05B6  0022               	movlb	2	; select bank2
 14961  05B7  00DB               	movwf	(_index^(0+256)+3)
 14962                           
 14963                           ;index.c: 16: index[4] = 0b10111111;
 14964  05B8  30BF               	movlw	191
 14965  05B9  0020               	movlb	0	; select bank0
 14966  05BA  00A0               	movwf	??_initIndex
 14967  05BB  0820               	movf	??_initIndex,w
 14968  05BC  0022               	movlb	2	; select bank2
 14969  05BD  00DC               	movwf	(_index^(0+256)+4)
 14970                           
 14971                           ;index.c: 17: index[5] = 0b11001111;
 14972  05BE  30CF               	movlw	207
 14973  05BF  0020               	movlb	0	; select bank0
 14974  05C0  00A0               	movwf	??_initIndex
 14975  05C1  0820               	movf	??_initIndex,w
 14976  05C2  0022               	movlb	2	; select bank2
 14977  05C3  00DD               	movwf	(_index^(0+256)+5)
 14978                           
 14979                           ;index.c: 18: index[6] = 0b11010111;
 14980  05C4  30D7               	movlw	215
 14981  05C5  0020               	movlb	0	; select bank0
 14982  05C6  00A0               	movwf	??_initIndex
 14983  05C7  0820               	movf	??_initIndex,w
 14984  05C8  0022               	movlb	2	; select bank2
 14985  05C9  00DE               	movwf	(_index^(0+256)+6)
 14986                           
 14987                           ;index.c: 19: index[7] = 0b11011111;
 14988  05CA  30DF               	movlw	223
 14989  05CB  0020               	movlb	0	; select bank0
 14990  05CC  00A0               	movwf	??_initIndex
 14991  05CD  0820               	movf	??_initIndex,w
 14992  05CE  0022               	movlb	2	; select bank2
 14993  05CF  00DF               	movwf	(_index^(0+256)+7)
 14994                           
 14995                           ;index.c: 20: index[8] = 0b11100111;
 14996  05D0  30E7               	movlw	231
 14997  05D1  0020               	movlb	0	; select bank0
 14998  05D2  00A0               	movwf	??_initIndex
 14999  05D3  0820               	movf	??_initIndex,w
 15000  05D4  0022               	movlb	2	; select bank2
 15001  05D5  00E0               	movwf	(_index^(0+256)+8)
 15002                           
 15003                           ;index.c: 21: index[9] = 0b11101011;
 15004  05D6  30EB               	movlw	235
 15005  05D7  0020               	movlb	0	; select bank0
 15006  05D8  00A0               	movwf	??_initIndex
 15007  05D9  0820               	movf	??_initIndex,w
 15008  05DA  0022               	movlb	2	; select bank2
 15009  05DB  00E1               	movwf	(_index^(0+256)+9)
 15010                           
 15011                           ;index.c: 22: index[10] = 0b11101111;
 15012  05DC  30EF               	movlw	239
 15013  05DD  0020               	movlb	0	; select bank0
 15014  05DE  00A0               	movwf	??_initIndex
 15015  05DF  0820               	movf	??_initIndex,w
 15016  05E0  0022               	movlb	2	; select bank2
 15017  05E1  00E2               	movwf	(_index^(0+256)+10)
 15018                           
 15019                           ;index.c: 23: index[11] = 0b11110001;
 15020  05E2  30F1               	movlw	241
 15021  05E3  0020               	movlb	0	; select bank0
 15022  05E4  00A0               	movwf	??_initIndex
 15023  05E5  0820               	movf	??_initIndex,w
 15024  05E6  0022               	movlb	2	; select bank2
 15025  05E7  00E3               	movwf	(_index^(0+256)+11)
 15026                           
 15027                           ;index.c: 24: index[12] = 0b11110011;
 15028  05E8  30F3               	movlw	243
 15029  05E9  0020               	movlb	0	; select bank0
 15030  05EA  00A0               	movwf	??_initIndex
 15031  05EB  0820               	movf	??_initIndex,w
 15032  05EC  0022               	movlb	2	; select bank2
 15033  05ED  00E4               	movwf	(_index^(0+256)+12)
 15034                           
 15035                           ;index.c: 25: index[13] = 0b11110101;
 15036  05EE  30F5               	movlw	245
 15037  05EF  0020               	movlb	0	; select bank0
 15038  05F0  00A0               	movwf	??_initIndex
 15039  05F1  0820               	movf	??_initIndex,w
 15040  05F2  0022               	movlb	2	; select bank2
 15041  05F3  00E5               	movwf	(_index^(0+256)+13)
 15042                           
 15043                           ;index.c: 26: index[14] = 0b11110111;
 15044  05F4  30F7               	movlw	247
 15045  05F5  0020               	movlb	0	; select bank0
 15046  05F6  00A0               	movwf	??_initIndex
 15047  05F7  0820               	movf	??_initIndex,w
 15048  05F8  0022               	movlb	2	; select bank2
 15049  05F9  00E6               	movwf	(_index^(0+256)+14)
 15050                           
 15051                           ;index.c: 27: index[15] = 0b11111000;
 15052  05FA  30F8               	movlw	248
 15053  05FB  0020               	movlb	0	; select bank0
 15054  05FC  00A0               	movwf	??_initIndex
 15055  05FD  0820               	movf	??_initIndex,w
 15056  05FE  0022               	movlb	2	; select bank2
 15057  05FF  00E7               	movwf	(_index^(0+256)+15)
 15058                           
 15059                           ;index.c: 28: index[16] = 0b11111001;
 15060  0600  30F9               	movlw	249
 15061  0601  0020               	movlb	0	; select bank0
 15062  0602  00A0               	movwf	??_initIndex
 15063  0603  0820               	movf	??_initIndex,w
 15064  0604  0022               	movlb	2	; select bank2
 15065  0605  00E8               	movwf	(_index^(0+256)+16)
 15066                           
 15067                           ;index.c: 29: index[17] = 0b11111010;
 15068  0606  30FA               	movlw	250
 15069  0607  0020               	movlb	0	; select bank0
 15070  0608  00A0               	movwf	??_initIndex
 15071  0609  0820               	movf	??_initIndex,w
 15072  060A  0022               	movlb	2	; select bank2
 15073  060B  00E9               	movwf	(_index^(0+256)+17)
 15074  060C  0008               	return
 15075  060D                     __end_of_initIndex:	
 15076                           
 15077                           	psect	text31
 15078  060D                     __ptext31:	
 15079 ;; *************** function _initComu_types *****************
 15080 ;; Defined at:
 15081 ;;		line 20 in file "D:/programdata/16F18346_Hand_IC.X/comu_type.c"
 15082 ;; Parameters:    Size  Location     Type
 15083 ;;		None
 15084 ;; Auto vars:     Size  Location     Type
 15085 ;;		None
 15086 ;; Return value:  Size  Location     Type
 15087 ;;                  1    wreg      void 
 15088 ;; Registers used:
 15089 ;;		wreg
 15090 ;; Tracked objects:
 15091 ;;		On entry : 0/0
 15092 ;;		On exit  : 0/0
 15093 ;;		Unchanged: 0/0
 15094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15095 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15096 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15097 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15098 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15099 ;;Total ram usage:        1 bytes
 15100 ;; Hardware stack levels used:    1
 15101 ;; Hardware stack levels required when called:    3
 15102 ;; This function calls:
 15103 ;;		Nothing
 15104 ;; This function is called by:
 15105 ;;		_main
 15106 ;; This function uses a non-reentrant model
 15107 ;;
 15108                           
 15109                           
 15110                           ;psect for function _initComu_types
 15111  060D                     _initComu_types:	
 15112                           
 15113                           ;comu_type.c: 21: comu_types[0] = 0b00111111;
 15114                           
 15115                           ;incstack = 0
 15116                           ; Regs used in _initComu_types: [wreg]
 15117  060D  303F               	movlw	63
 15118  060E  0020               	movlb	0	; select bank0
 15119  060F  00A0               	movwf	??_initComu_types
 15120  0610  0820               	movf	??_initComu_types,w
 15121  0611  0022               	movlb	2	; select bank2
 15122  0612  00C6               	movwf	_comu_types^(0+256)
 15123                           
 15124                           ;comu_type.c: 22: comu_types[1] = 0b01111111;
 15125  0613  307F               	movlw	127
 15126  0614  0020               	movlb	0	; select bank0
 15127  0615  00A0               	movwf	??_initComu_types
 15128  0616  0820               	movf	??_initComu_types,w
 15129  0617  0022               	movlb	2	; select bank2
 15130  0618  00C7               	movwf	(_comu_types^(0+256)+1)
 15131                           
 15132                           ;comu_type.c: 23: comu_types[2] = 0b10011111;
 15133  0619  309F               	movlw	159
 15134  061A  0020               	movlb	0	; select bank0
 15135  061B  00A0               	movwf	??_initComu_types
 15136  061C  0820               	movf	??_initComu_types,w
 15137  061D  0022               	movlb	2	; select bank2
 15138  061E  00C8               	movwf	(_comu_types^(0+256)+2)
 15139                           
 15140                           ;comu_type.c: 24: comu_types[3] = 0b10101111;
 15141  061F  30AF               	movlw	175
 15142  0620  0020               	movlb	0	; select bank0
 15143  0621  00A0               	movwf	??_initComu_types
 15144  0622  0820               	movf	??_initComu_types,w
 15145  0623  0022               	movlb	2	; select bank2
 15146  0624  00C9               	movwf	(_comu_types^(0+256)+3)
 15147                           
 15148                           ;comu_type.c: 25: comu_types[4] = 0b10111111;
 15149  0625  30BF               	movlw	191
 15150  0626  0020               	movlb	0	; select bank0
 15151  0627  00A0               	movwf	??_initComu_types
 15152  0628  0820               	movf	??_initComu_types,w
 15153  0629  0022               	movlb	2	; select bank2
 15154  062A  00CA               	movwf	(_comu_types^(0+256)+4)
 15155                           
 15156                           ;comu_type.c: 26: comu_types[5] = 0b11001111;
 15157  062B  30CF               	movlw	207
 15158  062C  0020               	movlb	0	; select bank0
 15159  062D  00A0               	movwf	??_initComu_types
 15160  062E  0820               	movf	??_initComu_types,w
 15161  062F  0022               	movlb	2	; select bank2
 15162  0630  00CB               	movwf	(_comu_types^(0+256)+5)
 15163                           
 15164                           ;comu_type.c: 27: comu_types[6] = 0b11010111;
 15165  0631  30D7               	movlw	215
 15166  0632  0020               	movlb	0	; select bank0
 15167  0633  00A0               	movwf	??_initComu_types
 15168  0634  0820               	movf	??_initComu_types,w
 15169  0635  0022               	movlb	2	; select bank2
 15170  0636  00CC               	movwf	(_comu_types^(0+256)+6)
 15171                           
 15172                           ;comu_type.c: 28: comu_types[7] = 0b11011111;
 15173  0637  30DF               	movlw	223
 15174  0638  0020               	movlb	0	; select bank0
 15175  0639  00A0               	movwf	??_initComu_types
 15176  063A  0820               	movf	??_initComu_types,w
 15177  063B  0022               	movlb	2	; select bank2
 15178  063C  00CD               	movwf	(_comu_types^(0+256)+7)
 15179                           
 15180                           ;comu_type.c: 29: comu_types[8] = 0b11100111;
 15181  063D  30E7               	movlw	231
 15182  063E  0020               	movlb	0	; select bank0
 15183  063F  00A0               	movwf	??_initComu_types
 15184  0640  0820               	movf	??_initComu_types,w
 15185  0641  0022               	movlb	2	; select bank2
 15186  0642  00CE               	movwf	(_comu_types^(0+256)+8)
 15187                           
 15188                           ;comu_type.c: 30: comu_types[9] = 0b11101011;
 15189  0643  30EB               	movlw	235
 15190  0644  0020               	movlb	0	; select bank0
 15191  0645  00A0               	movwf	??_initComu_types
 15192  0646  0820               	movf	??_initComu_types,w
 15193  0647  0022               	movlb	2	; select bank2
 15194  0648  00CF               	movwf	(_comu_types^(0+256)+9)
 15195                           
 15196                           ;comu_type.c: 31: comu_types[10] = 0b11101111;
 15197  0649  30EF               	movlw	239
 15198  064A  0020               	movlb	0	; select bank0
 15199  064B  00A0               	movwf	??_initComu_types
 15200  064C  0820               	movf	??_initComu_types,w
 15201  064D  0022               	movlb	2	; select bank2
 15202  064E  00D0               	movwf	(_comu_types^(0+256)+10)
 15203                           
 15204                           ;comu_type.c: 32: comu_types[11] = 0b11110001;
 15205  064F  30F1               	movlw	241
 15206  0650  0020               	movlb	0	; select bank0
 15207  0651  00A0               	movwf	??_initComu_types
 15208  0652  0820               	movf	??_initComu_types,w
 15209  0653  0022               	movlb	2	; select bank2
 15210  0654  00D1               	movwf	(_comu_types^(0+256)+11)
 15211                           
 15212                           ;comu_type.c: 33: comu_types[12] = 0b11110011;
 15213  0655  30F3               	movlw	243
 15214  0656  0020               	movlb	0	; select bank0
 15215  0657  00A0               	movwf	??_initComu_types
 15216  0658  0820               	movf	??_initComu_types,w
 15217  0659  0022               	movlb	2	; select bank2
 15218  065A  00D2               	movwf	(_comu_types^(0+256)+12)
 15219                           
 15220                           ;comu_type.c: 34: comu_types[13] = 0b11110101;
 15221  065B  30F5               	movlw	245
 15222  065C  0020               	movlb	0	; select bank0
 15223  065D  00A0               	movwf	??_initComu_types
 15224  065E  0820               	movf	??_initComu_types,w
 15225  065F  0022               	movlb	2	; select bank2
 15226  0660  00D3               	movwf	(_comu_types^(0+256)+13)
 15227                           
 15228                           ;comu_type.c: 35: comu_types[14] = 0b11110111;
 15229  0661  30F7               	movlw	247
 15230  0662  0020               	movlb	0	; select bank0
 15231  0663  00A0               	movwf	??_initComu_types
 15232  0664  0820               	movf	??_initComu_types,w
 15233  0665  0022               	movlb	2	; select bank2
 15234  0666  00D4               	movwf	(_comu_types^(0+256)+14)
 15235                           
 15236                           ;comu_type.c: 36: comu_types[15] = 0b11111000;
 15237  0667  30F8               	movlw	248
 15238  0668  0020               	movlb	0	; select bank0
 15239  0669  00A0               	movwf	??_initComu_types
 15240  066A  0820               	movf	??_initComu_types,w
 15241  066B  0022               	movlb	2	; select bank2
 15242  066C  00D5               	movwf	(_comu_types^(0+256)+15)
 15243                           
 15244                           ;comu_type.c: 37: comu_types[16] = 0b11111001;
 15245  066D  30F9               	movlw	249
 15246  066E  0020               	movlb	0	; select bank0
 15247  066F  00A0               	movwf	??_initComu_types
 15248  0670  0820               	movf	??_initComu_types,w
 15249  0671  0022               	movlb	2	; select bank2
 15250  0672  00D6               	movwf	(_comu_types^(0+256)+16)
 15251                           
 15252                           ;comu_type.c: 38: comu_types[17] = 0b11111010;
 15253  0673  30FA               	movlw	250
 15254  0674  0020               	movlb	0	; select bank0
 15255  0675  00A0               	movwf	??_initComu_types
 15256  0676  0820               	movf	??_initComu_types,w
 15257  0677  0022               	movlb	2	; select bank2
 15258  0678  00D7               	movwf	(_comu_types^(0+256)+17)
 15259  0679  0008               	return
 15260  067A                     __end_of_initComu_types:	
 15261                           
 15262                           	psect	text32
 15263  067A                     __ptext32:	
 15264 ;; *************** function _initComand *****************
 15265 ;; Defined at:
 15266 ;;		line 15 in file "D:/programdata/16F18346_Hand_IC.X/command.c"
 15267 ;; Parameters:    Size  Location     Type
 15268 ;;		None
 15269 ;; Auto vars:     Size  Location     Type
 15270 ;;		None
 15271 ;; Return value:  Size  Location     Type
 15272 ;;                  1    wreg      void 
 15273 ;; Registers used:
 15274 ;;		wreg
 15275 ;; Tracked objects:
 15276 ;;		On entry : 0/0
 15277 ;;		On exit  : 0/0
 15278 ;;		Unchanged: 0/0
 15279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15280 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15281 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15282 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15283 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15284 ;;Total ram usage:        1 bytes
 15285 ;; Hardware stack levels used:    1
 15286 ;; Hardware stack levels required when called:    3
 15287 ;; This function calls:
 15288 ;;		Nothing
 15289 ;; This function is called by:
 15290 ;;		_main
 15291 ;; This function uses a non-reentrant model
 15292 ;;
 15293                           
 15294                           
 15295                           ;psect for function _initComand
 15296  067A                     _initComand:	
 15297                           
 15298                           ;command.c: 16: command[0] = 0b00111111;
 15299                           
 15300                           ;incstack = 0
 15301                           ; Regs used in _initComand: [wreg]
 15302  067A  303F               	movlw	63
 15303  067B  0020               	movlb	0	; select bank0
 15304  067C  00A0               	movwf	??_initComand
 15305  067D  0820               	movf	??_initComand,w
 15306  067E  0021               	movlb	1	; select bank1
 15307  067F  00A0               	movwf	_command^(0+128)
 15308                           
 15309                           ;command.c: 17: command[1] = 0b01111111;
 15310  0680  307F               	movlw	127
 15311  0681  0020               	movlb	0	; select bank0
 15312  0682  00A0               	movwf	??_initComand
 15313  0683  0820               	movf	??_initComand,w
 15314  0684  0021               	movlb	1	; select bank1
 15315  0685  00A1               	movwf	(_command^(0+128)+1)
 15316                           
 15317                           ;command.c: 18: command[2] = 0b10011111;;
 15318  0686  309F               	movlw	159
 15319  0687  0020               	movlb	0	; select bank0
 15320  0688  00A0               	movwf	??_initComand
 15321  0689  0820               	movf	??_initComand,w
 15322  068A  0021               	movlb	1	; select bank1
 15323  068B  00A2               	movwf	(_command^(0+128)+2)
 15324                           
 15325                           ;command.c: 19: command[3] = 0b10101111;
 15326  068C  30AF               	movlw	175
 15327  068D  0020               	movlb	0	; select bank0
 15328  068E  00A0               	movwf	??_initComand
 15329  068F  0820               	movf	??_initComand,w
 15330  0690  0021               	movlb	1	; select bank1
 15331  0691  00A3               	movwf	(_command^(0+128)+3)
 15332                           
 15333                           ;command.c: 20: command[4] = 0b10111111;
 15334  0692  30BF               	movlw	191
 15335  0693  0020               	movlb	0	; select bank0
 15336  0694  00A0               	movwf	??_initComand
 15337  0695  0820               	movf	??_initComand,w
 15338  0696  0021               	movlb	1	; select bank1
 15339  0697  00A4               	movwf	(_command^(0+128)+4)
 15340                           
 15341                           ;command.c: 21: command[5] = 0b11001111;
 15342  0698  30CF               	movlw	207
 15343  0699  0020               	movlb	0	; select bank0
 15344  069A  00A0               	movwf	??_initComand
 15345  069B  0820               	movf	??_initComand,w
 15346  069C  0021               	movlb	1	; select bank1
 15347  069D  00A5               	movwf	(_command^(0+128)+5)
 15348                           
 15349                           ;command.c: 22: command[6] = 0b11010111;
 15350  069E  30D7               	movlw	215
 15351  069F  0020               	movlb	0	; select bank0
 15352  06A0  00A0               	movwf	??_initComand
 15353  06A1  0820               	movf	??_initComand,w
 15354  06A2  0021               	movlb	1	; select bank1
 15355  06A3  00A6               	movwf	(_command^(0+128)+6)
 15356                           
 15357                           ;command.c: 23: command[7] = 0b11011111;
 15358  06A4  30DF               	movlw	223
 15359  06A5  0020               	movlb	0	; select bank0
 15360  06A6  00A0               	movwf	??_initComand
 15361  06A7  0820               	movf	??_initComand,w
 15362  06A8  0021               	movlb	1	; select bank1
 15363  06A9  00A7               	movwf	(_command^(0+128)+7)
 15364                           
 15365                           ;command.c: 24: command[8] = 0b11100111;
 15366  06AA  30E7               	movlw	231
 15367  06AB  0020               	movlb	0	; select bank0
 15368  06AC  00A0               	movwf	??_initComand
 15369  06AD  0820               	movf	??_initComand,w
 15370  06AE  0021               	movlb	1	; select bank1
 15371  06AF  00A8               	movwf	(_command^(0+128)+8)
 15372                           
 15373                           ;command.c: 25: command[9] = 0b11101011;
 15374  06B0  30EB               	movlw	235
 15375  06B1  0020               	movlb	0	; select bank0
 15376  06B2  00A0               	movwf	??_initComand
 15377  06B3  0820               	movf	??_initComand,w
 15378  06B4  0021               	movlb	1	; select bank1
 15379  06B5  00A9               	movwf	(_command^(0+128)+9)
 15380                           
 15381                           ;command.c: 26: command[10] = 0b11101111;
 15382  06B6  30EF               	movlw	239
 15383  06B7  0020               	movlb	0	; select bank0
 15384  06B8  00A0               	movwf	??_initComand
 15385  06B9  0820               	movf	??_initComand,w
 15386  06BA  0021               	movlb	1	; select bank1
 15387  06BB  00AA               	movwf	(_command^(0+128)+10)
 15388                           
 15389                           ;command.c: 27: command[11] = 0b11110001;
 15390  06BC  30F1               	movlw	241
 15391  06BD  0020               	movlb	0	; select bank0
 15392  06BE  00A0               	movwf	??_initComand
 15393  06BF  0820               	movf	??_initComand,w
 15394  06C0  0021               	movlb	1	; select bank1
 15395  06C1  00AB               	movwf	(_command^(0+128)+11)
 15396                           
 15397                           ;command.c: 28: command[12] = 0b11110011;
 15398  06C2  30F3               	movlw	243
 15399  06C3  0020               	movlb	0	; select bank0
 15400  06C4  00A0               	movwf	??_initComand
 15401  06C5  0820               	movf	??_initComand,w
 15402  06C6  0021               	movlb	1	; select bank1
 15403  06C7  00AC               	movwf	(_command^(0+128)+12)
 15404                           
 15405                           ;command.c: 29: command[13] = 0b11110101;
 15406  06C8  30F5               	movlw	245
 15407  06C9  0020               	movlb	0	; select bank0
 15408  06CA  00A0               	movwf	??_initComand
 15409  06CB  0820               	movf	??_initComand,w
 15410  06CC  0021               	movlb	1	; select bank1
 15411  06CD  00AD               	movwf	(_command^(0+128)+13)
 15412                           
 15413                           ;command.c: 30: command[14] = 0b11110111;
 15414  06CE  30F7               	movlw	247
 15415  06CF  0020               	movlb	0	; select bank0
 15416  06D0  00A0               	movwf	??_initComand
 15417  06D1  0820               	movf	??_initComand,w
 15418  06D2  0021               	movlb	1	; select bank1
 15419  06D3  00AE               	movwf	(_command^(0+128)+14)
 15420                           
 15421                           ;command.c: 31: command[15] = 0b11111000;
 15422  06D4  30F8               	movlw	248
 15423  06D5  0020               	movlb	0	; select bank0
 15424  06D6  00A0               	movwf	??_initComand
 15425  06D7  0820               	movf	??_initComand,w
 15426  06D8  0021               	movlb	1	; select bank1
 15427  06D9  00AF               	movwf	(_command^(0+128)+15)
 15428                           
 15429                           ;command.c: 32: command[16] = 0b11111001;
 15430  06DA  30F9               	movlw	249
 15431  06DB  0020               	movlb	0	; select bank0
 15432  06DC  00A0               	movwf	??_initComand
 15433  06DD  0820               	movf	??_initComand,w
 15434  06DE  0021               	movlb	1	; select bank1
 15435  06DF  00B0               	movwf	(_command^(0+128)+16)
 15436                           
 15437                           ;command.c: 33: command[17] = 0b11111010;
 15438  06E0  30FA               	movlw	250
 15439  06E1  0020               	movlb	0	; select bank0
 15440  06E2  00A0               	movwf	??_initComand
 15441  06E3  0820               	movf	??_initComand,w
 15442  06E4  0021               	movlb	1	; select bank1
 15443  06E5  00B1               	movwf	(_command^(0+128)+17)
 15444  06E6  0008               	return
 15445  06E7                     __end_of_initComand:	
 15446                           
 15447                           	psect	text33
 15448  0D7E                     __ptext33:	
 15449 ;; *************** function _initCargo *****************
 15450 ;; Defined at:
 15451 ;;		line 14 in file "D:/programdata/16F18346_Hand_IC.X/struct.c"
 15452 ;; Parameters:    Size  Location     Type
 15453 ;;		None
 15454 ;; Auto vars:     Size  Location     Type
 15455 ;;		None
 15456 ;; Return value:  Size  Location     Type
 15457 ;;                  1    wreg      void 
 15458 ;; Registers used:
 15459 ;;		wreg, status,2
 15460 ;; Tracked objects:
 15461 ;;		On entry : 0/0
 15462 ;;		On exit  : 0/0
 15463 ;;		Unchanged: 0/0
 15464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15465 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15466 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15468 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15469 ;;Total ram usage:        0 bytes
 15470 ;; Hardware stack levels used:    1
 15471 ;; Hardware stack levels required when called:    3
 15472 ;; This function calls:
 15473 ;;		Nothing
 15474 ;; This function is called by:
 15475 ;;		_main
 15476 ;; This function uses a non-reentrant model
 15477 ;;
 15478                           
 15479                           
 15480                           ;psect for function _initCargo
 15481  0D7E                     _initCargo:	
 15482                           
 15483                           ;struct.c: 15: isMycargo = 1;
 15484                           
 15485                           ;incstack = 0
 15486                           ; Regs used in _initCargo: [wreg+status,2]
 15487  0D7E  1570               	bsf	_isMycargo/(0+8),_isMycargo& (0+7)
 15488                           
 15489                           ;struct.c: 16: cargoData.WorkingCount = 0;
 15490  0D7F  3000               	movlw	0
 15491  0D80  0021               	movlb	1	; select bank1
 15492  0D81  00C1               	movwf	((_cargoData+3)^(0+128)+12)
 15493  0D82  3000               	movlw	0
 15494  0D83  00C0               	movwf	((_cargoData+2)^(0+128)+12)
 15495  0D84  3000               	movlw	0
 15496  0D85  00BF               	movwf	((_cargoData+1)^(0+128)+12)
 15497  0D86  3000               	movlw	0
 15498  0D87  00BE               	movwf	(_cargoData^(0+128)+12)
 15499                           
 15500                           ;struct.c: 17: cargoData.address = 0;
 15501  0D88  01B6               	clrf	(_cargoData^(0+128)+4)
 15502                           
 15503                           ;struct.c: 18: cargoData.cargoLength = 0xFFFF;
 15504  0D89  30FF               	movlw	255
 15505  0D8A  00B2               	movwf	_cargoData^(0+128)
 15506  0D8B  30FF               	movlw	255
 15507  0D8C  00B3               	movwf	(_cargoData^(0+128)+1)
 15508                           
 15509                           ;struct.c: 19: cargoData.clutchMode = 0;
 15510  0D8D  01BD               	clrf	(_cargoData^(0+128)+11)
 15511                           
 15512                           ;struct.c: 20: cargoData.command = 0;
 15513  0D8E  01B4               	clrf	(_cargoData^(0+128)+2)
 15514                           
 15515                           ;struct.c: 21: cargoData.index = 0;
 15516  0D8F  01B5               	clrf	(_cargoData^(0+128)+3)
 15517                           
 15518                           ;struct.c: 22: cargoData.linkAngleTo = 360;
 15519  0D90  3068               	movlw	104
 15520  0D91  00B7               	movwf	(_cargoData^(0+128)+5)
 15521  0D92  3001               	movlw	1
 15522  0D93  00B8               	movwf	(_cargoData^(0+128)+6)
 15523                           
 15524                           ;struct.c: 23: cargoData.passedTime = 0;
 15525  0D94  01BB               	clrf	(_cargoData^(0+128)+9)
 15526  0D95  01BC               	clrf	((_cargoData+1)^(0+128)+9)
 15527  0D96  0008               	return
 15528  0D97                     __end_of_initCargo:	
 15529                           
 15530                           	psect	text34
 15531  0E3D                     __ptext34:	
 15532 ;; *************** function _init *****************
 15533 ;; Defined at:
 15534 ;;		line 105 in file "D:/programdata/16F18346_Hand_IC.X/main.c"
 15535 ;; Parameters:    Size  Location     Type
 15536 ;;		None
 15537 ;; Auto vars:     Size  Location     Type
 15538 ;;		None
 15539 ;; Return value:  Size  Location     Type
 15540 ;;                  1    wreg      void 
 15541 ;; Registers used:
 15542 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15543 ;; Tracked objects:
 15544 ;;		On entry : 0/0
 15545 ;;		On exit  : 0/0
 15546 ;;		Unchanged: 0/0
 15547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15551 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15552 ;;Total ram usage:        0 bytes
 15553 ;; Hardware stack levels used:    1
 15554 ;; Hardware stack levels required when called:    4
 15555 ;; This function calls:
 15556 ;;		_clear
 15557 ;;		_initbuffer
 15558 ;; This function is called by:
 15559 ;;		_main
 15560 ;; This function uses a non-reentrant model
 15561 ;;
 15562                           
 15563                           
 15564                           ;psect for function _init
 15565  0E3D                     _init:	
 15566                           
 15567                           ;main.c: 106: count1 = 0;
 15568                           
 15569                           ;incstack = 0
 15570                           ; Regs used in _init: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15571  0E3D  0020               	movlb	0	; select bank0
 15572  0E3E  01DC               	clrf	_count1
 15573  0E3F  01DD               	clrf	_count1+1
 15574                           
 15575                           ;main.c: 107: count2 = 0;
 15576  0E40  01DE               	clrf	_count2
 15577  0E41  01DF               	clrf	_count2+1
 15578                           
 15579                           ;main.c: 108: initbuffer();
 15580  0E42  318E  268D  318E   	fcall	_initbuffer
 15581                           
 15582                           ;main.c: 110: OSCFRQbits.HFFRQ = 0b0111;
 15583  0E45  0032               	movlb	18	; select bank18
 15584  0E46  081F               	movf	31,w	;volatile
 15585  0E47  39F0               	andlw	-16
 15586  0E48  3807               	iorlw	7
 15587  0E49  009F               	movwf	31	;volatile
 15588                           
 15589                           ;main.c: 111: OSCTUNEbits.HFTUN = 0b000000;
 15590  0E4A  30C0               	movlw	-64
 15591  0E4B  059E               	andwf	30,f	;volatile
 15592                           
 15593                           ;main.c: 112: clear();
 15594  0E4C  318D  252D         	fcall	_clear
 15595                           
 15596                           ;main.c: 113: WPUC = 0b11111111;
 15597  0E4E  30FF               	movlw	255
 15598  0E4F  0024               	movlb	4	; select bank4
 15599  0E50  008E               	movwf	14	;volatile
 15600                           
 15601                           ;main.c: 114: WPUB = 0b11111111;
 15602  0E51  30FF               	movlw	255
 15603  0E52  008D               	movwf	13	;volatile
 15604                           
 15605                           ;main.c: 115: WPUA = 0b11111111;
 15606  0E53  30FF               	movlw	255
 15607  0E54  008C               	movwf	12	;volatile
 15608                           
 15609                           ;main.c: 116: TRISBbits.TRISB6 = 1;
 15610  0E55  0021               	movlb	1	; select bank1
 15611  0E56  170D               	bsf	13,6	;volatile
 15612                           
 15613                           ;main.c: 117: TRISBbits.TRISB4 = 1;
 15614  0E57  160D               	bsf	13,4	;volatile
 15615                           
 15616                           ;main.c: 118: TRISCbits.TRISC6 = 1;
 15617  0E58  170E               	bsf	14,6	;volatile
 15618                           
 15619                           ;main.c: 119: INLVLBbits.INLVLB4 = 0;
 15620  0E59  0027               	movlb	7	; select bank7
 15621  0E5A  120D               	bcf	13,4	;volatile
 15622                           
 15623                           ;main.c: 120: INLVLBbits.INLVLB6 = 0;
 15624  0E5B  130D               	bcf	13,6	;volatile
 15625                           
 15626                           ;main.c: 121: INLVLCbits.INLVLC5 = 0;
 15627  0E5C  128E               	bcf	14,5	;volatile
 15628                           
 15629                           ;main.c: 123: TRISBbits.TRISB5 = 1;
 15630  0E5D  0021               	movlb	1	; select bank1
 15631  0E5E  168D               	bsf	13,5	;volatile
 15632                           
 15633                           ;main.c: 124: INLVLBbits.INLVLB5 = 0;
 15634  0E5F  0027               	movlb	7	; select bank7
 15635  0E60  128D               	bcf	13,5	;volatile
 15636                           
 15637                           ;main.c: 125: INLVLBbits.INLVLB7 = 0;
 15638  0E61  138D               	bcf	13,7	;volatile
 15639                           
 15640                           ;main.c: 126: INLVLAbits.INLVLA1 = 0;
 15641  0E62  108C               	bcf	12,1	;volatile
 15642                           
 15643                           ;main.c: 127: INLVLAbits.INLVLA2 = 0;
 15644  0E63  110C               	bcf	12,2	;volatile
 15645  0E64  0008               	return
 15646  0E65                     __end_of_init:	
 15647                           ;main.c: 129: return;
 15648                           
 15649                           
 15650                           	psect	text35
 15651  0E8D                     __ptext35:	
 15652 ;; *************** function _initbuffer *****************
 15653 ;; Defined at:
 15654 ;;		line 99 in file "D:/programdata/16F18346_Hand_IC.X/main.c"
 15655 ;; Parameters:    Size  Location     Type
 15656 ;;		None
 15657 ;; Auto vars:     Size  Location     Type
 15658 ;;  i               2    2[BANK0 ] int 
 15659 ;; Return value:  Size  Location     Type
 15660 ;;                  1    wreg      void 
 15661 ;; Registers used:
 15662 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 15663 ;; Tracked objects:
 15664 ;;		On entry : 0/0
 15665 ;;		On exit  : 0/0
 15666 ;;		Unchanged: 0/0
 15667 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15668 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15669 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15670 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15671 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15672 ;;Total ram usage:        4 bytes
 15673 ;; Hardware stack levels used:    1
 15674 ;; Hardware stack levels required when called:    3
 15675 ;; This function calls:
 15676 ;;		Nothing
 15677 ;; This function is called by:
 15678 ;;		_init
 15679 ;; This function uses a non-reentrant model
 15680 ;;
 15681                           
 15682                           
 15683                           ;psect for function _initbuffer
 15684  0E8D                     _initbuffer:	
 15685                           
 15686                           ;main.c: 100: for(int i = 0; i < 256; i++){
 15687                           
 15688                           ;incstack = 0
 15689                           ; Regs used in _initbuffer: [wreg+fsr1l+fsr1h+status,2+status,0]
 15690  0E8D  0020               	movlb	0	; select bank0
 15691  0E8E  01A2               	clrf	initbuffer@i
 15692  0E8F  01A3               	clrf	initbuffer@i+1
 15693  0E90                     L30:	
 15694  0E90  0823               	movf	initbuffer@i+1,w
 15695  0E91  3A80               	xorlw	128
 15696  0E92  00A0               	movwf	??_initbuffer
 15697  0E93  3081               	movlw	129
 15698  0E94  0220               	subwf	??_initbuffer,w
 15699  0E95  1D03               	skipz
 15700  0E96  2E99               	goto	u1705
 15701  0E97  3000               	movlw	0
 15702  0E98  0222               	subwf	initbuffer@i,w
 15703  0E99                     u1705:	
 15704  0E99  1803               	btfsc	3,0
 15705  0E9A  0008               	return
 15706                           
 15707                           ;main.c: 101: spi1_buffer_data[i] = 0;
 15708  0E9B  30F0               	movlw	240
 15709  0E9C  0020               	movlb	0	; select bank0
 15710  0E9D  00A0               	movwf	??_initbuffer
 15711  0E9E  3024               	movlw	36
 15712  0E9F  00A1               	movwf	??_initbuffer+1
 15713  0EA0  0822               	movf	initbuffer@i,w
 15714  0EA1  0720               	addwf	??_initbuffer,w
 15715  0EA2  0086               	movwf	6
 15716  0EA3  0823               	movf	initbuffer@i+1,w
 15717  0EA4  3D21               	addwfc	??_initbuffer+1,w
 15718  0EA5  0087               	movwf	7
 15719  0EA6  0181               	clrf	1
 15720                           
 15721                           ;main.c: 102: spi2_buffer_data[i] = 0;
 15722  0EA7  30F0               	movlw	240
 15723  0EA8  00A0               	movwf	??_initbuffer
 15724  0EA9  3025               	movlw	37
 15725  0EAA  00A1               	movwf	??_initbuffer+1
 15726  0EAB  0822               	movf	initbuffer@i,w
 15727  0EAC  0720               	addwf	??_initbuffer,w
 15728  0EAD  0086               	movwf	6
 15729  0EAE  0823               	movf	initbuffer@i+1,w
 15730  0EAF  3D21               	addwfc	??_initbuffer+1,w
 15731  0EB0  0087               	movwf	7
 15732  0EB1  0181               	clrf	1
 15733  0EB2  3001               	movlw	1
 15734  0EB3  07A2               	addwf	initbuffer@i,f
 15735  0EB4  3000               	movlw	0
 15736  0EB5  3DA3               	addwfc	initbuffer@i+1,f
 15737  0EB6  2E90               	goto	L30
 15738  0EB7                     __end_of_initbuffer:	
 15739                           
 15740                           	psect	text36
 15741  0D2D                     __ptext36:	
 15742 ;; *************** function _clear *****************
 15743 ;; Defined at:
 15744 ;;		line 9 in file "D:/programdata/16F18346_Hand_IC.X/util.c"
 15745 ;; Parameters:    Size  Location     Type
 15746 ;;		None
 15747 ;; Auto vars:     Size  Location     Type
 15748 ;;		None
 15749 ;; Return value:  Size  Location     Type
 15750 ;;                  1    wreg      void 
 15751 ;; Registers used:
 15752 ;;		status,2
 15753 ;; Tracked objects:
 15754 ;;		On entry : 0/0
 15755 ;;		On exit  : 0/0
 15756 ;;		Unchanged: 0/0
 15757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15761 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15762 ;;Total ram usage:        0 bytes
 15763 ;; Hardware stack levels used:    1
 15764 ;; Hardware stack levels required when called:    3
 15765 ;; This function calls:
 15766 ;;		Nothing
 15767 ;; This function is called by:
 15768 ;;		_init
 15769 ;; This function uses a non-reentrant model
 15770 ;;
 15771                           
 15772                           
 15773                           ;psect for function _clear
 15774  0D2D                     _clear:	
 15775                           
 15776                           ;util.c: 10: ANSELA = 0x00;
 15777                           
 15778                           ;incstack = 0
 15779                           ; Regs used in _clear: [status,2]
 15780  0D2D  0023               	movlb	3	; select bank3
 15781  0D2E  018C               	clrf	12	;volatile
 15782                           
 15783                           ;util.c: 11: ANSELB = 0x00;
 15784  0D2F  018D               	clrf	13	;volatile
 15785                           
 15786                           ;util.c: 12: ANSELC = 0x00;
 15787  0D30  018E               	clrf	14	;volatile
 15788                           
 15789                           ;util.c: 13: PORTA = 0x00;
 15790  0D31  0020               	movlb	0	; select bank0
 15791  0D32  018C               	clrf	12	;volatile
 15792                           
 15793                           ;util.c: 14: PORTB = 0x00;
 15794  0D33  018D               	clrf	13	;volatile
 15795                           
 15796                           ;util.c: 15: PORTC = 0x00;
 15797  0D34  018E               	clrf	14	;volatile
 15798                           
 15799                           ;util.c: 16: TRISA = 0x00;
 15800  0D35  0021               	movlb	1	; select bank1
 15801  0D36  018C               	clrf	12	;volatile
 15802                           
 15803                           ;util.c: 17: TRISB = 0x00;
 15804  0D37  018D               	clrf	13	;volatile
 15805                           
 15806                           ;util.c: 18: TRISC = 0x00;
 15807  0D38  018E               	clrf	14	;volatile
 15808  0D39  0008               	return
 15809  0D3A                     __end_of_clear:	
 15810                           
 15811                           	psect	intentry
 15812  0004                     __pintentry:	
 15813 ;; *************** function _InterMSSP *****************
 15814 ;; Defined at:
 15815 ;;		line 70 in file "D:/programdata/16F18346_Hand_IC.X/main.c"
 15816 ;; Parameters:    Size  Location     Type
 15817 ;;		None
 15818 ;; Auto vars:     Size  Location     Type
 15819 ;;  buf             1    8[COMMON] unsigned char 
 15820 ;; Return value:  Size  Location     Type
 15821 ;;                  1    wreg      void 
 15822 ;; Registers used:
 15823 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15824 ;; Tracked objects:
 15825 ;;		On entry : 0/0
 15826 ;;		On exit  : 0/0
 15827 ;;		Unchanged: 0/0
 15828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15829 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15830 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15831 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15832 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15833 ;;Total ram usage:        7 bytes
 15834 ;; Hardware stack levels used:    1
 15835 ;; Hardware stack levels required when called:    2
 15836 ;; This function calls:
 15837 ;;		_addAngle
 15838 ;;		_setSPI1sendData
 15839 ;; This function is called by:
 15840 ;;		Interrupt level 1
 15841 ;; This function uses a non-reentrant model
 15842 ;;
 15843                           
 15844  0004                     _InterMSSP:	
 15845                           
 15846                           ;incstack = 0
 15847                           ; Regs used in _InterMSSP: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15848  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 15849  0005  3180               	pagesel	$
 15850  0006  0020               	movlb	0	; select bank0
 15851  0007  087F               	movf	127,w
 15852  0008  00F9               	movwf	??_InterMSSP+5
 15853                           
 15854                           ;main.c: 72: if (PIR1bits.SSP1IF) {
 15855  0009  1D91               	btfss	17,3	;volatile
 15856  000A  2837               	goto	i1l3331
 15857                           
 15858                           ;main.c: 74: unsigned char buf = SSP1BUF;
 15859  000B  0024               	movlb	4	; select bank4
 15860  000C  0811               	movf	17,w	;volatile
 15861  000D  00F4               	movwf	??_InterMSSP
 15862  000E  0874               	movf	??_InterMSSP,w
 15863  000F  00FA               	movwf	InterMSSP@buf
 15864                           
 15865                           ;main.c: 75: if(buf > 0){
 15866  0010  087A               	movf	InterMSSP@buf,w
 15867  0011  1903               	btfsc	3,2
 15868  0012  2830               	goto	i1l3327
 15869                           
 15870                           ;main.c: 76: spi1_buffer_data[count1] = buf -SPI_OFFSET_BYTE;
 15871  0013  037D               	decf	_SPI_OFFSET_BYTE,w
 15872  0014  3AFF               	xorlw	255
 15873  0015  077A               	addwf	InterMSSP@buf,w
 15874  0016  00F4               	movwf	??_InterMSSP
 15875  0017  30F0               	movlw	240
 15876  0018  00F5               	movwf	??_InterMSSP+1
 15877  0019  3024               	movlw	36
 15878  001A  00F6               	movwf	??_InterMSSP+2
 15879  001B  0020               	movlb	0	; select bank0
 15880  001C  085C               	movf	_count1,w
 15881  001D  0775               	addwf	??_InterMSSP+1,w
 15882  001E  00F7               	movwf	??_InterMSSP+3
 15883  001F  085D               	movf	_count1+1,w
 15884  0020  3D76               	addwfc	??_InterMSSP+2,w
 15885  0021  00F8               	movwf	??_InterMSSP+4
 15886  0022  0877               	movf	??_InterMSSP+3,w
 15887  0023  0086               	movwf	6
 15888  0024  0878               	movf	??_InterMSSP+4,w
 15889  0025  0087               	movwf	7
 15890  0026  0874               	movf	??_InterMSSP,w
 15891  0027  0081               	movwf	1
 15892                           
 15893                           ;main.c: 77: setSPI1sendData();
 15894  0028  318D  25D6  3180   	fcall	_setSPI1sendData
 15895                           
 15896                           ;main.c: 78: count1++;
 15897  002B  3001               	movlw	1
 15898  002C  0020               	movlb	0	; select bank0
 15899  002D  07DC               	addwf	_count1,f
 15900  002E  3000               	movlw	0
 15901  002F  3DDD               	addwfc	_count1+1,f
 15902  0030                     i1l3327:	
 15903                           
 15904                           ;main.c: 79: }
 15905                           ;main.c: 80: if(count1 == 256){
 15906  0030  0020               	movlb	0	; select bank0
 15907  0031  035D               	decf	_count1+1,w
 15908  0032  045C               	iorwf	_count1,w
 15909  0033  1D03               	btfss	3,2
 15910  0034  2837               	goto	i1l3331
 15911                           
 15912                           ;main.c: 81: count1 = 0;
 15913  0035  01DC               	clrf	_count1
 15914  0036  01DD               	clrf	_count1+1
 15915  0037                     i1l3331:	
 15916                           
 15917                           ;main.c: 82: }
 15918                           ;main.c: 83: }
 15919                           ;main.c: 84: if (PIR2bits.SSP2IF) {
 15920  0037  1D92               	btfss	18,3	;volatile
 15921  0038  283B               	goto	i1l388
 15922                           
 15923                           ;main.c: 85: isSendSPI2 = 0;
 15924  0039  11F0               	bcf	_isSendSPI2/(0+8),_isSendSPI2& (0+7)
 15925                           
 15926                           ;main.c: 87: PIR2bits.SSP2IF = 0;
 15927  003A  1192               	bcf	18,3	;volatile
 15928  003B                     i1l388:	
 15929                           
 15930                           ;main.c: 88: }
 15931                           ;main.c: 89: if(IOCAFbits.IOCAF3 == 1){
 15932  003B  0027               	movlb	7	; select bank7
 15933  003C  1D93               	btfss	19,3	;volatile
 15934  003D  2840               	goto	i1l3337
 15935                           
 15936                           ;main.c: 91: addAngle();
 15937  003E  318D  2547         	fcall	_addAngle
 15938  0040                     i1l3337:	
 15939                           
 15940                           ;main.c: 92: }
 15941                           ;main.c: 93: PIR1bits.SSP1IF = 0 ;
 15942  0040  0020               	movlb	0	; select bank0
 15943  0041  1191               	bcf	17,3	;volatile
 15944                           
 15945                           ;main.c: 95: IOCAFbits.IOCAF3 = 0;
 15946  0042  0027               	movlb	7	; select bank7
 15947  0043  1193               	bcf	19,3	;volatile
 15948                           
 15949                           ;main.c: 96: PIR0bits.IOCIF = 0;
 15950  0044  0020               	movlb	0	; select bank0
 15951  0045  1210               	bcf	16,4	;volatile
 15952                           
 15953                           ;main.c: 97: PIR0bits.INTF = 0;
 15954  0046  1010               	bcf	16,0	;volatile
 15955  0047  0879               	movf	??_InterMSSP+5,w
 15956  0048  00FF               	movwf	127
 15957  0049  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 15958  004A  0009               	retfie
 15959  004B                     __end_of_InterMSSP:	
 15960                           
 15961                           	psect	text38
 15962  0DD6                     __ptext38:	
 15963 ;; *************** function _setSPI1sendData *****************
 15964 ;; Defined at:
 15965 ;;		line 91 in file "D:/programdata/16F18346_Hand_IC.X/spiControl.c"
 15966 ;; Parameters:    Size  Location     Type
 15967 ;;		None
 15968 ;; Auto vars:     Size  Location     Type
 15969 ;;		None
 15970 ;; Return value:  Size  Location     Type
 15971 ;;                  1    wreg      void 
 15972 ;; Registers used:
 15973 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15974 ;; Tracked objects:
 15975 ;;		On entry : 0/0
 15976 ;;		On exit  : 0/0
 15977 ;;		Unchanged: 0/0
 15978 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15979 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15980 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15981 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15982 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15983 ;;Total ram usage:        2 bytes
 15984 ;; Hardware stack levels used:    1
 15985 ;; Hardware stack levels required when called:    1
 15986 ;; This function calls:
 15987 ;;		_isSPI2read
 15988 ;; This function is called by:
 15989 ;;		_InterMSSP
 15990 ;; This function uses a non-reentrant model
 15991 ;;
 15992                           
 15993                           
 15994                           ;psect for function _setSPI1sendData
 15995  0DD6                     _setSPI1sendData:	
 15996                           
 15997                           ;spiControl.c: 92: if(!isSPI2read() == 1){
 15998                           
 15999                           ;incstack = 0
 16000                           ; Regs used in _setSPI1sendData: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 16001  0DD6  318D  2520  318D   	fcall	_isSPI2read
 16002  0DD9  1803               	btfsc	3,0
 16003  0DDA  2DF5               	goto	i1l3071
 16004                           
 16005                           ;spiControl.c: 93: SSP1BUF = spi2_buffer_data[read_count2];
 16006  0DDB  30F0               	movlw	240
 16007  0DDC  00F2               	movwf	??_setSPI1sendData
 16008  0DDD  3025               	movlw	37
 16009  0DDE  00F3               	movwf	??_setSPI1sendData+1
 16010  0DDF  0020               	movlb	0	; select bank0
 16011  0DE0  0864               	movf	_read_count2,w
 16012  0DE1  0772               	addwf	??_setSPI1sendData,w
 16013  0DE2  0086               	movwf	6
 16014  0DE3  0865               	movf	_read_count2+1,w
 16015  0DE4  3D73               	addwfc	??_setSPI1sendData+1,w
 16016  0DE5  0087               	movwf	7
 16017  0DE6  0801               	movf	1,w
 16018  0DE7  0024               	movlb	4	; select bank4
 16019  0DE8  0091               	movwf	17	;volatile
 16020                           
 16021                           ;spiControl.c: 94: read_count2++;
 16022  0DE9  3001               	movlw	1
 16023  0DEA  0020               	movlb	0	; select bank0
 16024  0DEB  07E4               	addwf	_read_count2,f
 16025  0DEC  3000               	movlw	0
 16026  0DED  3DE5               	addwfc	_read_count2+1,f
 16027                           
 16028                           ;spiControl.c: 95: if(read_count2 == 256){
 16029  0DEE  0365               	decf	_read_count2+1,w
 16030  0DEF  0464               	iorwf	_read_count2,w
 16031  0DF0  1D03               	btfss	3,2
 16032  0DF1  0008               	return
 16033                           
 16034                           ;spiControl.c: 96: read_count2 = 0;
 16035  0DF2  01E4               	clrf	_read_count2
 16036  0DF3  01E5               	clrf	_read_count2+1
 16037                           
 16038                           ;spiControl.c: 97: }
 16039                           ;spiControl.c: 98: }else{
 16040  0DF4  0008               	return
 16041  0DF5                     i1l3071:	
 16042                           
 16043                           ;spiControl.c: 99: SSP1BUF = 0x00;
 16044  0DF5  0024               	movlb	4	; select bank4
 16045  0DF6  0191               	clrf	17	;volatile
 16046  0DF7  0008               	return
 16047  0DF8                     __end_of_setSPI1sendData:	
 16048                           
 16049                           	psect	text39
 16050  0D20                     __ptext39:	
 16051 ;; *************** function _isSPI2read *****************
 16052 ;; Defined at:
 16053 ;;		line 75 in file "D:/programdata/16F18346_Hand_IC.X/spiControl.c"
 16054 ;; Parameters:    Size  Location     Type
 16055 ;;		None
 16056 ;; Auto vars:     Size  Location     Type
 16057 ;;		None
 16058 ;; Return value:  Size  Location     Type
 16059 ;;		None               void
 16060 ;; Registers used:
 16061 ;;		wreg, status,2, status,0
 16062 ;; Tracked objects:
 16063 ;;		On entry : 0/0
 16064 ;;		On exit  : 0/0
 16065 ;;		Unchanged: 0/0
 16066 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16068 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16070 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16071 ;;Total ram usage:        0 bytes
 16072 ;; Hardware stack levels used:    1
 16073 ;; This function calls:
 16074 ;;		Nothing
 16075 ;; This function is called by:
 16076 ;;		_setSPI1sendData
 16077 ;; This function uses a non-reentrant model
 16078 ;;
 16079                           
 16080                           
 16081                           ;psect for function _isSPI2read
 16082  0D20                     _isSPI2read:	
 16083                           
 16084                           ;spiControl.c: 76: if(read_count2 == count2){
 16085                           
 16086                           ;incstack = 0
 16087                           ; Regs used in _isSPI2read: [wreg+status,2+status,0]
 16088  0D20  0020               	movlb	0	; select bank0
 16089  0D21  085F               	movf	_count2+1,w
 16090  0D22  0665               	xorwf	_read_count2+1,w
 16091  0D23  1D03               	skipz
 16092  0D24  2D27               	goto	u174_25
 16093  0D25  085E               	movf	_count2,w
 16094  0D26  0664               	xorwf	_read_count2,w
 16095  0D27                     u174_25:	
 16096  0D27  1D03               	skipz
 16097  0D28  2D2B               	goto	i1l3003
 16098                           
 16099                           ;spiControl.c: 77: return 1;
 16100  0D29  1403               	setc
 16101                           
 16102                           ;spiControl.c: 78: }else{
 16103  0D2A  0008               	return
 16104  0D2B                     i1l3003:	
 16105                           
 16106                           ;spiControl.c: 79: return 0;
 16107  0D2B  1003               	clrc
 16108  0D2C  0008               	return
 16109  0D2D                     __end_of_isSPI2read:	
 16110                           
 16111                           	psect	text40
 16112  0D47                     __ptext40:	
 16113 ;; *************** function _addAngle *****************
 16114 ;; Defined at:
 16115 ;;		line 62 in file "D:/programdata/16F18346_Hand_IC.X/IO_control.c"
 16116 ;; Parameters:    Size  Location     Type
 16117 ;;		None
 16118 ;; Auto vars:     Size  Location     Type
 16119 ;;		None
 16120 ;; Return value:  Size  Location     Type
 16121 ;;                  1    wreg      void 
 16122 ;; Registers used:
 16123 ;;		wreg, status,2, status,0, pclath, cstack
 16124 ;; Tracked objects:
 16125 ;;		On entry : 0/0
 16126 ;;		On exit  : 0/0
 16127 ;;		Unchanged: 0/0
 16128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16132 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16133 ;;Total ram usage:        0 bytes
 16134 ;; Hardware stack levels used:    1
 16135 ;; Hardware stack levels required when called:    1
 16136 ;; This function calls:
 16137 ;;		_getMoter_lotate
 16138 ;;		_setCargoAngle
 16139 ;; This function is called by:
 16140 ;;		_InterMSSP
 16141 ;; This function uses a non-reentrant model
 16142 ;;
 16143                           
 16144                           
 16145                           ;psect for function _addAngle
 16146  0D47                     _addAngle:	
 16147                           
 16148                           ;IO_control.c: 63: linkAngle += getMoter_lotate();
 16149                           
 16150                           ;incstack = 0
 16151                           ; Regs used in _addAngle: [wreg+status,2+status,0+pclath+cstack]
 16152  0D47  318C  24DB  318D   	fcall	_getMoter_lotate
 16153  0D4A  0872               	movf	?_getMoter_lotate,w
 16154  0D4B  0021               	movlb	1	; select bank1
 16155  0D4C  07E5               	addwf	_linkAngle^(0+128),f
 16156  0D4D  0873               	movf	?_getMoter_lotate+1,w
 16157  0D4E  3DE6               	addwfc	(_linkAngle+1)^(0+128),f
 16158                           
 16159                           ;IO_control.c: 64: setCargoAngle(linkAngle);
 16160  0D4F  0866               	movf	(_linkAngle+1)^(0+128),w
 16161  0D50  00F3               	movwf	setCargoAngle@m_linkAngleTo+1
 16162  0D51  0865               	movf	_linkAngle^(0+128),w
 16163  0D52  00F2               	movwf	setCargoAngle@m_linkAngleTo
 16164  0D53  318C  24E1         	fcall	_setCargoAngle
 16165  0D55  0008               	return
 16166  0D56                     __end_of_addAngle:	
 16167                           
 16168                           	psect	text41
 16169  0CE1                     __ptext41:	
 16170 ;; *************** function _setCargoAngle *****************
 16171 ;; Defined at:
 16172 ;;		line 41 in file "D:/programdata/16F18346_Hand_IC.X/struct.c"
 16173 ;; Parameters:    Size  Location     Type
 16174 ;;  m_linkAngleT    2    0[COMMON] int 
 16175 ;; Auto vars:     Size  Location     Type
 16176 ;;		None
 16177 ;; Return value:  Size  Location     Type
 16178 ;;                  1    wreg      void 
 16179 ;; Registers used:
 16180 ;;		wreg
 16181 ;; Tracked objects:
 16182 ;;		On entry : 0/0
 16183 ;;		On exit  : 0/0
 16184 ;;		Unchanged: 0/0
 16185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16186 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16189 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16190 ;;Total ram usage:        2 bytes
 16191 ;; Hardware stack levels used:    1
 16192 ;; This function calls:
 16193 ;;		Nothing
 16194 ;; This function is called by:
 16195 ;;		_addAngle
 16196 ;; This function uses a non-reentrant model
 16197 ;;
 16198                           
 16199                           
 16200                           ;psect for function _setCargoAngle
 16201  0CE1                     _setCargoAngle:	
 16202                           
 16203                           ;struct.c: 42: cargoData.linkAngleTo = m_linkAngleTo;
 16204                           
 16205                           ;incstack = 0
 16206                           ; Regs used in _setCargoAngle: [wreg]
 16207  0CE1  0873               	movf	setCargoAngle@m_linkAngleTo+1,w
 16208  0CE2  0021               	movlb	1	; select bank1
 16209  0CE3  00B8               	movwf	((_cargoData+1)^(0+128)+5)
 16210  0CE4  0872               	movf	setCargoAngle@m_linkAngleTo,w
 16211  0CE5  00B7               	movwf	(_cargoData^(0+128)+5)
 16212  0CE6  0008               	return
 16213  0CE7                     __end_of_setCargoAngle:	
 16214                           
 16215                           	psect	text42
 16216  0CDB                     __ptext42:	
 16217 ;; *************** function _getMoter_lotate *****************
 16218 ;; Defined at:
 16219 ;;		line 29 in file "D:/programdata/16F18346_Hand_IC.X/cal_position.c"
 16220 ;; Parameters:    Size  Location     Type
 16221 ;;		None
 16222 ;; Auto vars:     Size  Location     Type
 16223 ;;		None
 16224 ;; Return value:  Size  Location     Type
 16225 ;;                  2    0[COMMON] int 
 16226 ;; Registers used:
 16227 ;;		wreg
 16228 ;; Tracked objects:
 16229 ;;		On entry : 0/0
 16230 ;;		On exit  : 0/0
 16231 ;;		Unchanged: 0/0
 16232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16233 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16234 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16236 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16237 ;;Total ram usage:        2 bytes
 16238 ;; Hardware stack levels used:    1
 16239 ;; This function calls:
 16240 ;;		Nothing
 16241 ;; This function is called by:
 16242 ;;		_addAngle
 16243 ;; This function uses a non-reentrant model
 16244 ;;
 16245                           
 16246                           
 16247                           ;psect for function _getMoter_lotate
 16248  0CDB                     _getMoter_lotate:	
 16249                           
 16250                           ;cal_position.c: 30: return position.moter_lotate;
 16251                           
 16252                           ;incstack = 0
 16253                           ; Regs used in _getMoter_lotate: [wreg]
 16254  0CDB  0022               	movlb	2	; select bank2
 16255  0CDC  0821               	movf	(_position+1)^(0+256),w
 16256  0CDD  00F3               	movwf	?_getMoter_lotate+1
 16257  0CDE  0820               	movf	_position^(0+256),w
 16258  0CDF  00F2               	movwf	?_getMoter_lotate
 16259  0CE0  0008               	return
 16260  0CE1                     __end_of_getMoter_lotate:	
 16261  007E                     btemp	set	126	;btemp
 16262  007E                     int$flags	set	126
 16263  007E                     wtemp	set	126
 16264  007E                     wtemp0	set	126
 16265  0080                     wtemp1	set	128
 16266  0082                     wtemp2	set	130
 16267  0084                     wtemp3	set	132
 16268  0086                     wtemp4	set	134
 16269  0088                     wtemp5	set	136
 16270  007F                     wtemp6	set	127
 16271  007E                     ttemp	set	126
 16272  007E                     ttemp0	set	126
 16273  0081                     ttemp1	set	129
 16274  0084                     ttemp2	set	132
 16275  0087                     ttemp3	set	135
 16276  007F                     ttemp4	set	127
 16277  007E                     ltemp	set	126
 16278  007E                     ltemp0	set	126
 16279  0082                     ltemp1	set	130
 16280  0086                     ltemp2	set	134
 16281  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    4
    Data        7
    BSS         177
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      14
    BANK0            80     60      79
    BANK1            80      0      71
    BANK2            80      0      74
    BANK3            80      0      18
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           64      0       0
    BANK16            0      0       0
    BANK17            0      0       0
    BANK18            0      0       0
    BANK19            0      0       0
    BANK20            0      0       0
    BANK21            0      0       0
    BANK22            0      0       0
    BANK23            0      0       0
    BANK24            0      0       0
    BANK25            0      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _InterMSSP in COMMON

    _InterMSSP->_setSPI1sendData
    _addAngle->_getMoter_lotate
    _addAngle->_setCargoAngle

Critical Paths under _main in BANK0

    _main->_setComunicateMode
    _spi_init->_spi1_init
    _spi_init->_spi2_init
    _setComunicateMode->_Calibrate_download
    _setComunicateMode->_readCargo
    _readCargo->_TransLong256To255
    _setIndexMode->_setMoter_lotate
    _EEPROM_download->_getCargoData
    _Calibrate_download->_TransLong256To255
    _isEndpoint->_setSPI1sendDataManual
    _TransLong256To255->___aldiv
    _InitCalibrate->_getCargoData
    _initTrain->_isTrainSt
    _init->_initbuffer

Critical Paths under _InterMSSP in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterMSSP in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterMSSP in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterMSSP in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterMSSP in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterMSSP in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterMSSP in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterMSSP in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _InterMSSP in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _InterMSSP in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _InterMSSP in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _InterMSSP in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _InterMSSP in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _InterMSSP in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _InterMSSP in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _InterMSSP in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _InterMSSP in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _InterMSSP in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _InterMSSP in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _InterMSSP in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _InterMSSP in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _InterMSSP in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _InterMSSP in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _InterMSSP in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _InterMSSP in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _InterMSSP in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    5090
                      _InitCalibrate
                               _init
                          _initCargo
                         _initComand
                     _initComu_types
                          _initIndex
                       _initPosition
                          _initTrain
                            _io_init
                         _isSPI1read
                         _read_train
                  _setComunicateMode
                    _setSPI2sendData
                           _spi_init
 ---------------------------------------------------------------------------------
 (1) _spi_init                                             0     0      0       2
                          _spi1_init
                          _spi2_init
 ---------------------------------------------------------------------------------
 (2) _spi2_init                                            2     2      0       1
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _spi1_init                                            2     2      0       1
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _setSPI2sendData                                      4     4      0       0
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _setComunicateMode                                    4     4      0    4906
                                             56 BANK0      4     4      0
                 _Calibrate_download
                    _EEPROM_download
                          _readCargo
 ---------------------------------------------------------------------------------
 (2) _readCargo                                           13    13      0    2284
                                             43 BANK0     13    13      0
                  _TransLong256To255
                       _clutchaction
                       _getCargoData
                       _restartCargo
                       _setIndexMode
 ---------------------------------------------------------------------------------
 (3) _setIndexMode                                         4     4      0     178
                                              1 BANK0      4     4      0
                    _setMoter_lotate
 ---------------------------------------------------------------------------------
 (4) _setMoter_lotate                                      1     1      0      66
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _clutchaction                                         1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _EEPROM_download                                     11    11      0     310
                                             17 BANK0     11    11      0
                         _ReadEEPROM
                       _getCargoData
                       _restartCargo
 ---------------------------------------------------------------------------------
 (3) _ReadEEPROM                                           5     3      2     154
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (2) _Calibrate_download                                  13    13      0    2200
                                             43 BANK0     13    13      0
                      _InitCalibrate
                  _TransLong256To255
                         _isEndpoint
                         _resetCargo
 ---------------------------------------------------------------------------------
 (3) _resetCargo                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _isEndpoint                                           6     6      0      47
                                              1 BANK0      6     6      0
              _setSPI1sendDataManual
 ---------------------------------------------------------------------------------
 (4) _setSPI1sendDataManual                                1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _TransLong256To255                                   28    24      4    1884
                                             15 BANK0     28    24      4
                            ___aldiv
                            ___almod
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8     220
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (4) ___almod                                             11     3      8     424
                                              0 BANK0     11     3      8
 ---------------------------------------------------------------------------------
 (4) ___aldiv                                             15     7      8     428
                                              0 BANK0     15     7      8
 ---------------------------------------------------------------------------------
 (3) _InitCalibrate                                       17    17      0      25
                                             17 BANK0     17    17      0
                       _getCargoData
 ---------------------------------------------------------------------------------
 (3) _getCargoData                                        17     1     16       0
                                              0 BANK0     17     1     16
 ---------------------------------------------------------------------------------
 (1) _read_train                                           4     4      0      45
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _isSPI1read                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _io_init                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initTrain                                            3     3      0      22
                                             11 BANK0      3     3      0
                          _isTrainSt
                     _resetTrainData
 ---------------------------------------------------------------------------------
 (2) _resetTrainData                                       0     0      0       0
                       _restartCargo
 ---------------------------------------------------------------------------------
 (3) _restartCargo                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _isTrainSt                                           11    11      0      22
                                              0 BANK0     11    11      0
 ---------------------------------------------------------------------------------
 (1) _initPosition                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initIndex                                            1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _initComu_types                                       1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _initComand                                           1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _initCargo                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0      90
                              _clear
                         _initbuffer
 ---------------------------------------------------------------------------------
 (2) _initbuffer                                           4     4      0      90
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _clear                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _InterMSSP                                            7     7      0     131
                                              2 COMMON     7     7      0
                           _addAngle
                    _setSPI1sendData
 ---------------------------------------------------------------------------------
 (6) _setSPI1sendData                                      2     2      0       0
                                              0 COMMON     2     2      0
                         _isSPI2read
 ---------------------------------------------------------------------------------
 (7) _isSPI2read                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _addAngle                                             0     0      0      86
                    _getMoter_lotate
                      _setCargoAngle
 ---------------------------------------------------------------------------------
 (7) _setCargoAngle                                        2     0      2      86
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (7) _getMoter_lotate                                      2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InitCalibrate
     _getCargoData
   _init
     _clear
     _initbuffer
   _initCargo
   _initComand
   _initComu_types
   _initIndex
   _initPosition
   _initTrain
     _isTrainSt
     _resetTrainData
       _restartCargo
   _io_init
   _isSPI1read
   _read_train
   _setComunicateMode
     _Calibrate_download
       _InitCalibrate
         _getCargoData
       _TransLong256To255
         ___aldiv
         ___almod
         ___lmul
       _isEndpoint
         _setSPI1sendDataManual
       _resetCargo
     _EEPROM_download
       _ReadEEPROM
       _getCargoData
       _restartCargo
     _readCargo
       _TransLong256To255
         ___aldiv
         ___almod
         ___lmul
       _clutchaction
       _getCargoData
       _restartCargo
       _setIndexMode
         _setMoter_lotate
   _setSPI2sendData
   _spi_init
     _spi1_init
     _spi2_init

 _InterMSSP (ROOT)
   _addAngle
     _getMoter_lotate
     _setCargoAngle
   _setSPI1sendData
     _isSPI2read

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM_1           3E0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BIGRAM             3F0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITCOMMON            E      0       3       2       21.4%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
COMMON               E      9       E       3      100.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
STACK                0      0       0       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     3C      4F       6       98.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      47       7       88.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
ABS                  0      0     100       8        0.0%
BITBANK1            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK2            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK2               50      0      4A      11       92.5%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK3            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK3               50      0      12      13       22.5%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK4            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK4               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK5            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK5               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK6            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK6               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITBANK7            50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BANK7               50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITBANK8            50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BANK8               50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITBANK9            50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BANK9               50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITBANK10           50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BANK10              50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITBANK11           50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     100      31        0.0%
BANK12              30      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITBANK13           50      0       0      33        0.0%
BANK13              50      0       0      34        0.0%
BITBANK14           50      0       0      35        0.0%
BANK14              50      0       0      36        0.0%
BITBANK15           50      0       0      37        0.0%
BANK15              40      0       0      38        0.0%
BITBANK16           50      0       0      39        0.0%
BANK16               0      0       0      40        0.0%
BITBANK17           50      0       0      41        0.0%
BANK17               0      0       0      42        0.0%
BITBANK18           50      0       0      43        0.0%
BANK18               0      0       0      44        0.0%
BITBANK19           50      0       0      45        0.0%
BANK19               0      0       0      46        0.0%
BITBANK20           50      0       0      47        0.0%
BANK20               0      0       0      48        0.0%
BITBANK21           50      0       0      49        0.0%
BANK21               0      0       0      50        0.0%
BITBANK22           50      0       0      51        0.0%
BANK22               0      0       0      52        0.0%
BITBANK23           50      0       0      53        0.0%
BANK23               0      0       0      54        0.0%
BITBANK24           50      0       0      55        0.0%
BANK24               0      0       0      56        0.0%
BITBANK25           20      0       0      57        0.0%
BANK25               0      0       0      58        0.0%


Microchip Technology PIC Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Wed Jul 18 07:34:04 2018

                  _InitCalibrate 0EB7                                pc 0002                      __CFG_CP$OFF 0000  
                             l75 02DB                               l84 02B5                               l85 02BD  
                             _RD 44A8                              l162 0D11                              l510 0FFF  
                            l408 07B3                              l440 0F80                              l259 0468  
                            l199 0FBF                              l914 04C1                              l927 0543  
                            l687 0744                     __CFG_CPD$OFF 0000                              wreg 0009  
        setComunicateMode@m_type 0059                             S3613 0834                             S3623 0840  
                           S3617 0800                             S3627 0820         Calibrate_download@bufint 0055  
                   __CFG_LVP$OFF 0000                             l3043 0FA4                             l3035 0F9B  
                           l3051 0FB9                             l2503 0EF5                             l3039 0F9F  
                           l3215 0764                             l3129 079D                             l2521 04D2  
                           l3049 0FA9                             l3139 07AE                             l2531 04F0  
                           l2621 031D                             l2543 051B                             l2623 0329  
                           l3185 0F4F                             l2529 04E2                             l2625 0331  
                           l2721 01F8                             l2705 0FE2                             l2801 0112  
                           l3361 07E6                             l3179 0D45                             l3187 0F5A  
                           l3195 0F6F                             l2547 0529                             l2539 0510  
                           l2571 057E                             l2731 021F                             l2483 0DA2  
                           l2707 0FF9                             l2811 0121                             l2803 0115  
                           l3611 0FAF                             l3371 07F9                             l3189 0F68  
                           l2565 0558                             l2645 03D2                             l2637 0380  
                           l2741 025B                             l2733 0227                             l3621 045E  
                           l2821 015A                             l2813 0125                             l2805 0118  
                           l2567 0566                             l2575 0589                             l2559 0550  
                           l2647 03D7                             l2639 03A9                             l2751 02C1  
                           l2743 027C                             l2727 0207                             l2487 0DAD  
                           l3615 01B9                             l2823 017B                             l2807 011B  
                           l2831 01C3                             l3625 02D1                             l2745 02A0  
                           l2737 0230                             l2729 0219                             l2825 019F  
                           l2817 012F                             l2809 011E                             l3369 07F6  
                           l2579 0597                             l2499 0EEB                             l2595 0F42  
                           l2763 02E0                             l3619 0FE8                             l3629 0F75  
                           l2589 0F2F                             l2861 0430                             l2829 01B4  
                           l2935 0733                             l2759 02CB                             l2871 0451  
                           l2863 0437                             l2855 040B                             l2695 0FDA  
                           l2791 00F7                             l2857 0416                             l2785 00D2  
                           l2859 0429                             l2699 0FDE                             l2795 0103  
                           l2787 00DD                             l2869 0446                             l2877 0458  
                           l2789 00F0                             l2887 0488                             l2899 04A3  
                           u1120 0D61                             u1205 04E5                             u1225 04F1  
                           u1305 055B                             u1145 0EF6                             u1235 0505  
                           u1155 0EFD                             u1245 0511                             u1325 0574  
                           u1405 037B                             u1335 057F                             u1415 0396  
                           u1425 038A                             u1505 0296                             u1610 0404  
                           u1380 0ED5                             u1540 00CB                             u1605 01D2  
                           u1535 02EF                             u1455 0FCD                             u1640 044F  
                           u1705 0E99                             u1725 0708                             u1485 0254  
                           u1495 0275                             u1575 0153                             u1825 07BD  
                           u1585 0174                             u1835 0D41                             u1595 0195  
                           u1755 0F8E                             u1685 0497                             _WPUA 020C  
                           _WPUB 020D                             _WPUC 020E                     __CFG_WRT$OFF 0000  
                  __CFG_FCMEN$ON 0000               TransLong256To255@i 0045               TransLong256To255@j 003B  
                  ?_clutchaction 0072                             _main 07C9                             _init 0E3D  
                           fsr0h 0005                             fsr1h 0007                             fsr0l 0004  
                           indf0 0000                             indf1 0001                             fsr1l 0006  
                           btemp 007E                    __CFG_BOREN$ON 0000                             ltemp 007E  
                           start 004B                             ttemp 007E                             wtemp 007E  
                  __CFG_CSWEN$ON 0000                   ?_InitCalibrate 0072                  __end_of___aldiv 0532  
                __end_of___almod 05A0                            ?_main 0072                            ?_init 0072  
                  __CFG_WDTE$OFF 0000                   __CFG_DEBUG$OFF 0000                            i1l388 003B  
           __end_of_getCargoData 0D66                            _PORTA 000C                            _PORTB 000D  
                          _PORTC 000E                            _TRISA 008C                            _TRISB 008D  
                          _TRISC 008E               setComunicateMode@i 005A         __size_of_setMoter_lotate 001F  
            ___lmul@multiplicand 0024   __size_of_setSPI1sendDataManual 0006    __end_of_setSPI1sendDataManual 0CED  
                          _clear 0D2D                  __end_of_io_init 0CFF                            _index 0158  
                 __pbitbssCOMMON 0380                   ??_clutchaction 0020                            ltemp0 007E  
                          ltemp1 0082                            ltemp2 0086                            ltemp3 0080  
                 __CFG_BORV$HIGH 0000                       _ReadEEPROM 0E1A                            ttemp0 007E  
                          ttemp1 0081                            ttemp2 0084                            ttemp3 0087  
                          ttemp4 007F                            status 0003                            wtemp0 007E  
                          wtemp1 0080                            wtemp2 0082                            wtemp3 0084  
                          wtemp4 0086                            wtemp5 0088                            wtemp6 007F  
       __size_of_EEPROM_download 00D0                   __CFG_MCLRE$OFF 0000                  __initialization 004D  
                   __end_of_main 07FD                     __end_of_init 0E65                           ??_main 005C  
                         ??_init 0024                    ?_initPosition 0072                           ?_clear 0072  
               __end_of_addAngle 0D56                           _ANSELA 018C                           _ANSELB 018D  
                         _ANSELC 018E                           _RA2PPS 0E92                           _RC2PPS 0EA2  
                         i1l3003 0D2B                           _RB7PPS 0E9F                           i1l3071 0DF5  
                         i1l3331 0037                           i1l3327 0030                           i1l3337 0040  
                         u174_25 0D27                           _IOCode 01A0         __size_of_setSPI1sendData 0022  
             __size_of_InterMSSP 0047                  ??_InitCalibrate 0031                __end_of_VENDER_ID 1004  
                 __CFG_PWRTE$OFF 0000         __size_of_setSPI2sendData 004B             TransLong256To255@buf 0047  
        __size_of_resetTrainData 0009             TransLong256To255@mod 003D             TransLong256To255@pow 0041  
    __size_of_Calibrate_download 011C                           ___lmul 0EE2                        ??___aldiv 0028  
                      ??___almod 0028                   __CFG_STVREN$ON 0000                           _count1 005C  
                         _count2 005E                           _readNG 0067                           _readOK 007C  
        __size_of_initComu_types 006D                        ??_io_init 0020                     __pdataCOMMON 007D  
                 ??_initPosition 0020                 __end_of_spi_init 0D09                      initbuffer@i 0022  
                   isTrainSt@buf 002A                  _getMoter_lotate 0CDB                     _ra3condision 0385  
              ??_setMoter_lotate 0020                      ?_ReadEEPROM 0020          __end_of__initialization 00A3  
                 __pcstackCOMMON 0072                   ReadEEPROM@addr 0020                     __pidataBANK0 07FD  
                   __pidataBANK1 0CD2               __end_of_MACHINE_ID 1002                    __end_of_clear 0D3A  
          __size_of_getCargoData 0010                ??_EEPROM_download 0031             __end_of_clutchaction 0D14  
              __end_of_InterMSSP 004B                  __CFG_LPBOREN$ON 0000                          ??_clear 0020  
                  ?_setIndexMode 0072                     InterMSSP@buf 007A                       __pbssBANK0 005C  
                     __pbssBANK1 00A0                       __pbssBANK2 0120                       __pbssBANK3 01A0  
             __size_of_isTrainSt 004E              clutchaction@comannd 0020           InitCalibrate@cargoData 0032  
             __size_of_initCargo 0019            EEPROM_download@bufint 0039               __size_of_readCargo 0137  
             __size_of_initIndex 006D                  _startTrainBytes 00D1               __size_of_initTrain 0049  
                     _isSPI1read 0D3A                       _isSPI2read 0D20                     _getCargoData 0D56  
                     __pmaintext 07C9               __size_of_spi1_init 0020               __size_of_spi2_init 0022  
                        ?___lmul 0020                  __CFG_PPS1WAY$ON 0000                ??_setSPI1sendData 0072  
                     __pintentry 0004  Calibrate_download@spi_Read_data 0057                        ?_addAngle 0072  
              ??_setSPI2sendData 0020                   ___lmul@product 0028              __CFG_RSTOSC$HFINT32 0000  
            __size_of_ReadEEPROM 0023                       _isEndpoint 0F12          __end_of_getMoter_lotate 0CE1  
                   _isCalibrated 0380                    setIndexMode@i 0023           __size_of_setCargoAngle 0006  
                        _NVMADRH 0892                          _NVMADRL 0891                          _NVMDATH 0894  
                        _NVMDATL 0893                   ??_setIndexMode 0021                  _EEPROM_ADDR_buf 00D5  
                        _SSP1BUF 0211                          _SSP2BUF 0219                       _isSendSPI2 0383  
                     _comu_types 0146              setIndexMode@m_index 0022                   _resetTrainData 0CED  
           __end_of_initPosition 0E8D                       _initComand 067A            TransLong256To255@data 002F  
                        ___aldiv 04B0                          ___almod 0532                        ?_spi_init 0072  
                __size_of___lmul 0030                       ??_addAngle 0074                __end_of_isTrainSt 0735  
                     _initbuffer 0E8D                   _initComu_types 060D               isEndpoint@spi2data 0026  
                        __ptext1 0CFF                          __ptext2 0DF8                          __ptext3 0DB6  
                        __ptext4 0735                          __ptext5 0F81                          __ptext6 00A7  
                        __ptext7 0FC0                          __ptext8 0D97                __end_of_initCargo 0D97  
                        __ptext9 0D09                       _read_train 0F46                          _command 00A0  
              __end_of_readCargo 01DE                __end_of_initIndex 060D                          _counta2 00DB  
                        _io_init 0CF6                __end_of_initTrain 07C9                    ?_restartCargo 0072  
               ___aldiv@dividend 0024                        _IOCAFbits 0393                        _IOCANbits 0392  
                      _IOCAPbits 0391                __end_of_spi1_init 0DD6                __end_of_spi2_init 0E1A  
                        _st_type 006C                          clrloop0 0D15            _setSPI1sendDataManual 0CE7  
           end_of_initialization 00A3           __end_of_resetTrainData 0CF6                      ?_isSPI1read 0072  
                    ?_isSPI2read 0072                       _resetCargo 0D66                    _setCargoAngle 0CE1  
               ___aldiv@quotient 002B            __size_of_clutchaction 000B                       ??_spi_init 0022  
                      _VENDER_ID 1002                 readCargo@buflong 0051                     __pstringtext 1000  
         __end_of_initComu_types 067A                   spi1_init@dummy 0021                      ?_isEndpoint 0072  
                _setMoter_lotate 0D97                 ?_getMoter_lotate 0072                   ??_restartCargo 0020  
                _SPI_OFFSET_BYTE 007D                        _TRISBbits 008D                        _TRISCbits 008E  
                  __pbssBIGRAM_1 24F0                 __CFG_FEXTOSC$OFF 0000                   spi2_init@dummy 0021  
                   ??_ReadEEPROM 0022                     _clutchaction 0D09                  ?_resetTrainData 0072  
                _EEPROM_download 03E0       __end_of_Calibrate_download 02FA                   ?_setCargoAngle 0072  
                    ?_initComand 0072            __end_of_InitCalibrate 0EE2                  ReadEEPROM@Hiadr 0023  
                ReadEEPROM@Loadr 0024             __end_of_setIndexMode 1000                  ?_initComu_types 0072  
                 __end_of___lmul 0F12                    __pidataCOMMON 07FF                      ?_initbuffer 0072  
                    ?_read_train 0072               __end_of_ReadEEPROM 0E3D              __size_of_isSPI1read 000D  
            __size_of_isSPI2read 000D                    __pbitnvCOMMON 03D8              start_initialization 004D  
         ?_setSPI1sendDataManual 0072                        _InterMSSP 0004                   _isEndPointTrig 03D8  
          __size_of_initPosition 0028                  _setSPI1sendData 0DD6                  _setSPI2sendData 0735  
                    ?_resetCargo 0072              __size_of_isEndpoint 0034                _TransLong256To255 02FA  
                       ??___lmul 0028          __end_of_setMoter_lotate 0DB6               ?_TransLong256To255 002F  
                    __pdataBANK0 006D                      __pdataBANK1 00E3                _setComunicateMode 0F81  
              __size_of_addAngle 000F               ?_setComunicateMode 0072              ??_TransLong256To255 0033  
                    __pbssCOMMON 007C                        ___latbits 0003                    __pcstackBANK0 0020  
                   _initPosition 0E65           EEPROM_download@buflong 0035                      _cargo_index 0134  
            ??_setComunicateMode 0058              __size_of_initComand 006D                       ?_InterMSSP 0072  
        __end_of_EEPROM_download 04B0                        _calibdata 00C2              __size_of_initbuffer 002A  
                      _cargoData 00B2                  ??_setCargoAngle 0074              __size_of_read_train 003B  
      __end_of_TransLong256To255 03E0             __end_of_restartCargo 0CDB            _spi1_send_buffer_data 26F0  
      Calibrate_download@buflong 0051        __end_of_setComunicateMode 0FC0                         ?___aldiv 0020  
                       ?___almod 0020                        _direction 00E3          readCargo@spi1_Read_data 0057  
              __size_of_spi_init 000A                 ___almod@dividend 0024                        __pswtext1 0834  
                      __pswtext2 0800                        __pswtext3 0840                        __pswtext4 0820  
                      _isMycargo 0382                         ?_io_init 0072                        _isTrainSt 06E7  
            __size_of_resetCargo 0018                        _countabuf 0060                        _initCargo 0D7E  
                      _readCargo 00A7                        _initIndex 05A0                        _linkAngle 00E5  
        __end_of_setSPI1sendData 0DF8                        _initTrain 0780                   __size_of_clear 000D  
        __end_of_setSPI2sendData 0780                  ___aldiv@divisor 0020                        _spi1_init 0DB6  
                      _spi2_init 0DF8                  ___aldiv@counter 0029                         _LATAbits 010C  
                   ??_isSPI1read 0020                     ??_isSPI2read 0072                        clear_ram0 0D14  
     setCargoAngle@m_linkAngleTo 0072            __size_of_setIndexMode 0040                         _PIE0bits 0090  
                       _PIE1bits 0091                         _PIE2bits 0092                        _send_data 0068  
                       _PIR0bits 0010                         _PIR1bits 0011                         _PIR2bits 0012  
                readCargo@bufint 0055                 ?_setMoter_lotate 0072                     ??_isEndpoint 0021  
                     ?_isTrainSt 0072               __end_of_isSPI1read 0D47               __end_of_isSPI2read 0D2D  
                     ?_initCargo 0072                    _SSP1SSPPSbits 0E22                       ?_readCargo 0072  
                     ?_initIndex 0072                       ?_initTrain 0072                      ??_InterMSSP 0074  
                   _setIndexMode 0FC0                ___lmul@multiplier 0020                    _SSP2SSPPSbits 0E1F  
               ??_resetTrainData 0020                 ?_EEPROM_download 0072                         _RaadData 00D7  
                 _eeprom_address 0066                       ?_spi1_init 0072                       ?_spi2_init 0072  
     __size_of_TransLong256To255 00E6                 ??_initComu_types 0020               __end_of_isEndpoint 0F46  
                   ??_initComand 0020       __size_of_setComunicateMode 003F                 __size_of___aldiv 0082  
               __size_of___almod 006E                         _addAngle 0D47                     ??_initbuffer 0020  
               _spi1_buffer_data 24F0                     ??_read_train 0020               _Calibrate_download 01DE  
        ??_setSPI1sendDataManual 0020                   _workingcounta0 0386                   _workingcounta1 0387  
                 _workingcounta2 0388                   _workingcounta3 0389                 __size_of_io_init 0009  
                     _MACHINE_ID 1000                      _read_count1 0062                      _read_count2 0064  
            ?_Calibrate_download 0072                 ?_setSPI1sendData 0072                         __ptext10 03E0  
                       __ptext11 0E1A                         __ptext20 0EB7                         __ptext12 01DE  
                       __ptext21 0D56                         __ptext13 0D66                         __ptext30 05A0  
                       __ptext22 0F46                         __ptext14 0F12                         __ptext31 060D  
                       __ptext23 0D3A                         __ptext15 0CE7                         __ptext40 0D47  
                       __ptext32 067A                         __ptext24 0CF6                         __ptext16 02FA  
                       __ptext41 0CE1                         __ptext33 0D7E                         __ptext25 0780  
                       __ptext17 0EE2                         __ptext42 0CDB                         __ptext34 0E3D  
                       __ptext26 0CED                         __ptext18 0532                         __ptext35 0E8D  
                       __ptext27 0CD6                         __ptext19 04B0                         __ptext36 0D2D  
                       __ptext28 06E7                         __ptext29 0E65                         __ptext38 0DD6  
                       __ptext39 0D20                     _SSP1CON1bits 0215                     _SSP1CON3bits 0217  
                       _isMyAddr 0381               __end_of_initComand 06E7                 ?_setSPI2sendData 0072  
                   _SSP2CON1bits 021D                   _spi1_Read_data 0069                  ___almod@divisor 0020  
                   _SSP2CON3bits 021F                  ___almod@counter 0029         __size_of_getMoter_lotate 0006  
          __size_of_restartCargo 0005                         _linkInfo 00CB                    __size_of_main 0034  
                  __size_of_init 0028                     ??_resetCargo 0020               __end_of_initbuffer 0EB7  
                  ?_getCargoData 0020                   _spi2_Read_data 006A               __end_of_read_train 0F81  
           ??_Calibrate_download 004B                      _isreadTrain 0384                         _spi_init 0CFF  
                       int$flags 007E                         _trainPos 00E1                         _position 0120  
                 _spi2_Send_data 006B                     _SSP1STATbits 0214                 _spi2_buffer_data 25F0  
                   _SSP2STATbits 021C                    _st_dataLength 006D                       _INLVLAbits 038C  
                     _INLVLBbits 038D                       _INLVLCbits 038E                      ??_isTrainSt 0020  
                    _OSCTUNEbits 091E                       _INTCONbits 000B                      _NVMCON1bits 0895  
                    ??_initCargo 0020                     _restartCargo 0CD6               __end_of_resetCargo 0D7E  
                    ??_readCargo 004B                      ??_initIndex 0020                      ??_initTrain 002B  
         __size_of_InitCalibrate 002B                      _send_count1 00DD            setMoter_lotate@lotate 0020  
                       intlevel1 0000                      ??_spi1_init 0020                      ??_spi2_init 0020  
                 ??_getCargoData 0030                __CFG_CLKOUTEN$OFF 0000    EEPROM_download@spi1_Read_data 003B  
                     _OSCFRQbits 091F       TransLong256To255@TransData 0037                     ___aldiv@sign 002A  
      setSPI1sendDataManual@data 0020                       _SIZE_COUNT 00D9                     ___almod@sign 002A  
               read_train@bufint 0022                  _spi1_send_count 00DF            __end_of_setCargoAngle 0CE7  
              ??_getMoter_lotate 0074  
